{
  "openapi": "3.0.1",
  "info": {
    "title": "Provider catalog",
    "version": "1.0.0",
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/license/mit"
    }
  },
  "servers": [],
  "paths": {},
  "components": {
    "schemas": {
      "AuthType": {
        "title": "Auth Type",
        "description": "The type of authentication required by the provider.",
        "type": "string",
        "enum": [
          "oauth2",
          "apiKey",
          "basic",
          "jwt",
          "none"
        ],
        "x-oapi-codegen-extra-tags": {
          "validate": "required"
        }
      },
      "Support": {
        "title": "Support",
        "type": "object",
        "description": "The supported features for the provider.",
        "x-oapi-codegen-extra-tags": {
          "validate": "required"
        },
        "required": [
          "bulkWrite",
          "proxy",
          "read",
          "subscribe",
          "write"
        ],
        "properties": {
          "bulkWrite": {
            "title": "Bulk Write Support",
            "type": "object",
            "x-oapi-codegen-extra-tags": {
              "validate": "required"
            },
            "required": [
              "insert",
              "update",
              "upsert",
              "delete"
            ],
            "properties": {
              "insert": {
                "type": "boolean"
              },
              "update": {
                "type": "boolean"
              },
              "upsert": {
                "type": "boolean"
              },
              "delete": {
                "type": "boolean"
              }
            }
          },
          "proxy": {
            "type": "boolean"
          },
          "read": {
            "type": "boolean"
          },
          "subscribe": {
            "type": "boolean"
          },
          "write": {
            "type": "boolean"
          },
          "subscribeSupport": {
            "title": "Subscribe Support",
            "type": "object",
            "properties": {
              "create": {
                "type": "boolean"
              },
              "update": {
                "type": "boolean"
              },
              "delete": {
                "type": "boolean"
              },
              "passThrough": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "BulkWriteSupport": {
        "title": "Bulk Write Support",
        "type": "object",
        "x-oapi-codegen-extra-tags": {
          "validate": "required"
        },
        "required": [
          "insert",
          "update",
          "upsert",
          "delete"
        ],
        "properties": {
          "insert": {
            "type": "boolean"
          },
          "update": {
            "type": "boolean"
          },
          "upsert": {
            "type": "boolean"
          },
          "delete": {
            "type": "boolean"
          }
        }
      },
      "TokenMetadataFields": {
        "title": "Token Metadata Fields",
        "type": "object",
        "description": "Fields to be used to extract token metadata from the token response.",
        "properties": {
          "workspaceRefField": {
            "type": "string",
            "example": "account-id",
            "x-go-type-skip-optional-pointer": true
          },
          "consumerRefField": {
            "type": "string",
            "example": "user-id",
            "x-go-type-skip-optional-pointer": true
          },
          "scopesField": {
            "type": "string",
            "example": "scopes",
            "x-go-type-skip-optional-pointer": true
          },
          "otherFields": {
            "type": "array",
            "title": "Token Metadata Fields - Other fields",
            "description": "Additional fields to extract and transform from the token response",
            "items": {
              "type": "object",
              "required": [
                "name",
                "displayName",
                "path"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The internal name of the field",
                  "x-go-type-skip-optional-pointer": true
                },
                "displayName": {
                  "type": "string",
                  "description": "The human-readable name of the field",
                  "x-go-type-skip-optional-pointer": true
                },
                "path": {
                  "type": "string",
                  "description": "The path to the field in the token response (accepts dot notation for nested fields)",
                  "example": "owner.siteId",
                  "x-go-type-skip-optional-pointer": true
                },
                "capture": {
                  "type": "string",
                  "description": "A regex expression to capture the value that we need from the path. There must be only one capture group named 'result' in the expression. If not provided, will cause an error.",
                  "example": "https:\\/\\/(?<result>[^.]+)\\.docusign\\.net",
                  "x-go-type-skip-optional-pointer": true
                }
              }
            }
          }
        }
      },
      "Media": {
        "title": "Media",
        "properties": {
          "regular": {
            "title": "Media Type Regular",
            "type": "object",
            "description": "Media for light/regular mode.",
            "properties": {
              "iconURL": {
                "type": "string",
                "example": "https://example.com/icon.png",
                "description": "URL to the icon for the provider.",
                "x-go-type-skip-optional-pointer": true
              },
              "logoURL": {
                "type": "string",
                "example": "https://example.com/logo.png",
                "description": "URL to the logo for the provider.",
                "x-go-type-skip-optional-pointer": true
              }
            }
          },
          "darkMode": {
            "title": "Media Type Dark Mode",
            "type": "object",
            "description": "Media to be used in dark mode.",
            "properties": {
              "iconURL": {
                "type": "string",
                "example": "https://example.com/icon.png",
                "description": "URL to the icon for the provider that is to be used in dark mode.",
                "x-go-type-skip-optional-pointer": true
              },
              "logoURL": {
                "type": "string",
                "example": "https://example.com/logo.png",
                "description": "URL to the logo for the provider that is to be used in dark mode.",
                "x-go-type-skip-optional-pointer": true
              }
            }
          }
        }
      },
      "TokenMetadataFieldsOtherFields": {
        "type": "array",
        "title": "Token Metadata Fields - Other fields",
        "description": "Additional fields to extract and transform from the token response",
        "items": {
          "type": "object",
          "required": [
            "name",
            "displayName",
            "path"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The internal name of the field",
              "x-go-type-skip-optional-pointer": true
            },
            "displayName": {
              "type": "string",
              "description": "The human-readable name of the field",
              "x-go-type-skip-optional-pointer": true
            },
            "path": {
              "type": "string",
              "description": "The path to the field in the token response (accepts dot notation for nested fields)",
              "example": "owner.siteId",
              "x-go-type-skip-optional-pointer": true
            },
            "capture": {
              "type": "string",
              "description": "A regex expression to capture the value that we need from the path. There must be only one capture group named 'result' in the expression. If not provided, will cause an error.",
              "example": "https:\\/\\/(?<result>[^.]+)\\.docusign\\.net",
              "x-go-type-skip-optional-pointer": true
            }
          }
        }
      },
      "MediaTypeDarkMode": {
        "title": "Media Type Dark Mode",
        "type": "object",
        "description": "Media to be used in dark mode.",
        "properties": {
          "iconURL": {
            "type": "string",
            "example": "https://example.com/icon.png",
            "description": "URL to the icon for the provider that is to be used in dark mode.",
            "x-go-type-skip-optional-pointer": true
          },
          "logoURL": {
            "type": "string",
            "example": "https://example.com/logo.png",
            "description": "URL to the logo for the provider that is to be used in dark mode.",
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "MediaTypeRegular": {
        "title": "Media Type Regular",
        "type": "object",
        "description": "Media for light/regular mode.",
        "properties": {
          "iconURL": {
            "type": "string",
            "example": "https://example.com/icon.png",
            "description": "URL to the icon for the provider.",
            "x-go-type-skip-optional-pointer": true
          },
          "logoURL": {
            "type": "string",
            "example": "https://example.com/logo.png",
            "description": "URL to the logo for the provider.",
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "Labels": {
        "title": "Labels",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "Oauth2Opts": {
        "title": "OAuth2 Options",
        "type": "object",
        "description": "Configuration for OAuth2.0. Must be provided if authType is oauth2.",
        "required": [
          "grantType",
          "tokenURL",
          "explicitScopesRequired",
          "explicitWorkspaceRequired",
          "tokenMetadataFields"
        ],
        "properties": {
          "grantType": {
            "type": "string",
            "enum": [
              "authorizationCode",
              "authorizationCodePKCE",
              "clientCredentials",
              "password"
            ]
          },
          "authURL": {
            "type": "string",
            "example": "https://login.salesforce.com/services/oauth2/authorize",
            "description": "The authorization URL.",
            "x-go-type-skip-optional-pointer": true
          },
          "tokenURL": {
            "type": "string",
            "example": "https://login.salesforce.com/services/oauth2/token",
            "description": "The token URL.",
            "x-oapi-codegen-extra-tags": {
              "validate": "required"
            }
          },
          "explicitScopesRequired": {
            "type": "boolean",
            "description": "Whether scopes are required to be known ahead of the OAuth flow.",
            "example": true
          },
          "explicitWorkspaceRequired": {
            "type": "boolean",
            "description": "Whether the workspace is required to be known ahead of the OAuth flow.",
            "example": true
          },
          "audience": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "https://api.mparticle.com"
            ],
            "description": "A list of URLs that represent the audience for the token, which is needed for some client credential grant flows.",
            "x-go-type-skip-optional-pointer": true
          },
          "tokenMetadataFields": {
            "title": "Token Metadata Fields",
            "type": "object",
            "description": "Fields to be used to extract token metadata from the token response.",
            "properties": {
              "workspaceRefField": {
                "type": "string",
                "example": "account-id",
                "x-go-type-skip-optional-pointer": true
              },
              "consumerRefField": {
                "type": "string",
                "example": "user-id",
                "x-go-type-skip-optional-pointer": true
              },
              "scopesField": {
                "type": "string",
                "example": "scopes",
                "x-go-type-skip-optional-pointer": true
              },
              "otherFields": {
                "type": "array",
                "title": "Token Metadata Fields - Other fields",
                "description": "Additional fields to extract and transform from the token response",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "displayName",
                    "path"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The internal name of the field",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "displayName": {
                      "type": "string",
                      "description": "The human-readable name of the field",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "path": {
                      "type": "string",
                      "description": "The path to the field in the token response (accepts dot notation for nested fields)",
                      "example": "owner.siteId",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "capture": {
                      "type": "string",
                      "description": "A regex expression to capture the value that we need from the path. There must be only one capture group named 'result' in the expression. If not provided, will cause an error.",
                      "example": "https:\\/\\/(?<result>[^.]+)\\.docusign\\.net",
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                }
              }
            }
          },
          "docsURL": {
            "type": "string",
            "description": "URL with more information about where to retrieve Client ID and Client Secret, etc.",
            "example": "https://docs.example.com/client-credentials",
            "x-go-type-skip-optional-pointer": true
          },
          "authURLParams": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "x-go-type-skip-optional-pointer": true,
            "example": {
              "access_type": "offline",
              "duration": "permanent"
            }
          }
        }
      },
      "ApiKeyOpts": {
        "title": "API Key Options",
        "type": "object",
        "description": "Configuration for API key. Must be provided if authType is apiKey.",
        "required": [
          "attachmentType"
        ],
        "properties": {
          "attachmentType": {
            "type": "string",
            "description": "How the API key should be attached to requests.",
            "enum": [
              "query",
              "header"
            ],
            "x-oapi-codegen-extra-tags": {
              "validate": "required"
            }
          },
          "query": {
            "title": "API Key Query Options",
            "type": "object",
            "description": "Configuration for API key in query parameter. Must be provided if type is in-query.",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "example": "api_key",
                "description": "The name of the query parameter to be used for the API key.",
                "x-go-type-skip-optional-pointer": true
              }
            }
          },
          "header": {
            "title": "API Key Header Options",
            "type": "object",
            "description": "Configuration for API key in header. Must be provided if type is in-header.",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string",
                "example": "X-Api-Key",
                "description": "The name of the header to be used for the API key.",
                "x-go-type-skip-optional-pointer": true
              },
              "valuePrefix": {
                "type": "string",
                "example": "Bearer ",
                "description": "The prefix to be added to the API key value when it is sent in the header.",
                "x-go-type-skip-optional-pointer": true
              }
            }
          },
          "docsURL": {
            "type": "string",
            "description": "URL with more information about how to get or use an API key.",
            "example": "https://docs.example.com/api-key",
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "ApiKeyOptsQuery": {
        "title": "API Key Query Options",
        "type": "object",
        "description": "Configuration for API key in query parameter. Must be provided if type is in-query.",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "api_key",
            "description": "The name of the query parameter to be used for the API key.",
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "ApiKeyOptsHeader": {
        "title": "API Key Header Options",
        "type": "object",
        "description": "Configuration for API key in header. Must be provided if type is in-header.",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "X-Api-Key",
            "description": "The name of the header to be used for the API key.",
            "x-go-type-skip-optional-pointer": true
          },
          "valuePrefix": {
            "type": "string",
            "example": "Bearer ",
            "description": "The prefix to be added to the API key value when it is sent in the header.",
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "ApiKeyAsBasicOpts": {
        "title": "API Key as Basic Options",
        "type": "object",
        "description": "when this object is present, it means that this provider uses Basic Auth to actually collect an API key",
        "properties": {
          "fieldUsed": {
            "type": "string",
            "enum": [
              "username",
              "password"
            ],
            "example": "username",
            "description": "whether the API key should be used as the username or password.",
            "x-go-type-skip-optional-pointer": true,
            "x-enum-varnames": [
              "UsernameField",
              "PasswordField"
            ]
          },
          "keyFormat": {
            "type": "string",
            "example": "api:%s",
            "description": "How to transform the API key in to a basic auth user:pass string. The %s is replaced with the API key value.",
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "BasicAuthOpts": {
        "title": "Basic Auth Options",
        "type": "object",
        "description": "Configuration for Basic Auth. Optional.",
        "properties": {
          "apiKeyAsBasic": {
            "type": "boolean",
            "example": true,
            "description": "If true, the provider uses an API key which then gets encoded as a basic auth user:pass string.",
            "x-go-type-skip-optional-pointer": true
          },
          "apiKeyAsBasicOpts": {
            "title": "API Key as Basic Options",
            "type": "object",
            "description": "when this object is present, it means that this provider uses Basic Auth to actually collect an API key",
            "properties": {
              "fieldUsed": {
                "type": "string",
                "enum": [
                  "username",
                  "password"
                ],
                "example": "username",
                "description": "whether the API key should be used as the username or password.",
                "x-go-type-skip-optional-pointer": true,
                "x-enum-varnames": [
                  "UsernameField",
                  "PasswordField"
                ]
              },
              "keyFormat": {
                "type": "string",
                "example": "api:%s",
                "description": "How to transform the API key in to a basic auth user:pass string. The %s is replaced with the API key value.",
                "x-go-type-skip-optional-pointer": true
              }
            }
          },
          "docsURL": {
            "type": "string",
            "description": "URL with more information about how to get or use an API key.",
            "example": "https://docs.example.com/api-key",
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "AuthHealthCheck": {
        "title": "Auth Health Check",
        "type": "object",
        "description": "A URL to check the health of a provider's credentials. It's used to see if the credentials are valid and if the provider is reachable.",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "a no-op URL to check the health of the credentials. The URL MUST not mutate any state. If the provider doesn't have such an endpoint, then don't provide credentialsHealthCheck.",
            "example": "https://api.example.com/health-check"
          },
          "method": {
            "type": "string",
            "description": "The HTTP method to use for the health check. If not set, defaults to GET.",
            "example": "GET",
            "x-go-type-skip-optional-pointer": true
          },
          "successStatusCodes": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "The HTTP status codes that indicate a successful health check. If not set, defaults to 200 and 204.",
            "example": [
              200,
              204
            ],
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "Modules": {
        "title": "Modules that this provider supports",
        "type": "object",
        "description": "The registry of provider modules.",
        "additionalProperties": {
          "title": "Module Info",
          "type": "object",
          "required": [
            "displayName",
            "baseURL",
            "support"
          ],
          "properties": {
            "displayName": {
              "type": "string"
            },
            "baseURL": {
              "type": "string"
            },
            "support": {
              "title": "Support",
              "type": "object",
              "description": "The supported features for the provider.",
              "x-oapi-codegen-extra-tags": {
                "validate": "required"
              },
              "required": [
                "bulkWrite",
                "proxy",
                "read",
                "subscribe",
                "write"
              ],
              "properties": {
                "bulkWrite": {
                  "title": "Bulk Write Support",
                  "type": "object",
                  "x-oapi-codegen-extra-tags": {
                    "validate": "required"
                  },
                  "required": [
                    "insert",
                    "update",
                    "upsert",
                    "delete"
                  ],
                  "properties": {
                    "insert": {
                      "type": "boolean"
                    },
                    "update": {
                      "type": "boolean"
                    },
                    "upsert": {
                      "type": "boolean"
                    },
                    "delete": {
                      "type": "boolean"
                    }
                  }
                },
                "proxy": {
                  "type": "boolean"
                },
                "read": {
                  "type": "boolean"
                },
                "subscribe": {
                  "type": "boolean"
                },
                "write": {
                  "type": "boolean"
                },
                "subscribeSupport": {
                  "title": "Subscribe Support",
                  "type": "object",
                  "properties": {
                    "create": {
                      "type": "boolean"
                    },
                    "update": {
                      "type": "boolean"
                    },
                    "delete": {
                      "type": "boolean"
                    },
                    "passThrough": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "x-go-type": "map[common.ModuleID]ModuleInfo",
        "x-go-type-import": {
          "path": "github.com/amp-labs/connectors/common"
        }
      },
      "ModuleInfo": {
        "title": "Module Info",
        "type": "object",
        "required": [
          "displayName",
          "baseURL",
          "support"
        ],
        "properties": {
          "displayName": {
            "type": "string"
          },
          "baseURL": {
            "type": "string"
          },
          "support": {
            "title": "Support",
            "type": "object",
            "description": "The supported features for the provider.",
            "x-oapi-codegen-extra-tags": {
              "validate": "required"
            },
            "required": [
              "bulkWrite",
              "proxy",
              "read",
              "subscribe",
              "write"
            ],
            "properties": {
              "bulkWrite": {
                "title": "Bulk Write Support",
                "type": "object",
                "x-oapi-codegen-extra-tags": {
                  "validate": "required"
                },
                "required": [
                  "insert",
                  "update",
                  "upsert",
                  "delete"
                ],
                "properties": {
                  "insert": {
                    "type": "boolean"
                  },
                  "update": {
                    "type": "boolean"
                  },
                  "upsert": {
                    "type": "boolean"
                  },
                  "delete": {
                    "type": "boolean"
                  }
                }
              },
              "proxy": {
                "type": "boolean"
              },
              "read": {
                "type": "boolean"
              },
              "subscribe": {
                "type": "boolean"
              },
              "write": {
                "type": "boolean"
              },
              "subscribeSupport": {
                "title": "Subscribe Support",
                "type": "object",
                "properties": {
                  "create": {
                    "type": "boolean"
                  },
                  "update": {
                    "type": "boolean"
                  },
                  "delete": {
                    "type": "boolean"
                  },
                  "passThrough": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "ProviderOpts": {
        "title": "Provider Options",
        "description": "Additional provider-specific metadata.",
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "Provider": {
        "title": "Provider",
        "type": "string",
        "example": "salesforce"
      },
      "ProviderInfo": {
        "title": "Provider Info",
        "type": "object",
        "required": [
          "name",
          "baseURL",
          "authType",
          "support",
          "providerOpts",
          "defaultModule"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "authType": {
            "title": "Auth Type",
            "description": "The type of authentication required by the provider.",
            "type": "string",
            "enum": [
              "oauth2",
              "apiKey",
              "basic",
              "jwt",
              "none"
            ],
            "x-oapi-codegen-extra-tags": {
              "validate": "required"
            }
          },
          "baseURL": {
            "description": "The base URL for making API requests.",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "validate": "required"
            }
          },
          "defaultModule": {
            "x-go-type": "common.ModuleID",
            "x-go-type-import": {
              "path": "github.com/amp-labs/connectors/common"
            }
          },
          "oauth2Opts": {
            "title": "OAuth2 Options",
            "type": "object",
            "description": "Configuration for OAuth2.0. Must be provided if authType is oauth2.",
            "required": [
              "grantType",
              "tokenURL",
              "explicitScopesRequired",
              "explicitWorkspaceRequired",
              "tokenMetadataFields"
            ],
            "properties": {
              "grantType": {
                "type": "string",
                "enum": [
                  "authorizationCode",
                  "authorizationCodePKCE",
                  "clientCredentials",
                  "password"
                ]
              },
              "authURL": {
                "type": "string",
                "example": "https://login.salesforce.com/services/oauth2/authorize",
                "description": "The authorization URL.",
                "x-go-type-skip-optional-pointer": true
              },
              "tokenURL": {
                "type": "string",
                "example": "https://login.salesforce.com/services/oauth2/token",
                "description": "The token URL.",
                "x-oapi-codegen-extra-tags": {
                  "validate": "required"
                }
              },
              "explicitScopesRequired": {
                "type": "boolean",
                "description": "Whether scopes are required to be known ahead of the OAuth flow.",
                "example": true
              },
              "explicitWorkspaceRequired": {
                "type": "boolean",
                "description": "Whether the workspace is required to be known ahead of the OAuth flow.",
                "example": true
              },
              "audience": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://api.mparticle.com"
                ],
                "description": "A list of URLs that represent the audience for the token, which is needed for some client credential grant flows.",
                "x-go-type-skip-optional-pointer": true
              },
              "tokenMetadataFields": {
                "title": "Token Metadata Fields",
                "type": "object",
                "description": "Fields to be used to extract token metadata from the token response.",
                "properties": {
                  "workspaceRefField": {
                    "type": "string",
                    "example": "account-id",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "consumerRefField": {
                    "type": "string",
                    "example": "user-id",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "scopesField": {
                    "type": "string",
                    "example": "scopes",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "otherFields": {
                    "type": "array",
                    "title": "Token Metadata Fields - Other fields",
                    "description": "Additional fields to extract and transform from the token response",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "displayName",
                        "path"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The internal name of the field",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "displayName": {
                          "type": "string",
                          "description": "The human-readable name of the field",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "path": {
                          "type": "string",
                          "description": "The path to the field in the token response (accepts dot notation for nested fields)",
                          "example": "owner.siteId",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "capture": {
                          "type": "string",
                          "description": "A regex expression to capture the value that we need from the path. There must be only one capture group named 'result' in the expression. If not provided, will cause an error.",
                          "example": "https:\\/\\/(?<result>[^.]+)\\.docusign\\.net",
                          "x-go-type-skip-optional-pointer": true
                        }
                      }
                    }
                  }
                }
              },
              "docsURL": {
                "type": "string",
                "description": "URL with more information about where to retrieve Client ID and Client Secret, etc.",
                "example": "https://docs.example.com/client-credentials",
                "x-go-type-skip-optional-pointer": true
              },
              "authURLParams": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "x-go-type-skip-optional-pointer": true,
                "example": {
                  "access_type": "offline",
                  "duration": "permanent"
                }
              }
            }
          },
          "apiKeyOpts": {
            "title": "API Key Options",
            "type": "object",
            "description": "Configuration for API key. Must be provided if authType is apiKey.",
            "required": [
              "attachmentType"
            ],
            "properties": {
              "attachmentType": {
                "type": "string",
                "description": "How the API key should be attached to requests.",
                "enum": [
                  "query",
                  "header"
                ],
                "x-oapi-codegen-extra-tags": {
                  "validate": "required"
                }
              },
              "query": {
                "title": "API Key Query Options",
                "type": "object",
                "description": "Configuration for API key in query parameter. Must be provided if type is in-query.",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "api_key",
                    "description": "The name of the query parameter to be used for the API key.",
                    "x-go-type-skip-optional-pointer": true
                  }
                }
              },
              "header": {
                "title": "API Key Header Options",
                "type": "object",
                "description": "Configuration for API key in header. Must be provided if type is in-header.",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "X-Api-Key",
                    "description": "The name of the header to be used for the API key.",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "valuePrefix": {
                    "type": "string",
                    "example": "Bearer ",
                    "description": "The prefix to be added to the API key value when it is sent in the header.",
                    "x-go-type-skip-optional-pointer": true
                  }
                }
              },
              "docsURL": {
                "type": "string",
                "description": "URL with more information about how to get or use an API key.",
                "example": "https://docs.example.com/api-key",
                "x-go-type-skip-optional-pointer": true
              }
            }
          },
          "basicOpts": {
            "title": "Basic Auth Options",
            "type": "object",
            "description": "Configuration for Basic Auth. Optional.",
            "properties": {
              "apiKeyAsBasic": {
                "type": "boolean",
                "example": true,
                "description": "If true, the provider uses an API key which then gets encoded as a basic auth user:pass string.",
                "x-go-type-skip-optional-pointer": true
              },
              "apiKeyAsBasicOpts": {
                "title": "API Key as Basic Options",
                "type": "object",
                "description": "when this object is present, it means that this provider uses Basic Auth to actually collect an API key",
                "properties": {
                  "fieldUsed": {
                    "type": "string",
                    "enum": [
                      "username",
                      "password"
                    ],
                    "example": "username",
                    "description": "whether the API key should be used as the username or password.",
                    "x-go-type-skip-optional-pointer": true,
                    "x-enum-varnames": [
                      "UsernameField",
                      "PasswordField"
                    ]
                  },
                  "keyFormat": {
                    "type": "string",
                    "example": "api:%s",
                    "description": "How to transform the API key in to a basic auth user:pass string. The %s is replaced with the API key value.",
                    "x-go-type-skip-optional-pointer": true
                  }
                }
              },
              "docsURL": {
                "type": "string",
                "description": "URL with more information about how to get or use an API key.",
                "example": "https://docs.example.com/api-key",
                "x-go-type-skip-optional-pointer": true
              }
            }
          },
          "support": {
            "title": "Support",
            "type": "object",
            "description": "The supported features for the provider.",
            "x-oapi-codegen-extra-tags": {
              "validate": "required"
            },
            "required": [
              "bulkWrite",
              "proxy",
              "read",
              "subscribe",
              "write"
            ],
            "properties": {
              "bulkWrite": {
                "title": "Bulk Write Support",
                "type": "object",
                "x-oapi-codegen-extra-tags": {
                  "validate": "required"
                },
                "required": [
                  "insert",
                  "update",
                  "upsert",
                  "delete"
                ],
                "properties": {
                  "insert": {
                    "type": "boolean"
                  },
                  "update": {
                    "type": "boolean"
                  },
                  "upsert": {
                    "type": "boolean"
                  },
                  "delete": {
                    "type": "boolean"
                  }
                }
              },
              "proxy": {
                "type": "boolean"
              },
              "read": {
                "type": "boolean"
              },
              "subscribe": {
                "type": "boolean"
              },
              "write": {
                "type": "boolean"
              },
              "subscribeSupport": {
                "title": "Subscribe Support",
                "type": "object",
                "properties": {
                  "create": {
                    "type": "boolean"
                  },
                  "update": {
                    "type": "boolean"
                  },
                  "delete": {
                    "type": "boolean"
                  },
                  "passThrough": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "providerOpts": {
            "title": "Provider Options",
            "description": "Additional provider-specific metadata.",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "authHealthCheck": {
            "title": "Auth Health Check",
            "type": "object",
            "description": "A URL to check the health of a provider's credentials. It's used to see if the credentials are valid and if the provider is reachable.",
            "required": [
              "url"
            ],
            "properties": {
              "url": {
                "type": "string",
                "description": "a no-op URL to check the health of the credentials. The URL MUST not mutate any state. If the provider doesn't have such an endpoint, then don't provide credentialsHealthCheck.",
                "example": "https://api.example.com/health-check"
              },
              "method": {
                "type": "string",
                "description": "The HTTP method to use for the health check. If not set, defaults to GET.",
                "example": "GET",
                "x-go-type-skip-optional-pointer": true
              },
              "successStatusCodes": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "description": "The HTTP status codes that indicate a successful health check. If not set, defaults to 200 and 204.",
                "example": [
                  200,
                  204
                ],
                "x-go-type-skip-optional-pointer": true
              }
            }
          },
          "displayName": {
            "type": "string",
            "example": "Zendesk Chat",
            "description": "The display name of the provider, if omitted, defaults to provider name.",
            "x-go-type-skip-optional-pointer": true
          },
          "postAuthInfoNeeded": {
            "type": "boolean",
            "example": true,
            "description": "If true, we require additional information after auth to start making requests.",
            "x-go-type-skip-optional-pointer": true
          },
          "media": {
            "title": "Media",
            "properties": {
              "regular": {
                "title": "Media Type Regular",
                "type": "object",
                "description": "Media for light/regular mode.",
                "properties": {
                  "iconURL": {
                    "type": "string",
                    "example": "https://example.com/icon.png",
                    "description": "URL to the icon for the provider.",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "logoURL": {
                    "type": "string",
                    "example": "https://example.com/logo.png",
                    "description": "URL to the logo for the provider.",
                    "x-go-type-skip-optional-pointer": true
                  }
                }
              },
              "darkMode": {
                "title": "Media Type Dark Mode",
                "type": "object",
                "description": "Media to be used in dark mode.",
                "properties": {
                  "iconURL": {
                    "type": "string",
                    "example": "https://example.com/icon.png",
                    "description": "URL to the icon for the provider that is to be used in dark mode.",
                    "x-go-type-skip-optional-pointer": true
                  },
                  "logoURL": {
                    "type": "string",
                    "example": "https://example.com/logo.png",
                    "description": "URL to the logo for the provider that is to be used in dark mode.",
                    "x-go-type-skip-optional-pointer": true
                  }
                }
              }
            }
          },
          "labels": {
            "title": "Labels",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "subscribeOpts": {
            "title": "Subscribe Options",
            "type": "object",
            "required": [
              "subscriptionScope",
              "targetURLScope",
              "registrationTiming"
            ],
            "properties": {
              "subscriptionScope": {
                "type": "string",
                "enum": [
                  "integration",
                  "installation"
                ],
                "description": "The scope of the subscription."
              },
              "targetURLScope": {
                "enum": [
                  "integration",
                  "installation"
                ],
                "description": "The scope of the target URL."
              },
              "registrationTiming": {
                "type": "string",
                "enum": [
                  "providerApp",
                  "integration",
                  "installation"
                ],
                "description": "The timing of the registration."
              }
            }
          },
          "modules": {
            "title": "Modules that this provider supports",
            "type": "object",
            "description": "The registry of provider modules.",
            "additionalProperties": {
              "title": "Module Info",
              "type": "object",
              "required": [
                "displayName",
                "baseURL",
                "support"
              ],
              "properties": {
                "displayName": {
                  "type": "string"
                },
                "baseURL": {
                  "type": "string"
                },
                "support": {
                  "title": "Support",
                  "type": "object",
                  "description": "The supported features for the provider.",
                  "x-oapi-codegen-extra-tags": {
                    "validate": "required"
                  },
                  "required": [
                    "bulkWrite",
                    "proxy",
                    "read",
                    "subscribe",
                    "write"
                  ],
                  "properties": {
                    "bulkWrite": {
                      "title": "Bulk Write Support",
                      "type": "object",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      },
                      "required": [
                        "insert",
                        "update",
                        "upsert",
                        "delete"
                      ],
                      "properties": {
                        "insert": {
                          "type": "boolean"
                        },
                        "update": {
                          "type": "boolean"
                        },
                        "upsert": {
                          "type": "boolean"
                        },
                        "delete": {
                          "type": "boolean"
                        }
                      }
                    },
                    "proxy": {
                      "type": "boolean"
                    },
                    "read": {
                      "type": "boolean"
                    },
                    "subscribe": {
                      "type": "boolean"
                    },
                    "write": {
                      "type": "boolean"
                    },
                    "subscribeSupport": {
                      "title": "Subscribe Support",
                      "type": "object",
                      "properties": {
                        "create": {
                          "type": "boolean"
                        },
                        "update": {
                          "type": "boolean"
                        },
                        "delete": {
                          "type": "boolean"
                        },
                        "passThrough": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            },
            "x-go-type": "map[common.ModuleID]ModuleInfo",
            "x-go-type-import": {
              "path": "github.com/amp-labs/connectors/common"
            }
          },
          "metadata": {
            "title": "Provider Metadata",
            "type": "object",
            "description": "Provider metadata that needs to be given by the user or fetched by the connector post authentication for the connector to work.",
            "properties": {
              "input": {
                "type": "array",
                "description": "Metadata provided as manual input",
                "items": {
                  "title": "Metadata Item (as input)",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The internal identifier for the metadata field",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "displayName": {
                      "type": "string",
                      "description": "The human-readable name for the field",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "docsURL": {
                      "type": "string",
                      "description": "URL with more information about how to locate this value",
                      "example": "https://example.com/how-to-find-subdomain",
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                },
                "x-go-type-skip-optional-pointer": true
              },
              "postAuthentication": {
                "type": "array",
                "description": "Metadata fetched by the connector post authentication",
                "items": {
                  "title": "Metadata Item (fetched post authentication)",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The internal identifier for the metadata field",
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                },
                "x-go-type-skip-optional-pointer": true
              }
            }
          }
        }
      },
      "CatalogWrapper": {
        "title": "Catalog Wrapper",
        "type": "object",
        "required": [
          "timestamp",
          "catalog"
        ],
        "properties": {
          "timestamp": {
            "type": "string",
            "example": "2024-07-30T22:14:51.000Z",
            "description": "An RFC3339 formatted timestamp of when the catalog was generated.",
            "x-oapi-codegen-extra-tags": {
              "validate": "required"
            }
          },
          "catalog": {
            "title": "Catalog Type",
            "type": "object",
            "additionalProperties": {
              "title": "Provider Info",
              "type": "object",
              "required": [
                "name",
                "baseURL",
                "authType",
                "support",
                "providerOpts",
                "defaultModule"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "authType": {
                  "title": "Auth Type",
                  "description": "The type of authentication required by the provider.",
                  "type": "string",
                  "enum": [
                    "oauth2",
                    "apiKey",
                    "basic",
                    "jwt",
                    "none"
                  ],
                  "x-oapi-codegen-extra-tags": {
                    "validate": "required"
                  }
                },
                "baseURL": {
                  "description": "The base URL for making API requests.",
                  "type": "string",
                  "x-oapi-codegen-extra-tags": {
                    "validate": "required"
                  }
                },
                "defaultModule": {
                  "x-go-type": "common.ModuleID",
                  "x-go-type-import": {
                    "path": "github.com/amp-labs/connectors/common"
                  }
                },
                "oauth2Opts": {
                  "title": "OAuth2 Options",
                  "type": "object",
                  "description": "Configuration for OAuth2.0. Must be provided if authType is oauth2.",
                  "required": [
                    "grantType",
                    "tokenURL",
                    "explicitScopesRequired",
                    "explicitWorkspaceRequired",
                    "tokenMetadataFields"
                  ],
                  "properties": {
                    "grantType": {
                      "type": "string",
                      "enum": [
                        "authorizationCode",
                        "authorizationCodePKCE",
                        "clientCredentials",
                        "password"
                      ]
                    },
                    "authURL": {
                      "type": "string",
                      "example": "https://login.salesforce.com/services/oauth2/authorize",
                      "description": "The authorization URL.",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "tokenURL": {
                      "type": "string",
                      "example": "https://login.salesforce.com/services/oauth2/token",
                      "description": "The token URL.",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      }
                    },
                    "explicitScopesRequired": {
                      "type": "boolean",
                      "description": "Whether scopes are required to be known ahead of the OAuth flow.",
                      "example": true
                    },
                    "explicitWorkspaceRequired": {
                      "type": "boolean",
                      "description": "Whether the workspace is required to be known ahead of the OAuth flow.",
                      "example": true
                    },
                    "audience": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "https://api.mparticle.com"
                      ],
                      "description": "A list of URLs that represent the audience for the token, which is needed for some client credential grant flows.",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "tokenMetadataFields": {
                      "title": "Token Metadata Fields",
                      "type": "object",
                      "description": "Fields to be used to extract token metadata from the token response.",
                      "properties": {
                        "workspaceRefField": {
                          "type": "string",
                          "example": "account-id",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "consumerRefField": {
                          "type": "string",
                          "example": "user-id",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "scopesField": {
                          "type": "string",
                          "example": "scopes",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "otherFields": {
                          "type": "array",
                          "title": "Token Metadata Fields - Other fields",
                          "description": "Additional fields to extract and transform from the token response",
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "displayName",
                              "path"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The internal name of the field",
                                "x-go-type-skip-optional-pointer": true
                              },
                              "displayName": {
                                "type": "string",
                                "description": "The human-readable name of the field",
                                "x-go-type-skip-optional-pointer": true
                              },
                              "path": {
                                "type": "string",
                                "description": "The path to the field in the token response (accepts dot notation for nested fields)",
                                "example": "owner.siteId",
                                "x-go-type-skip-optional-pointer": true
                              },
                              "capture": {
                                "type": "string",
                                "description": "A regex expression to capture the value that we need from the path. There must be only one capture group named 'result' in the expression. If not provided, will cause an error.",
                                "example": "https:\\/\\/(?<result>[^.]+)\\.docusign\\.net",
                                "x-go-type-skip-optional-pointer": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "docsURL": {
                      "type": "string",
                      "description": "URL with more information about where to retrieve Client ID and Client Secret, etc.",
                      "example": "https://docs.example.com/client-credentials",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "authURLParams": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-go-type-skip-optional-pointer": true,
                      "example": {
                        "access_type": "offline",
                        "duration": "permanent"
                      }
                    }
                  }
                },
                "apiKeyOpts": {
                  "title": "API Key Options",
                  "type": "object",
                  "description": "Configuration for API key. Must be provided if authType is apiKey.",
                  "required": [
                    "attachmentType"
                  ],
                  "properties": {
                    "attachmentType": {
                      "type": "string",
                      "description": "How the API key should be attached to requests.",
                      "enum": [
                        "query",
                        "header"
                      ],
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      }
                    },
                    "query": {
                      "title": "API Key Query Options",
                      "type": "object",
                      "description": "Configuration for API key in query parameter. Must be provided if type is in-query.",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "api_key",
                          "description": "The name of the query parameter to be used for the API key.",
                          "x-go-type-skip-optional-pointer": true
                        }
                      }
                    },
                    "header": {
                      "title": "API Key Header Options",
                      "type": "object",
                      "description": "Configuration for API key in header. Must be provided if type is in-header.",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "X-Api-Key",
                          "description": "The name of the header to be used for the API key.",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "valuePrefix": {
                          "type": "string",
                          "example": "Bearer ",
                          "description": "The prefix to be added to the API key value when it is sent in the header.",
                          "x-go-type-skip-optional-pointer": true
                        }
                      }
                    },
                    "docsURL": {
                      "type": "string",
                      "description": "URL with more information about how to get or use an API key.",
                      "example": "https://docs.example.com/api-key",
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                },
                "basicOpts": {
                  "title": "Basic Auth Options",
                  "type": "object",
                  "description": "Configuration for Basic Auth. Optional.",
                  "properties": {
                    "apiKeyAsBasic": {
                      "type": "boolean",
                      "example": true,
                      "description": "If true, the provider uses an API key which then gets encoded as a basic auth user:pass string.",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "apiKeyAsBasicOpts": {
                      "title": "API Key as Basic Options",
                      "type": "object",
                      "description": "when this object is present, it means that this provider uses Basic Auth to actually collect an API key",
                      "properties": {
                        "fieldUsed": {
                          "type": "string",
                          "enum": [
                            "username",
                            "password"
                          ],
                          "example": "username",
                          "description": "whether the API key should be used as the username or password.",
                          "x-go-type-skip-optional-pointer": true,
                          "x-enum-varnames": [
                            "UsernameField",
                            "PasswordField"
                          ]
                        },
                        "keyFormat": {
                          "type": "string",
                          "example": "api:%s",
                          "description": "How to transform the API key in to a basic auth user:pass string. The %s is replaced with the API key value.",
                          "x-go-type-skip-optional-pointer": true
                        }
                      }
                    },
                    "docsURL": {
                      "type": "string",
                      "description": "URL with more information about how to get or use an API key.",
                      "example": "https://docs.example.com/api-key",
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                },
                "support": {
                  "title": "Support",
                  "type": "object",
                  "description": "The supported features for the provider.",
                  "x-oapi-codegen-extra-tags": {
                    "validate": "required"
                  },
                  "required": [
                    "bulkWrite",
                    "proxy",
                    "read",
                    "subscribe",
                    "write"
                  ],
                  "properties": {
                    "bulkWrite": {
                      "title": "Bulk Write Support",
                      "type": "object",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      },
                      "required": [
                        "insert",
                        "update",
                        "upsert",
                        "delete"
                      ],
                      "properties": {
                        "insert": {
                          "type": "boolean"
                        },
                        "update": {
                          "type": "boolean"
                        },
                        "upsert": {
                          "type": "boolean"
                        },
                        "delete": {
                          "type": "boolean"
                        }
                      }
                    },
                    "proxy": {
                      "type": "boolean"
                    },
                    "read": {
                      "type": "boolean"
                    },
                    "subscribe": {
                      "type": "boolean"
                    },
                    "write": {
                      "type": "boolean"
                    },
                    "subscribeSupport": {
                      "title": "Subscribe Support",
                      "type": "object",
                      "properties": {
                        "create": {
                          "type": "boolean"
                        },
                        "update": {
                          "type": "boolean"
                        },
                        "delete": {
                          "type": "boolean"
                        },
                        "passThrough": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                },
                "providerOpts": {
                  "title": "Provider Options",
                  "description": "Additional provider-specific metadata.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "authHealthCheck": {
                  "title": "Auth Health Check",
                  "type": "object",
                  "description": "A URL to check the health of a provider's credentials. It's used to see if the credentials are valid and if the provider is reachable.",
                  "required": [
                    "url"
                  ],
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "a no-op URL to check the health of the credentials. The URL MUST not mutate any state. If the provider doesn't have such an endpoint, then don't provide credentialsHealthCheck.",
                      "example": "https://api.example.com/health-check"
                    },
                    "method": {
                      "type": "string",
                      "description": "The HTTP method to use for the health check. If not set, defaults to GET.",
                      "example": "GET",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "successStatusCodes": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "The HTTP status codes that indicate a successful health check. If not set, defaults to 200 and 204.",
                      "example": [
                        200,
                        204
                      ],
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                },
                "displayName": {
                  "type": "string",
                  "example": "Zendesk Chat",
                  "description": "The display name of the provider, if omitted, defaults to provider name.",
                  "x-go-type-skip-optional-pointer": true
                },
                "postAuthInfoNeeded": {
                  "type": "boolean",
                  "example": true,
                  "description": "If true, we require additional information after auth to start making requests.",
                  "x-go-type-skip-optional-pointer": true
                },
                "media": {
                  "title": "Media",
                  "properties": {
                    "regular": {
                      "title": "Media Type Regular",
                      "type": "object",
                      "description": "Media for light/regular mode.",
                      "properties": {
                        "iconURL": {
                          "type": "string",
                          "example": "https://example.com/icon.png",
                          "description": "URL to the icon for the provider.",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "logoURL": {
                          "type": "string",
                          "example": "https://example.com/logo.png",
                          "description": "URL to the logo for the provider.",
                          "x-go-type-skip-optional-pointer": true
                        }
                      }
                    },
                    "darkMode": {
                      "title": "Media Type Dark Mode",
                      "type": "object",
                      "description": "Media to be used in dark mode.",
                      "properties": {
                        "iconURL": {
                          "type": "string",
                          "example": "https://example.com/icon.png",
                          "description": "URL to the icon for the provider that is to be used in dark mode.",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "logoURL": {
                          "type": "string",
                          "example": "https://example.com/logo.png",
                          "description": "URL to the logo for the provider that is to be used in dark mode.",
                          "x-go-type-skip-optional-pointer": true
                        }
                      }
                    }
                  }
                },
                "labels": {
                  "title": "Labels",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "subscribeOpts": {
                  "title": "Subscribe Options",
                  "type": "object",
                  "required": [
                    "subscriptionScope",
                    "targetURLScope",
                    "registrationTiming"
                  ],
                  "properties": {
                    "subscriptionScope": {
                      "type": "string",
                      "enum": [
                        "integration",
                        "installation"
                      ],
                      "description": "The scope of the subscription."
                    },
                    "targetURLScope": {
                      "enum": [
                        "integration",
                        "installation"
                      ],
                      "description": "The scope of the target URL."
                    },
                    "registrationTiming": {
                      "type": "string",
                      "enum": [
                        "providerApp",
                        "integration",
                        "installation"
                      ],
                      "description": "The timing of the registration."
                    }
                  }
                },
                "modules": {
                  "title": "Modules that this provider supports",
                  "type": "object",
                  "description": "The registry of provider modules.",
                  "additionalProperties": {
                    "title": "Module Info",
                    "type": "object",
                    "required": [
                      "displayName",
                      "baseURL",
                      "support"
                    ],
                    "properties": {
                      "displayName": {
                        "type": "string"
                      },
                      "baseURL": {
                        "type": "string"
                      },
                      "support": {
                        "title": "Support",
                        "type": "object",
                        "description": "The supported features for the provider.",
                        "x-oapi-codegen-extra-tags": {
                          "validate": "required"
                        },
                        "required": [
                          "bulkWrite",
                          "proxy",
                          "read",
                          "subscribe",
                          "write"
                        ],
                        "properties": {
                          "bulkWrite": {
                            "title": "Bulk Write Support",
                            "type": "object",
                            "x-oapi-codegen-extra-tags": {
                              "validate": "required"
                            },
                            "required": [
                              "insert",
                              "update",
                              "upsert",
                              "delete"
                            ],
                            "properties": {
                              "insert": {
                                "type": "boolean"
                              },
                              "update": {
                                "type": "boolean"
                              },
                              "upsert": {
                                "type": "boolean"
                              },
                              "delete": {
                                "type": "boolean"
                              }
                            }
                          },
                          "proxy": {
                            "type": "boolean"
                          },
                          "read": {
                            "type": "boolean"
                          },
                          "subscribe": {
                            "type": "boolean"
                          },
                          "write": {
                            "type": "boolean"
                          },
                          "subscribeSupport": {
                            "title": "Subscribe Support",
                            "type": "object",
                            "properties": {
                              "create": {
                                "type": "boolean"
                              },
                              "update": {
                                "type": "boolean"
                              },
                              "delete": {
                                "type": "boolean"
                              },
                              "passThrough": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-go-type": "map[common.ModuleID]ModuleInfo",
                  "x-go-type-import": {
                    "path": "github.com/amp-labs/connectors/common"
                  }
                },
                "metadata": {
                  "title": "Provider Metadata",
                  "type": "object",
                  "description": "Provider metadata that needs to be given by the user or fetched by the connector post authentication for the connector to work.",
                  "properties": {
                    "input": {
                      "type": "array",
                      "description": "Metadata provided as manual input",
                      "items": {
                        "title": "Metadata Item (as input)",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The internal identifier for the metadata field",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The human-readable name for the field",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "docsURL": {
                            "type": "string",
                            "description": "URL with more information about how to locate this value",
                            "example": "https://example.com/how-to-find-subdomain",
                            "x-go-type-skip-optional-pointer": true
                          }
                        }
                      },
                      "x-go-type-skip-optional-pointer": true
                    },
                    "postAuthentication": {
                      "type": "array",
                      "description": "Metadata fetched by the connector post authentication",
                      "items": {
                        "title": "Metadata Item (fetched post authentication)",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The internal identifier for the metadata field",
                            "x-go-type-skip-optional-pointer": true
                          }
                        }
                      },
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CatalogType": {
        "title": "Catalog Type",
        "type": "object",
        "additionalProperties": {
          "title": "Provider Info",
          "type": "object",
          "required": [
            "name",
            "baseURL",
            "authType",
            "support",
            "providerOpts",
            "defaultModule"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "authType": {
              "title": "Auth Type",
              "description": "The type of authentication required by the provider.",
              "type": "string",
              "enum": [
                "oauth2",
                "apiKey",
                "basic",
                "jwt",
                "none"
              ],
              "x-oapi-codegen-extra-tags": {
                "validate": "required"
              }
            },
            "baseURL": {
              "description": "The base URL for making API requests.",
              "type": "string",
              "x-oapi-codegen-extra-tags": {
                "validate": "required"
              }
            },
            "defaultModule": {
              "x-go-type": "common.ModuleID",
              "x-go-type-import": {
                "path": "github.com/amp-labs/connectors/common"
              }
            },
            "oauth2Opts": {
              "title": "OAuth2 Options",
              "type": "object",
              "description": "Configuration for OAuth2.0. Must be provided if authType is oauth2.",
              "required": [
                "grantType",
                "tokenURL",
                "explicitScopesRequired",
                "explicitWorkspaceRequired",
                "tokenMetadataFields"
              ],
              "properties": {
                "grantType": {
                  "type": "string",
                  "enum": [
                    "authorizationCode",
                    "authorizationCodePKCE",
                    "clientCredentials",
                    "password"
                  ]
                },
                "authURL": {
                  "type": "string",
                  "example": "https://login.salesforce.com/services/oauth2/authorize",
                  "description": "The authorization URL.",
                  "x-go-type-skip-optional-pointer": true
                },
                "tokenURL": {
                  "type": "string",
                  "example": "https://login.salesforce.com/services/oauth2/token",
                  "description": "The token URL.",
                  "x-oapi-codegen-extra-tags": {
                    "validate": "required"
                  }
                },
                "explicitScopesRequired": {
                  "type": "boolean",
                  "description": "Whether scopes are required to be known ahead of the OAuth flow.",
                  "example": true
                },
                "explicitWorkspaceRequired": {
                  "type": "boolean",
                  "description": "Whether the workspace is required to be known ahead of the OAuth flow.",
                  "example": true
                },
                "audience": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "https://api.mparticle.com"
                  ],
                  "description": "A list of URLs that represent the audience for the token, which is needed for some client credential grant flows.",
                  "x-go-type-skip-optional-pointer": true
                },
                "tokenMetadataFields": {
                  "title": "Token Metadata Fields",
                  "type": "object",
                  "description": "Fields to be used to extract token metadata from the token response.",
                  "properties": {
                    "workspaceRefField": {
                      "type": "string",
                      "example": "account-id",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "consumerRefField": {
                      "type": "string",
                      "example": "user-id",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "scopesField": {
                      "type": "string",
                      "example": "scopes",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "otherFields": {
                      "type": "array",
                      "title": "Token Metadata Fields - Other fields",
                      "description": "Additional fields to extract and transform from the token response",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "displayName",
                          "path"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The internal name of the field",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The human-readable name of the field",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "path": {
                            "type": "string",
                            "description": "The path to the field in the token response (accepts dot notation for nested fields)",
                            "example": "owner.siteId",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "capture": {
                            "type": "string",
                            "description": "A regex expression to capture the value that we need from the path. There must be only one capture group named 'result' in the expression. If not provided, will cause an error.",
                            "example": "https:\\/\\/(?<result>[^.]+)\\.docusign\\.net",
                            "x-go-type-skip-optional-pointer": true
                          }
                        }
                      }
                    }
                  }
                },
                "docsURL": {
                  "type": "string",
                  "description": "URL with more information about where to retrieve Client ID and Client Secret, etc.",
                  "example": "https://docs.example.com/client-credentials",
                  "x-go-type-skip-optional-pointer": true
                },
                "authURLParams": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-go-type-skip-optional-pointer": true,
                  "example": {
                    "access_type": "offline",
                    "duration": "permanent"
                  }
                }
              }
            },
            "apiKeyOpts": {
              "title": "API Key Options",
              "type": "object",
              "description": "Configuration for API key. Must be provided if authType is apiKey.",
              "required": [
                "attachmentType"
              ],
              "properties": {
                "attachmentType": {
                  "type": "string",
                  "description": "How the API key should be attached to requests.",
                  "enum": [
                    "query",
                    "header"
                  ],
                  "x-oapi-codegen-extra-tags": {
                    "validate": "required"
                  }
                },
                "query": {
                  "title": "API Key Query Options",
                  "type": "object",
                  "description": "Configuration for API key in query parameter. Must be provided if type is in-query.",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "api_key",
                      "description": "The name of the query parameter to be used for the API key.",
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                },
                "header": {
                  "title": "API Key Header Options",
                  "type": "object",
                  "description": "Configuration for API key in header. Must be provided if type is in-header.",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "X-Api-Key",
                      "description": "The name of the header to be used for the API key.",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "valuePrefix": {
                      "type": "string",
                      "example": "Bearer ",
                      "description": "The prefix to be added to the API key value when it is sent in the header.",
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                },
                "docsURL": {
                  "type": "string",
                  "description": "URL with more information about how to get or use an API key.",
                  "example": "https://docs.example.com/api-key",
                  "x-go-type-skip-optional-pointer": true
                }
              }
            },
            "basicOpts": {
              "title": "Basic Auth Options",
              "type": "object",
              "description": "Configuration for Basic Auth. Optional.",
              "properties": {
                "apiKeyAsBasic": {
                  "type": "boolean",
                  "example": true,
                  "description": "If true, the provider uses an API key which then gets encoded as a basic auth user:pass string.",
                  "x-go-type-skip-optional-pointer": true
                },
                "apiKeyAsBasicOpts": {
                  "title": "API Key as Basic Options",
                  "type": "object",
                  "description": "when this object is present, it means that this provider uses Basic Auth to actually collect an API key",
                  "properties": {
                    "fieldUsed": {
                      "type": "string",
                      "enum": [
                        "username",
                        "password"
                      ],
                      "example": "username",
                      "description": "whether the API key should be used as the username or password.",
                      "x-go-type-skip-optional-pointer": true,
                      "x-enum-varnames": [
                        "UsernameField",
                        "PasswordField"
                      ]
                    },
                    "keyFormat": {
                      "type": "string",
                      "example": "api:%s",
                      "description": "How to transform the API key in to a basic auth user:pass string. The %s is replaced with the API key value.",
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                },
                "docsURL": {
                  "type": "string",
                  "description": "URL with more information about how to get or use an API key.",
                  "example": "https://docs.example.com/api-key",
                  "x-go-type-skip-optional-pointer": true
                }
              }
            },
            "support": {
              "title": "Support",
              "type": "object",
              "description": "The supported features for the provider.",
              "x-oapi-codegen-extra-tags": {
                "validate": "required"
              },
              "required": [
                "bulkWrite",
                "proxy",
                "read",
                "subscribe",
                "write"
              ],
              "properties": {
                "bulkWrite": {
                  "title": "Bulk Write Support",
                  "type": "object",
                  "x-oapi-codegen-extra-tags": {
                    "validate": "required"
                  },
                  "required": [
                    "insert",
                    "update",
                    "upsert",
                    "delete"
                  ],
                  "properties": {
                    "insert": {
                      "type": "boolean"
                    },
                    "update": {
                      "type": "boolean"
                    },
                    "upsert": {
                      "type": "boolean"
                    },
                    "delete": {
                      "type": "boolean"
                    }
                  }
                },
                "proxy": {
                  "type": "boolean"
                },
                "read": {
                  "type": "boolean"
                },
                "subscribe": {
                  "type": "boolean"
                },
                "write": {
                  "type": "boolean"
                },
                "subscribeSupport": {
                  "title": "Subscribe Support",
                  "type": "object",
                  "properties": {
                    "create": {
                      "type": "boolean"
                    },
                    "update": {
                      "type": "boolean"
                    },
                    "delete": {
                      "type": "boolean"
                    },
                    "passThrough": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "providerOpts": {
              "title": "Provider Options",
              "description": "Additional provider-specific metadata.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "authHealthCheck": {
              "title": "Auth Health Check",
              "type": "object",
              "description": "A URL to check the health of a provider's credentials. It's used to see if the credentials are valid and if the provider is reachable.",
              "required": [
                "url"
              ],
              "properties": {
                "url": {
                  "type": "string",
                  "description": "a no-op URL to check the health of the credentials. The URL MUST not mutate any state. If the provider doesn't have such an endpoint, then don't provide credentialsHealthCheck.",
                  "example": "https://api.example.com/health-check"
                },
                "method": {
                  "type": "string",
                  "description": "The HTTP method to use for the health check. If not set, defaults to GET.",
                  "example": "GET",
                  "x-go-type-skip-optional-pointer": true
                },
                "successStatusCodes": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "description": "The HTTP status codes that indicate a successful health check. If not set, defaults to 200 and 204.",
                  "example": [
                    200,
                    204
                  ],
                  "x-go-type-skip-optional-pointer": true
                }
              }
            },
            "displayName": {
              "type": "string",
              "example": "Zendesk Chat",
              "description": "The display name of the provider, if omitted, defaults to provider name.",
              "x-go-type-skip-optional-pointer": true
            },
            "postAuthInfoNeeded": {
              "type": "boolean",
              "example": true,
              "description": "If true, we require additional information after auth to start making requests.",
              "x-go-type-skip-optional-pointer": true
            },
            "media": {
              "title": "Media",
              "properties": {
                "regular": {
                  "title": "Media Type Regular",
                  "type": "object",
                  "description": "Media for light/regular mode.",
                  "properties": {
                    "iconURL": {
                      "type": "string",
                      "example": "https://example.com/icon.png",
                      "description": "URL to the icon for the provider.",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "logoURL": {
                      "type": "string",
                      "example": "https://example.com/logo.png",
                      "description": "URL to the logo for the provider.",
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                },
                "darkMode": {
                  "title": "Media Type Dark Mode",
                  "type": "object",
                  "description": "Media to be used in dark mode.",
                  "properties": {
                    "iconURL": {
                      "type": "string",
                      "example": "https://example.com/icon.png",
                      "description": "URL to the icon for the provider that is to be used in dark mode.",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "logoURL": {
                      "type": "string",
                      "example": "https://example.com/logo.png",
                      "description": "URL to the logo for the provider that is to be used in dark mode.",
                      "x-go-type-skip-optional-pointer": true
                    }
                  }
                }
              }
            },
            "labels": {
              "title": "Labels",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "subscribeOpts": {
              "title": "Subscribe Options",
              "type": "object",
              "required": [
                "subscriptionScope",
                "targetURLScope",
                "registrationTiming"
              ],
              "properties": {
                "subscriptionScope": {
                  "type": "string",
                  "enum": [
                    "integration",
                    "installation"
                  ],
                  "description": "The scope of the subscription."
                },
                "targetURLScope": {
                  "enum": [
                    "integration",
                    "installation"
                  ],
                  "description": "The scope of the target URL."
                },
                "registrationTiming": {
                  "type": "string",
                  "enum": [
                    "providerApp",
                    "integration",
                    "installation"
                  ],
                  "description": "The timing of the registration."
                }
              }
            },
            "modules": {
              "title": "Modules that this provider supports",
              "type": "object",
              "description": "The registry of provider modules.",
              "additionalProperties": {
                "title": "Module Info",
                "type": "object",
                "required": [
                  "displayName",
                  "baseURL",
                  "support"
                ],
                "properties": {
                  "displayName": {
                    "type": "string"
                  },
                  "baseURL": {
                    "type": "string"
                  },
                  "support": {
                    "title": "Support",
                    "type": "object",
                    "description": "The supported features for the provider.",
                    "x-oapi-codegen-extra-tags": {
                      "validate": "required"
                    },
                    "required": [
                      "bulkWrite",
                      "proxy",
                      "read",
                      "subscribe",
                      "write"
                    ],
                    "properties": {
                      "bulkWrite": {
                        "title": "Bulk Write Support",
                        "type": "object",
                        "x-oapi-codegen-extra-tags": {
                          "validate": "required"
                        },
                        "required": [
                          "insert",
                          "update",
                          "upsert",
                          "delete"
                        ],
                        "properties": {
                          "insert": {
                            "type": "boolean"
                          },
                          "update": {
                            "type": "boolean"
                          },
                          "upsert": {
                            "type": "boolean"
                          },
                          "delete": {
                            "type": "boolean"
                          }
                        }
                      },
                      "proxy": {
                        "type": "boolean"
                      },
                      "read": {
                        "type": "boolean"
                      },
                      "subscribe": {
                        "type": "boolean"
                      },
                      "write": {
                        "type": "boolean"
                      },
                      "subscribeSupport": {
                        "title": "Subscribe Support",
                        "type": "object",
                        "properties": {
                          "create": {
                            "type": "boolean"
                          },
                          "update": {
                            "type": "boolean"
                          },
                          "delete": {
                            "type": "boolean"
                          },
                          "passThrough": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "x-go-type": "map[common.ModuleID]ModuleInfo",
              "x-go-type-import": {
                "path": "github.com/amp-labs/connectors/common"
              }
            },
            "metadata": {
              "title": "Provider Metadata",
              "type": "object",
              "description": "Provider metadata that needs to be given by the user or fetched by the connector post authentication for the connector to work.",
              "properties": {
                "input": {
                  "type": "array",
                  "description": "Metadata provided as manual input",
                  "items": {
                    "title": "Metadata Item (as input)",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The internal identifier for the metadata field",
                        "x-go-type-skip-optional-pointer": true
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The human-readable name for the field",
                        "x-go-type-skip-optional-pointer": true
                      },
                      "docsURL": {
                        "type": "string",
                        "description": "URL with more information about how to locate this value",
                        "example": "https://example.com/how-to-find-subdomain",
                        "x-go-type-skip-optional-pointer": true
                      }
                    }
                  },
                  "x-go-type-skip-optional-pointer": true
                },
                "postAuthentication": {
                  "type": "array",
                  "description": "Metadata fetched by the connector post authentication",
                  "items": {
                    "title": "Metadata Item (fetched post authentication)",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The internal identifier for the metadata field",
                        "x-go-type-skip-optional-pointer": true
                      }
                    }
                  },
                  "x-go-type-skip-optional-pointer": true
                }
              }
            }
          }
        }
      },
      "SubscribeOpts": {
        "title": "Subscribe Options",
        "type": "object",
        "required": [
          "subscriptionScope",
          "targetURLScope",
          "registrationTiming"
        ],
        "properties": {
          "subscriptionScope": {
            "type": "string",
            "enum": [
              "integration",
              "installation"
            ],
            "description": "The scope of the subscription."
          },
          "targetURLScope": {
            "enum": [
              "integration",
              "installation"
            ],
            "description": "The scope of the target URL."
          },
          "registrationTiming": {
            "type": "string",
            "enum": [
              "providerApp",
              "integration",
              "installation"
            ],
            "description": "The timing of the registration."
          }
        }
      },
      "SubscribeSupport": {
        "title": "Subscribe Support",
        "type": "object",
        "properties": {
          "create": {
            "type": "boolean"
          },
          "update": {
            "type": "boolean"
          },
          "delete": {
            "type": "boolean"
          },
          "passThrough": {
            "type": "boolean"
          }
        }
      },
      "ProviderMetadata": {
        "title": "Provider Metadata",
        "type": "object",
        "description": "Provider metadata that needs to be given by the user or fetched by the connector post authentication for the connector to work.",
        "properties": {
          "input": {
            "type": "array",
            "description": "Metadata provided as manual input",
            "items": {
              "title": "Metadata Item (as input)",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The internal identifier for the metadata field",
                  "x-go-type-skip-optional-pointer": true
                },
                "displayName": {
                  "type": "string",
                  "description": "The human-readable name for the field",
                  "x-go-type-skip-optional-pointer": true
                },
                "docsURL": {
                  "type": "string",
                  "description": "URL with more information about how to locate this value",
                  "example": "https://example.com/how-to-find-subdomain",
                  "x-go-type-skip-optional-pointer": true
                }
              }
            },
            "x-go-type-skip-optional-pointer": true
          },
          "postAuthentication": {
            "type": "array",
            "description": "Metadata fetched by the connector post authentication",
            "items": {
              "title": "Metadata Item (fetched post authentication)",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The internal identifier for the metadata field",
                  "x-go-type-skip-optional-pointer": true
                }
              }
            },
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "MetadataItemInput": {
        "title": "Metadata Item (as input)",
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The internal identifier for the metadata field",
            "x-go-type-skip-optional-pointer": true
          },
          "displayName": {
            "type": "string",
            "description": "The human-readable name for the field",
            "x-go-type-skip-optional-pointer": true
          },
          "docsURL": {
            "type": "string",
            "description": "URL with more information about how to locate this value",
            "example": "https://example.com/how-to-find-subdomain",
            "x-go-type-skip-optional-pointer": true
          }
        }
      },
      "MetadataItemPostAuthentication": {
        "title": "Metadata Item (fetched post authentication)",
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The internal identifier for the metadata field",
            "x-go-type-skip-optional-pointer": true
          }
        }
      }
    }
  }
}