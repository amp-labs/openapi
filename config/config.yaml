# See Makefile for the commands that generate Go types from this file.
# This file is referenced by api.yaml.
openapi: 3.0.1
info:
  title: Config types
  version: 1.0.0
  license:
    name: MIT License
    url: https://opensource.org/license/mit
servers: []
paths: {}

components:
  schemas:
    BaseConfigContent:
      title: Base Config Content
      type: object
      properties:
        provider:
          description: The SaaS API that we are integrating with.
          example: salesforce
          type: string
        read:
          $ref: '#/components/schemas/BaseReadConfig'
        write:
          $ref: '#/components/schemas/BaseWriteConfig'
        proxy:
          $ref: '#/components/schemas/BaseProxyConfig'

    BaseProxyConfig:
      title: Base Proxy Config
      type: object
      properties:
        enabled:
          type: boolean

    BaseReadConfig:
      title: Base Read Config
      type: object
      properties:
        objects:
          type: object
          description: This is a map of object names to their configuration.
          additionalProperties:
            $ref: '#/components/schemas/BaseReadConfigObject'

    BaseReadConfigObject:
      title: Base Read Config Object
      type: object
      properties:
        objectName:
          description: The name of the object to read from.
          example: account
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
        schedule:
          type: string
          description: The schedule for reading the object, in cron syntax.
          example: '*/15 * * * *'
        destination:
          description: The name of the destination that the result should be sent to.
          example: accountWebhook
          type: string
        selectedFields:
          type: object
          description:
            This is a map of field names to booleans indicating whether they should be read.
            If a field is already included in `selectedFieldMappings`, it does not need to be included here.
          example: '{ phone: true, fax: true }'
          additionalProperties:
            type: boolean
        selectedValueMappings:
          type: object
          description: This is a map of field names to their value mappings.
          example:
            stage:
              open: "scheduled"
              closedWon: "won"
              closedLost: "lost"
          x-go-type-skip-optional-pointer: true
          additionalProperties:
            $ref: '#/components/schemas/SelectedValueMappings'
        selectedFieldMappings:
          type: object
          description: This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)
          example: '{ phoneNumber: phone, faxNumber: fax }'
          additionalProperties:
            type: string
        selectedFieldsAuto:
          $ref: '#/components/schemas/SelectedFieldsAutoConfig'
        backfill:
          $ref: '#/components/schemas/BackfillConfig'

    SelectedValueMappings:
      title: Selected Value Mappings
      type: object
      description: This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.
      example:
        open: "scheduled"
        closedWon: "won"
        closedLost: "lost"
      x-go-type-skip-optional-pointer: true
      additionalProperties:
        type: string

    BaseWriteConfig:
      title: Base Write Config
      type: object
      properties:
        objects:
          type: object
          description: This is a map of object names to their configuration.
          additionalProperties:
            $ref: '#/components/schemas/BaseWriteConfigObject'

    BaseWriteConfigObject:
      title: Base Write Config Object
      type: object
      required:
        - objectName
      properties:
        objectName:
          description: The name of the object to write to.
          example: account
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
        selectedValueDefaults:
          type: object
          deprecated: true
          description: This is a map of field names to default values. These values will be used when writing to the object.
          x-go-type-skip-optional-pointer: true
          additionalProperties:
            $ref: '#/components/schemas/ValueDefault'
        selectedFieldSettings:
          type: object
          description: This is a map of field names to their settings.
          x-go-type-skip-optional-pointer: true
          additionalProperties:
            $ref: '#/components/schemas/FieldSetting'
   
    BaseSubscribeConfig:
      title: Base Subscribe Config
      type: object
      properties:
        objects:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BaseSubscribeConfigObject'
    
    BaseSubscribeConfigObject:
      title: Base Subscribe Config Object
      type: object
      required:
        - objectName
        - destination
        - inheritFieldsAndMappings
      properties:
        inheritFieldsAndMappings:
          type: boolean
          description: Whether to inherit fields and mappings from the read config.
          example: true
        objectName:
          description: The name of the object to subscribe to.
          example: account
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
        destination:
          description: The name of the destination that the result should be sent to.
          example: accountWebhook
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
        createEvent:
          $ref: '#/components/schemas/ConfigCreateEvent'
          x-oapi-codegen-extra-tags:
            validate: required_without_all=UpdateEvent DeleteEvent
        updateEvent:
          $ref: '#/components/schemas/ConfigUpdateEvent'
          x-oapi-codegen-extra-tags:
            validate: required_without_all=CreateEvent DeleteEvent
        deleteEvent:
          $ref: '#/components/schemas/ConfigDeleteEvent'
          x-oapi-codegen-extra-tags:
            validate: required_without_all=CreateEvent UpdateEvent

    ConfigCreateEvent:
      title: Create Event
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: string
          description: Conditions to enable create events.
          enum: [ always ]
          x-oapi-codegen-extra-tags:
            validate: oneof=always

    ConfigUpdateEvent:
      title: Update Event
      type: object
      required:
        - enabled
      x-oapi-codegen-extra-tags:
        validate: required_without_all=CreateEvent DeleteEvent
      properties:
        enabled:
          type: string
          description: Conditions to enable update events.
          example: always
          enum: [ always ]
          x-oapi-codegen-extra-tags:
            validate: oneof=always
        watchFieldsAuto:
          x-oapi-codegen-extra-tags:
            validate: required_without=RequiredWatchFields
          type: string
          description: Whether to watch fields all fields automatically.
          example: all
          enum: [ all ]
        requiredWatchFields:
          x-oapi-codegen-extra-tags:
            validate: required_without=WatchFieldsAuto
          type: array
          items:
            type: string
          description: The fields that should be watched.
          example: [ name, description ]

    ConfigDeleteEvent:
      title: Delete Event
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: string
          description: Conditions to enable delete events.
          example: always
          x-oapi-codegen-extra-tags:
            validate: oneof=always
          enum: [ always ]

    ConfigContent:
      title: Config Content
      allOf:
        - $ref: '#/components/schemas/BaseConfigContent'
        - type: object
          required:
            - provider
          properties:
            read:
              $ref: '#/components/schemas/ReadConfig'
            write:
              $ref: '#/components/schemas/WriteConfig'
            subscribe:
              $ref: '#/components/schemas/SubscribeConfig'

    ReadConfig:
      title: Read Config
      allOf:
        - $ref: '#/components/schemas/BaseReadConfig'
        - type: object
          required:
            - objects
          properties:
            objects:
              additionalProperties:
                $ref: '#/components/schemas/ReadConfigObject'
    ReadConfigObject:
      title: Read Config Object
      allOf:
        - $ref: '#/components/schemas/BaseReadConfigObject'
        - type: object
          required:
            - objectName
            - schedule
            - destination
            - selectedFields
            - selectedFieldMappings

    WriteConfig:
      title: Write Config
      allOf:
        - $ref: '#/components/schemas/BaseWriteConfig'
        - type: object
          properties:
            objects:
              additionalProperties:
                $ref: '#/components/schemas/WriteConfigObject'

    WriteConfigObject:
      title: Write Config Object
      allOf:
        - $ref: '#/components/schemas/BaseWriteConfigObject'
        - type: object
          required:
            - objectName
    
    SubscribeConfig:
      title: Subscribe Config
      allOf:
        - $ref: '#/components/schemas/BaseSubscribeConfig'
        - type: object
          properties:
            objects:
              additionalProperties:
                $ref: '#/components/schemas/SubscribeConfigObject'
    
    SubscribeConfigObject:
      title: Subscribe Config Object
      allOf:
        - $ref: '#/components/schemas/BaseSubscribeConfigObject'
        - type: object
          required:
            - objectName
            - destination
            - inheritFieldsAndMappings

    UpdateInstallationConfigContent:
      title: Update Installation Config Content
      allOf:
        - $ref: '#/components/schemas/BaseConfigContent'

    UpdateInstallationReadConfig:
      title: Update Installation Read Config
      allOf:
        - $ref: '#/components/schemas/BaseReadConfig'

    UpdateInstallationReadConfigObject:
      title: Update Installation Read Config Object
      allOf:
        - $ref: '#/components/schemas/BaseReadConfigObject'

    SelectedFieldsAutoConfig:
      title: Selected Fields Auto Config
      description: If selectedFieldsAuto is set to all, all fields will be read.
      type: string
      enum: [ all ]
      x-enum-varnames:
        - SelectedFieldsAll

    BackfillConfig:
      title: Backfill Config
      type: object
      required:
        - defaultPeriod
      properties:
        defaultPeriod:
          $ref: '#/components/schemas/DefaultPeriodConfig'

    DefaultPeriodConfig:
      title: Default Period Config
      type: object
      properties:
        days:
          type: integer
          description: Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.
          minimum: 0
          example: 30
          x-oapi-codegen-extra-tags:
            validate: required_without=FullHistory,omitempty,min=0
        fullHistory:
          type: boolean
          description: If true, backfill all history. Required if days is not set.
          example: false
          x-oapi-codegen-extra-tags:
            validate: required_without=Days

    FieldSetting:
      title: Field setting
      type: object
      properties:
        default:
          $ref: '#/components/schemas/FieldSettingDefault'
        writeOnCreate:
          type: string
          enum: [ always, never ]
          default: always
          x-go-type-skip-optional-pointer: true
          description: Whether the default value should be applied when creating a record.
        writeOnUpdate:
          type: string
          enum: [ always, never ]
          default: always
          x-go-type-skip-optional-pointer: true
          description: Whether the default value should be applied when updating a record.

    FieldSettingDefault:
      title: Default value for a field
      description: Only use one of stringValue, integerValue, booleanValue.
      type: object
      properties:
        stringValue:
          type: string
          description: The default string value to apply to a field
        integerValue:
          type: integer
          description: The default integer value to apply to a field
        booleanValue:
          type: boolean
          description: The default boolean value to apply to a field

    ValueDefault:
      title: Value Default (Legacy)
      deprecated: true
      x-go-type: any # TODO: Remove this when we no longer have to support the legacy string type (See ENG-1922).
      oneOf:
        - $ref: '#/components/schemas/ValueDefaultString'
        - $ref: '#/components/schemas/ValueDefaultInteger'
        - $ref: '#/components/schemas/ValueDefaultBoolean'

    ValueDefaultString:
      title: Value Default String
      type: object
      required:
        - value
      properties:
        value:
          type: string
          description: The value to be used as a default.
        applyOnUpdate:
          type: string
          enum: [ always, never ]
          description: |
            Whether the default value should be applied when updating a record.
            If set to `always`, the default value will be applied when updating a record.
            If set to `never`, the default value will not be applied when updating a record,
            only when creating a record.
            If unspecified, then `always` is assumed.
    ValueDefaultInteger:
      title: Value Default Integer
      type: object
      required:
        - value
      properties:
        value:
          type: integer
          description: The value to be used as a default.
        applyOnUpdate:
          type: string
          enum: [ always, never ]
          description: |
              Whether the default value should be applied when updating a record.
              If set to `always`, the default value will be applied when updating a record.
              If set to `never`, the default value will not be applied when updating a record,
              only when creating a record.
              If unspecified, then `always` is assumed.
    ValueDefaultBoolean:
      title: Value Default Boolean
      type: object
      required:
        - value
      properties:
        value:
          type: boolean
          description: The value to be used as a default.
        applyOnUpdate:
          type: string
          enum: [ always, never ]
          description: |
            Whether the default value should be applied when updating a record.
            If set to `always`, the default value will be applied when updating a record.
            If set to `never`, the default value will not be applied when updating a record,
            only when creating a record.
            If unspecified, then `always` is assumed.
