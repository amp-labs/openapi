{
  "openapi": "3.0.1",
  "info": {
    "title": "Config types",
    "version": "1.0.0",
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/license/mit"
    }
  },
  "servers": [],
  "paths": {},
  "components": {
    "schemas": {
      "BaseConfigContent": {
        "title": "Base Config Content",
        "type": "object",
        "properties": {
          "provider": {
            "description": "The SaaS API that we are integrating with.",
            "example": "hubspot",
            "type": "string"
          },
          "module": {
            "description": "The SaaS module that we are integrating with.",
            "example": "crm",
            "type": "string",
            "x-go-type-skip-optional-pointer": true
          },
          "read": {
            "title": "Base Read Config",
            "type": "object",
            "properties": {
              "objects": {
                "type": "object",
                "description": "This is a map of object names to their configuration.",
                "additionalProperties": {
                  "title": "Base Read Config Object",
                  "type": "object",
                  "properties": {
                    "objectName": {
                      "description": "The name of the object to read from.",
                      "example": "account",
                      "type": "string",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      }
                    },
                    "schedule": {
                      "type": "string",
                      "description": "The schedule for reading the object, in cron syntax.",
                      "example": "*/15 * * * *",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "destination": {
                      "description": "The name of the destination that the result should be sent to.",
                      "example": "accountWebhook",
                      "type": "string",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "selectedFields": {
                      "type": "object",
                      "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                      "example": "{ phone: true, fax: true }",
                      "additionalProperties": {
                        "type": "boolean"
                      }
                    },
                    "selectedValueMappings": {
                      "type": "object",
                      "description": "This is a map of field names to their value mappings.",
                      "example": {
                        "stage": {
                          "open": "scheduled",
                          "closedWon": "won",
                          "closedLost": "lost"
                        }
                      },
                      "x-go-type-skip-optional-pointer": true,
                      "additionalProperties": {
                        "title": "Selected Value Mappings",
                        "type": "object",
                        "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                        "example": {
                          "open": "scheduled",
                          "closedWon": "won",
                          "closedLost": "lost"
                        },
                        "x-go-type-skip-optional-pointer": true,
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "dynamicMappingsInput": {
                      "title": "Dynamic Mappings Input",
                      "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
                      "type": "array",
                      "items": {
                        "title": "Field Mapping Entry",
                        "type": "object",
                        "required": [
                          "mapToName"
                        ],
                        "properties": {
                          "mapToName": {
                            "type": "string",
                            "description": "The name of the field in your application."
                          },
                          "mapToDisplayName": {
                            "type": "string",
                            "description": "Optional display name of the field to show the user in the mapping UI."
                          },
                          "prompt": {
                            "type": "string",
                            "description": "Optional prompt to show the user in the mapping UI."
                          },
                          "mappedValues": {
                            "type": "array",
                            "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                            "items": {
                              "title": "Mapped Value",
                              "type": "object",
                              "required": [
                                "mappedValue",
                                "mappedDisplayValue"
                              ],
                              "properties": {
                                "mappedValue": {
                                  "type": "string"
                                },
                                "mappedDisplayValue": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                          }
                        }
                      }
                    },
                    "selectedFieldMappings": {
                      "type": "object",
                      "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                      "example": "{ phoneNumber: phone, faxNumber: fax }",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "selectedFieldsAuto": {
                      "title": "Selected Fields Auto Config",
                      "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                      "type": "string",
                      "enum": [
                        "all"
                      ],
                      "x-enum-varnames": [
                        "SelectedFieldsAll"
                      ]
                    },
                    "backfill": {
                      "title": "Backfill Config",
                      "type": "object",
                      "required": [
                        "defaultPeriod"
                      ],
                      "properties": {
                        "defaultPeriod": {
                          "title": "Default Period Config",
                          "type": "object",
                          "properties": {
                            "days": {
                              "type": "integer",
                              "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                              "minimum": 0,
                              "example": 30,
                              "x-oapi-codegen-extra-tags": {
                                "validate": "required_without=FullHistory,omitempty,min=0"
                              }
                            },
                            "fullHistory": {
                              "type": "boolean",
                              "description": "If true, backfill all history. Required if days is not set.",
                              "example": false,
                              "x-oapi-codegen-extra-tags": {
                                "validate": "required_without=Days"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "write": {
            "title": "Base Write Config",
            "type": "object",
            "properties": {
              "objects": {
                "type": "object",
                "description": "This is a map of object names to their configuration.",
                "additionalProperties": {
                  "title": "Base Write Config Object",
                  "type": "object",
                  "required": [
                    "objectName"
                  ],
                  "properties": {
                    "objectName": {
                      "description": "The name of the object to write to.",
                      "example": "account",
                      "type": "string",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      }
                    },
                    "selectedValueDefaults": {
                      "type": "object",
                      "deprecated": true,
                      "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                      "x-go-type-skip-optional-pointer": true,
                      "additionalProperties": {
                        "title": "Value Default (Legacy)",
                        "deprecated": true,
                        "x-go-type": "any",
                        "oneOf": [
                          {
                            "title": "Value Default String",
                            "type": "object",
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "The value to be used as a default."
                              },
                              "applyOnUpdate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                              }
                            }
                          },
                          {
                            "title": "Value Default Integer",
                            "type": "object",
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "type": "integer",
                                "description": "The value to be used as a default."
                              },
                              "applyOnUpdate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                              }
                            }
                          },
                          {
                            "title": "Value Default Boolean",
                            "type": "object",
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "type": "boolean",
                                "description": "The value to be used as a default."
                              },
                              "applyOnUpdate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "selectedFieldSettings": {
                      "type": "object",
                      "description": "This is a map of field names to their settings.",
                      "x-go-type-skip-optional-pointer": true,
                      "additionalProperties": {
                        "title": "Field setting",
                        "type": "object",
                        "properties": {
                          "default": {
                            "title": "Default value for a field",
                            "description": "Only use one of stringValue, integerValue, booleanValue.",
                            "type": "object",
                            "properties": {
                              "stringValue": {
                                "type": "string",
                                "description": "The default string value to apply to a field"
                              },
                              "integerValue": {
                                "type": "integer",
                                "description": "The default integer value to apply to a field"
                              },
                              "booleanValue": {
                                "type": "boolean",
                                "description": "The default boolean value to apply to a field"
                              }
                            }
                          },
                          "writeOnCreate": {
                            "type": "string",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "default": "always",
                            "x-go-type-skip-optional-pointer": true,
                            "description": "Whether the default value should be applied when creating a record."
                          },
                          "writeOnUpdate": {
                            "type": "string",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "default": "always",
                            "x-go-type-skip-optional-pointer": true,
                            "description": "Whether the default value should be applied when updating a record."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "proxy": {
            "title": "Base Proxy Config",
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean"
              },
              "useModule": {
                "description": "Default is false. If this is set to true, the base URL for the proxy action will be the module's base URL. Otherwise, it is assumed that the base URL is the provider's root base URL.",
                "type": "boolean"
              }
            }
          }
        }
      },
      "BaseProxyConfig": {
        "title": "Base Proxy Config",
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "useModule": {
            "description": "Default is false. If this is set to true, the base URL for the proxy action will be the module's base URL. Otherwise, it is assumed that the base URL is the provider's root base URL.",
            "type": "boolean"
          }
        }
      },
      "BaseReadConfig": {
        "title": "Base Read Config",
        "type": "object",
        "properties": {
          "objects": {
            "type": "object",
            "description": "This is a map of object names to their configuration.",
            "additionalProperties": {
              "title": "Base Read Config Object",
              "type": "object",
              "properties": {
                "objectName": {
                  "description": "The name of the object to read from.",
                  "example": "account",
                  "type": "string",
                  "x-oapi-codegen-extra-tags": {
                    "validate": "required"
                  }
                },
                "schedule": {
                  "type": "string",
                  "description": "The schedule for reading the object, in cron syntax.",
                  "example": "*/15 * * * *",
                  "x-go-type-skip-optional-pointer": true
                },
                "destination": {
                  "description": "The name of the destination that the result should be sent to.",
                  "example": "accountWebhook",
                  "type": "string",
                  "x-go-type-skip-optional-pointer": true
                },
                "selectedFields": {
                  "type": "object",
                  "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                  "example": "{ phone: true, fax: true }",
                  "additionalProperties": {
                    "type": "boolean"
                  }
                },
                "selectedValueMappings": {
                  "type": "object",
                  "description": "This is a map of field names to their value mappings.",
                  "example": {
                    "stage": {
                      "open": "scheduled",
                      "closedWon": "won",
                      "closedLost": "lost"
                    }
                  },
                  "x-go-type-skip-optional-pointer": true,
                  "additionalProperties": {
                    "title": "Selected Value Mappings",
                    "type": "object",
                    "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                    "example": {
                      "open": "scheduled",
                      "closedWon": "won",
                      "closedLost": "lost"
                    },
                    "x-go-type-skip-optional-pointer": true,
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "dynamicMappingsInput": {
                  "title": "Dynamic Mappings Input",
                  "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
                  "type": "array",
                  "items": {
                    "title": "Field Mapping Entry",
                    "type": "object",
                    "required": [
                      "mapToName"
                    ],
                    "properties": {
                      "mapToName": {
                        "type": "string",
                        "description": "The name of the field in your application."
                      },
                      "mapToDisplayName": {
                        "type": "string",
                        "description": "Optional display name of the field to show the user in the mapping UI."
                      },
                      "prompt": {
                        "type": "string",
                        "description": "Optional prompt to show the user in the mapping UI."
                      },
                      "mappedValues": {
                        "type": "array",
                        "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                        "items": {
                          "title": "Mapped Value",
                          "type": "object",
                          "required": [
                            "mappedValue",
                            "mappedDisplayValue"
                          ],
                          "properties": {
                            "mappedValue": {
                              "type": "string"
                            },
                            "mappedDisplayValue": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "fieldName": {
                        "type": "string",
                        "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                      }
                    }
                  }
                },
                "selectedFieldMappings": {
                  "type": "object",
                  "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                  "example": "{ phoneNumber: phone, faxNumber: fax }",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "selectedFieldsAuto": {
                  "title": "Selected Fields Auto Config",
                  "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                  "type": "string",
                  "enum": [
                    "all"
                  ],
                  "x-enum-varnames": [
                    "SelectedFieldsAll"
                  ]
                },
                "backfill": {
                  "title": "Backfill Config",
                  "type": "object",
                  "required": [
                    "defaultPeriod"
                  ],
                  "properties": {
                    "defaultPeriod": {
                      "title": "Default Period Config",
                      "type": "object",
                      "properties": {
                        "days": {
                          "type": "integer",
                          "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                          "minimum": 0,
                          "example": 30,
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required_without=FullHistory,omitempty,min=0"
                          }
                        },
                        "fullHistory": {
                          "type": "boolean",
                          "description": "If true, backfill all history. Required if days is not set.",
                          "example": false,
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required_without=Days"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BaseReadConfigObject": {
        "title": "Base Read Config Object",
        "type": "object",
        "properties": {
          "objectName": {
            "description": "The name of the object to read from.",
            "example": "account",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "validate": "required"
            }
          },
          "schedule": {
            "type": "string",
            "description": "The schedule for reading the object, in cron syntax.",
            "example": "*/15 * * * *",
            "x-go-type-skip-optional-pointer": true
          },
          "destination": {
            "description": "The name of the destination that the result should be sent to.",
            "example": "accountWebhook",
            "type": "string",
            "x-go-type-skip-optional-pointer": true
          },
          "selectedFields": {
            "type": "object",
            "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
            "example": "{ phone: true, fax: true }",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "selectedValueMappings": {
            "type": "object",
            "description": "This is a map of field names to their value mappings.",
            "example": {
              "stage": {
                "open": "scheduled",
                "closedWon": "won",
                "closedLost": "lost"
              }
            },
            "x-go-type-skip-optional-pointer": true,
            "additionalProperties": {
              "title": "Selected Value Mappings",
              "type": "object",
              "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
              "example": {
                "open": "scheduled",
                "closedWon": "won",
                "closedLost": "lost"
              },
              "x-go-type-skip-optional-pointer": true,
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "dynamicMappingsInput": {
            "title": "Dynamic Mappings Input",
            "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
            "type": "array",
            "items": {
              "title": "Field Mapping Entry",
              "type": "object",
              "required": [
                "mapToName"
              ],
              "properties": {
                "mapToName": {
                  "type": "string",
                  "description": "The name of the field in your application."
                },
                "mapToDisplayName": {
                  "type": "string",
                  "description": "Optional display name of the field to show the user in the mapping UI."
                },
                "prompt": {
                  "type": "string",
                  "description": "Optional prompt to show the user in the mapping UI."
                },
                "mappedValues": {
                  "type": "array",
                  "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                  "items": {
                    "title": "Mapped Value",
                    "type": "object",
                    "required": [
                      "mappedValue",
                      "mappedDisplayValue"
                    ],
                    "properties": {
                      "mappedValue": {
                        "type": "string"
                      },
                      "mappedDisplayValue": {
                        "type": "string"
                      }
                    }
                  }
                },
                "fieldName": {
                  "type": "string",
                  "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                }
              }
            }
          },
          "selectedFieldMappings": {
            "type": "object",
            "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
            "example": "{ phoneNumber: phone, faxNumber: fax }",
            "additionalProperties": {
              "type": "string"
            }
          },
          "selectedFieldsAuto": {
            "title": "Selected Fields Auto Config",
            "description": "If selectedFieldsAuto is set to all, all fields will be read.",
            "type": "string",
            "enum": [
              "all"
            ],
            "x-enum-varnames": [
              "SelectedFieldsAll"
            ]
          },
          "backfill": {
            "title": "Backfill Config",
            "type": "object",
            "required": [
              "defaultPeriod"
            ],
            "properties": {
              "defaultPeriod": {
                "title": "Default Period Config",
                "type": "object",
                "properties": {
                  "days": {
                    "type": "integer",
                    "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                    "minimum": 0,
                    "example": 30,
                    "x-oapi-codegen-extra-tags": {
                      "validate": "required_without=FullHistory,omitempty,min=0"
                    }
                  },
                  "fullHistory": {
                    "type": "boolean",
                    "description": "If true, backfill all history. Required if days is not set.",
                    "example": false,
                    "x-oapi-codegen-extra-tags": {
                      "validate": "required_without=Days"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "SelectedValueMappings": {
        "title": "Selected Value Mappings",
        "type": "object",
        "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
        "example": {
          "open": "scheduled",
          "closedWon": "won",
          "closedLost": "lost"
        },
        "x-go-type-skip-optional-pointer": true,
        "additionalProperties": {
          "type": "string"
        }
      },
      "DynamicMappingsInput": {
        "title": "Dynamic Mappings Input",
        "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
        "type": "array",
        "items": {
          "title": "Field Mapping Entry",
          "type": "object",
          "required": [
            "mapToName"
          ],
          "properties": {
            "mapToName": {
              "type": "string",
              "description": "The name of the field in your application."
            },
            "mapToDisplayName": {
              "type": "string",
              "description": "Optional display name of the field to show the user in the mapping UI."
            },
            "prompt": {
              "type": "string",
              "description": "Optional prompt to show the user in the mapping UI."
            },
            "mappedValues": {
              "type": "array",
              "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
              "items": {
                "title": "Mapped Value",
                "type": "object",
                "required": [
                  "mappedValue",
                  "mappedDisplayValue"
                ],
                "properties": {
                  "mappedValue": {
                    "type": "string"
                  },
                  "mappedDisplayValue": {
                    "type": "string"
                  }
                }
              }
            },
            "fieldName": {
              "type": "string",
              "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
            }
          }
        }
      },
      "BaseWriteConfig": {
        "title": "Base Write Config",
        "type": "object",
        "properties": {
          "objects": {
            "type": "object",
            "description": "This is a map of object names to their configuration.",
            "additionalProperties": {
              "title": "Base Write Config Object",
              "type": "object",
              "required": [
                "objectName"
              ],
              "properties": {
                "objectName": {
                  "description": "The name of the object to write to.",
                  "example": "account",
                  "type": "string",
                  "x-oapi-codegen-extra-tags": {
                    "validate": "required"
                  }
                },
                "selectedValueDefaults": {
                  "type": "object",
                  "deprecated": true,
                  "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                  "x-go-type-skip-optional-pointer": true,
                  "additionalProperties": {
                    "title": "Value Default (Legacy)",
                    "deprecated": true,
                    "x-go-type": "any",
                    "oneOf": [
                      {
                        "title": "Value Default String",
                        "type": "object",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "The value to be used as a default."
                          },
                          "applyOnUpdate": {
                            "type": "string",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                          }
                        }
                      },
                      {
                        "title": "Value Default Integer",
                        "type": "object",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "value": {
                            "type": "integer",
                            "description": "The value to be used as a default."
                          },
                          "applyOnUpdate": {
                            "type": "string",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                          }
                        }
                      },
                      {
                        "title": "Value Default Boolean",
                        "type": "object",
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "value": {
                            "type": "boolean",
                            "description": "The value to be used as a default."
                          },
                          "applyOnUpdate": {
                            "type": "string",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                          }
                        }
                      }
                    ]
                  }
                },
                "selectedFieldSettings": {
                  "type": "object",
                  "description": "This is a map of field names to their settings.",
                  "x-go-type-skip-optional-pointer": true,
                  "additionalProperties": {
                    "title": "Field setting",
                    "type": "object",
                    "properties": {
                      "default": {
                        "title": "Default value for a field",
                        "description": "Only use one of stringValue, integerValue, booleanValue.",
                        "type": "object",
                        "properties": {
                          "stringValue": {
                            "type": "string",
                            "description": "The default string value to apply to a field"
                          },
                          "integerValue": {
                            "type": "integer",
                            "description": "The default integer value to apply to a field"
                          },
                          "booleanValue": {
                            "type": "boolean",
                            "description": "The default boolean value to apply to a field"
                          }
                        }
                      },
                      "writeOnCreate": {
                        "type": "string",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "default": "always",
                        "x-go-type-skip-optional-pointer": true,
                        "description": "Whether the default value should be applied when creating a record."
                      },
                      "writeOnUpdate": {
                        "type": "string",
                        "enum": [
                          "always",
                          "never"
                        ],
                        "default": "always",
                        "x-go-type-skip-optional-pointer": true,
                        "description": "Whether the default value should be applied when updating a record."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BaseWriteConfigObject": {
        "title": "Base Write Config Object",
        "type": "object",
        "required": [
          "objectName"
        ],
        "properties": {
          "objectName": {
            "description": "The name of the object to write to.",
            "example": "account",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "validate": "required"
            }
          },
          "selectedValueDefaults": {
            "type": "object",
            "deprecated": true,
            "description": "This is a map of field names to default values. These values will be used when writing to the object.",
            "x-go-type-skip-optional-pointer": true,
            "additionalProperties": {
              "title": "Value Default (Legacy)",
              "deprecated": true,
              "x-go-type": "any",
              "oneOf": [
                {
                  "title": "Value Default String",
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "The value to be used as a default."
                    },
                    "applyOnUpdate": {
                      "type": "string",
                      "enum": [
                        "always",
                        "never"
                      ],
                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                    }
                  }
                },
                {
                  "title": "Value Default Integer",
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "value": {
                      "type": "integer",
                      "description": "The value to be used as a default."
                    },
                    "applyOnUpdate": {
                      "type": "string",
                      "enum": [
                        "always",
                        "never"
                      ],
                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                    }
                  }
                },
                {
                  "title": "Value Default Boolean",
                  "type": "object",
                  "required": [
                    "value"
                  ],
                  "properties": {
                    "value": {
                      "type": "boolean",
                      "description": "The value to be used as a default."
                    },
                    "applyOnUpdate": {
                      "type": "string",
                      "enum": [
                        "always",
                        "never"
                      ],
                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                    }
                  }
                }
              ]
            }
          },
          "selectedFieldSettings": {
            "type": "object",
            "description": "This is a map of field names to their settings.",
            "x-go-type-skip-optional-pointer": true,
            "additionalProperties": {
              "title": "Field setting",
              "type": "object",
              "properties": {
                "default": {
                  "title": "Default value for a field",
                  "description": "Only use one of stringValue, integerValue, booleanValue.",
                  "type": "object",
                  "properties": {
                    "stringValue": {
                      "type": "string",
                      "description": "The default string value to apply to a field"
                    },
                    "integerValue": {
                      "type": "integer",
                      "description": "The default integer value to apply to a field"
                    },
                    "booleanValue": {
                      "type": "boolean",
                      "description": "The default boolean value to apply to a field"
                    }
                  }
                },
                "writeOnCreate": {
                  "type": "string",
                  "enum": [
                    "always",
                    "never"
                  ],
                  "default": "always",
                  "x-go-type-skip-optional-pointer": true,
                  "description": "Whether the default value should be applied when creating a record."
                },
                "writeOnUpdate": {
                  "type": "string",
                  "enum": [
                    "always",
                    "never"
                  ],
                  "default": "always",
                  "x-go-type-skip-optional-pointer": true,
                  "description": "Whether the default value should be applied when updating a record."
                }
              }
            }
          }
        }
      },
      "BaseSubscribeConfig": {
        "title": "Base Subscribe Config",
        "type": "object",
        "properties": {
          "objects": {
            "type": "object",
            "additionalProperties": {
              "title": "Base Subscribe Config Object",
              "type": "object",
              "required": [
                "objectName",
                "destination",
                "inheritFieldsAndMappings"
              ],
              "properties": {
                "inheritFieldsAndMappings": {
                  "type": "boolean",
                  "description": "Whether to inherit fields and mappings from the read config.",
                  "example": true
                },
                "objectName": {
                  "description": "The name of the object to subscribe to.",
                  "example": "account",
                  "type": "string",
                  "x-oapi-codegen-extra-tags": {
                    "validate": "required"
                  }
                },
                "destination": {
                  "description": "The name of the destination that the result should be sent to.",
                  "example": "accountWebhook",
                  "type": "string"
                },
                "createEvent": {
                  "title": "Create Event",
                  "type": "object",
                  "required": [
                    "enabled"
                  ],
                  "properties": {
                    "enabled": {
                      "type": "string",
                      "description": "Conditions to enable create events.",
                      "enum": [
                        "always",
                        "never"
                      ],
                      "x-oapi-codegen-extra-tags": {
                        "validate": "oneof=always never"
                      }
                    }
                  }
                },
                "updateEvent": {
                  "title": "Update Event",
                  "type": "object",
                  "required": [
                    "enabled"
                  ],
                  "properties": {
                    "enabled": {
                      "type": "string",
                      "description": "Conditions to enable update events.",
                      "example": "always",
                      "enum": [
                        "always",
                        "never"
                      ],
                      "x-oapi-codegen-extra-tags": {
                        "validate": "oneof=always never"
                      }
                    },
                    "watchFieldsAuto": {
                      "type": "string",
                      "description": "Whether to watch fields all fields automatically.",
                      "example": "all",
                      "enum": [
                        "all"
                      ]
                    },
                    "requiredWatchFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The fields that should be watched.",
                      "example": [
                        "name",
                        "description"
                      ]
                    }
                  }
                },
                "deleteEvent": {
                  "title": "Delete Event",
                  "type": "object",
                  "required": [
                    "enabled"
                  ],
                  "properties": {
                    "enabled": {
                      "type": "string",
                      "description": "Conditions to enable delete events.",
                      "example": "always",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "oneof=always never"
                      },
                      "enum": [
                        "always",
                        "never"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BaseSubscribeConfigObject": {
        "title": "Base Subscribe Config Object",
        "type": "object",
        "required": [
          "objectName",
          "destination",
          "inheritFieldsAndMappings"
        ],
        "properties": {
          "inheritFieldsAndMappings": {
            "type": "boolean",
            "description": "Whether to inherit fields and mappings from the read config.",
            "example": true
          },
          "objectName": {
            "description": "The name of the object to subscribe to.",
            "example": "account",
            "type": "string",
            "x-oapi-codegen-extra-tags": {
              "validate": "required"
            }
          },
          "destination": {
            "description": "The name of the destination that the result should be sent to.",
            "example": "accountWebhook",
            "type": "string"
          },
          "createEvent": {
            "title": "Create Event",
            "type": "object",
            "required": [
              "enabled"
            ],
            "properties": {
              "enabled": {
                "type": "string",
                "description": "Conditions to enable create events.",
                "enum": [
                  "always",
                  "never"
                ],
                "x-oapi-codegen-extra-tags": {
                  "validate": "oneof=always never"
                }
              }
            }
          },
          "updateEvent": {
            "title": "Update Event",
            "type": "object",
            "required": [
              "enabled"
            ],
            "properties": {
              "enabled": {
                "type": "string",
                "description": "Conditions to enable update events.",
                "example": "always",
                "enum": [
                  "always",
                  "never"
                ],
                "x-oapi-codegen-extra-tags": {
                  "validate": "oneof=always never"
                }
              },
              "watchFieldsAuto": {
                "type": "string",
                "description": "Whether to watch fields all fields automatically.",
                "example": "all",
                "enum": [
                  "all"
                ]
              },
              "requiredWatchFields": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The fields that should be watched.",
                "example": [
                  "name",
                  "description"
                ]
              }
            }
          },
          "deleteEvent": {
            "title": "Delete Event",
            "type": "object",
            "required": [
              "enabled"
            ],
            "properties": {
              "enabled": {
                "type": "string",
                "description": "Conditions to enable delete events.",
                "example": "always",
                "x-oapi-codegen-extra-tags": {
                  "validate": "oneof=always never"
                },
                "enum": [
                  "always",
                  "never"
                ]
              }
            }
          }
        }
      },
      "ConfigCreateEvent": {
        "title": "Create Event",
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "string",
            "description": "Conditions to enable create events.",
            "enum": [
              "always",
              "never"
            ],
            "x-oapi-codegen-extra-tags": {
              "validate": "oneof=always never"
            }
          }
        }
      },
      "ConfigUpdateEvent": {
        "title": "Update Event",
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "string",
            "description": "Conditions to enable update events.",
            "example": "always",
            "enum": [
              "always",
              "never"
            ],
            "x-oapi-codegen-extra-tags": {
              "validate": "oneof=always never"
            }
          },
          "watchFieldsAuto": {
            "type": "string",
            "description": "Whether to watch fields all fields automatically.",
            "example": "all",
            "enum": [
              "all"
            ]
          },
          "requiredWatchFields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The fields that should be watched.",
            "example": [
              "name",
              "description"
            ]
          }
        }
      },
      "ConfigDeleteEvent": {
        "title": "Delete Event",
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "string",
            "description": "Conditions to enable delete events.",
            "example": "always",
            "x-oapi-codegen-extra-tags": {
              "validate": "oneof=always never"
            },
            "enum": [
              "always",
              "never"
            ]
          }
        }
      },
      "ConfigContent": {
        "title": "Config Content",
        "allOf": [
          {
            "title": "Base Config Content",
            "type": "object",
            "properties": {
              "provider": {
                "description": "The SaaS API that we are integrating with.",
                "example": "hubspot",
                "type": "string"
              },
              "module": {
                "description": "The SaaS module that we are integrating with.",
                "example": "crm",
                "type": "string",
                "x-go-type-skip-optional-pointer": true
              },
              "read": {
                "title": "Base Read Config",
                "type": "object",
                "properties": {
                  "objects": {
                    "type": "object",
                    "description": "This is a map of object names to their configuration.",
                    "additionalProperties": {
                      "title": "Base Read Config Object",
                      "type": "object",
                      "properties": {
                        "objectName": {
                          "description": "The name of the object to read from.",
                          "example": "account",
                          "type": "string",
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required"
                          }
                        },
                        "schedule": {
                          "type": "string",
                          "description": "The schedule for reading the object, in cron syntax.",
                          "example": "*/15 * * * *",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "destination": {
                          "description": "The name of the destination that the result should be sent to.",
                          "example": "accountWebhook",
                          "type": "string",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "selectedFields": {
                          "type": "object",
                          "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                          "example": "{ phone: true, fax: true }",
                          "additionalProperties": {
                            "type": "boolean"
                          }
                        },
                        "selectedValueMappings": {
                          "type": "object",
                          "description": "This is a map of field names to their value mappings.",
                          "example": {
                            "stage": {
                              "open": "scheduled",
                              "closedWon": "won",
                              "closedLost": "lost"
                            }
                          },
                          "x-go-type-skip-optional-pointer": true,
                          "additionalProperties": {
                            "title": "Selected Value Mappings",
                            "type": "object",
                            "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                            "example": {
                              "open": "scheduled",
                              "closedWon": "won",
                              "closedLost": "lost"
                            },
                            "x-go-type-skip-optional-pointer": true,
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "dynamicMappingsInput": {
                          "title": "Dynamic Mappings Input",
                          "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
                          "type": "array",
                          "items": {
                            "title": "Field Mapping Entry",
                            "type": "object",
                            "required": [
                              "mapToName"
                            ],
                            "properties": {
                              "mapToName": {
                                "type": "string",
                                "description": "The name of the field in your application."
                              },
                              "mapToDisplayName": {
                                "type": "string",
                                "description": "Optional display name of the field to show the user in the mapping UI."
                              },
                              "prompt": {
                                "type": "string",
                                "description": "Optional prompt to show the user in the mapping UI."
                              },
                              "mappedValues": {
                                "type": "array",
                                "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                                "items": {
                                  "title": "Mapped Value",
                                  "type": "object",
                                  "required": [
                                    "mappedValue",
                                    "mappedDisplayValue"
                                  ],
                                  "properties": {
                                    "mappedValue": {
                                      "type": "string"
                                    },
                                    "mappedDisplayValue": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "fieldName": {
                                "type": "string",
                                "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                              }
                            }
                          }
                        },
                        "selectedFieldMappings": {
                          "type": "object",
                          "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                          "example": "{ phoneNumber: phone, faxNumber: fax }",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "selectedFieldsAuto": {
                          "title": "Selected Fields Auto Config",
                          "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                          "type": "string",
                          "enum": [
                            "all"
                          ],
                          "x-enum-varnames": [
                            "SelectedFieldsAll"
                          ]
                        },
                        "backfill": {
                          "title": "Backfill Config",
                          "type": "object",
                          "required": [
                            "defaultPeriod"
                          ],
                          "properties": {
                            "defaultPeriod": {
                              "title": "Default Period Config",
                              "type": "object",
                              "properties": {
                                "days": {
                                  "type": "integer",
                                  "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                  "minimum": 0,
                                  "example": 30,
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required_without=FullHistory,omitempty,min=0"
                                  }
                                },
                                "fullHistory": {
                                  "type": "boolean",
                                  "description": "If true, backfill all history. Required if days is not set.",
                                  "example": false,
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required_without=Days"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "write": {
                "title": "Base Write Config",
                "type": "object",
                "properties": {
                  "objects": {
                    "type": "object",
                    "description": "This is a map of object names to their configuration.",
                    "additionalProperties": {
                      "title": "Base Write Config Object",
                      "type": "object",
                      "required": [
                        "objectName"
                      ],
                      "properties": {
                        "objectName": {
                          "description": "The name of the object to write to.",
                          "example": "account",
                          "type": "string",
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required"
                          }
                        },
                        "selectedValueDefaults": {
                          "type": "object",
                          "deprecated": true,
                          "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                          "x-go-type-skip-optional-pointer": true,
                          "additionalProperties": {
                            "title": "Value Default (Legacy)",
                            "deprecated": true,
                            "x-go-type": "any",
                            "oneOf": [
                              {
                                "title": "Value Default String",
                                "type": "object",
                                "required": [
                                  "value"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "description": "The value to be used as a default."
                                  },
                                  "applyOnUpdate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                  }
                                }
                              },
                              {
                                "title": "Value Default Integer",
                                "type": "object",
                                "required": [
                                  "value"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "integer",
                                    "description": "The value to be used as a default."
                                  },
                                  "applyOnUpdate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                  }
                                }
                              },
                              {
                                "title": "Value Default Boolean",
                                "type": "object",
                                "required": [
                                  "value"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "boolean",
                                    "description": "The value to be used as a default."
                                  },
                                  "applyOnUpdate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "selectedFieldSettings": {
                          "type": "object",
                          "description": "This is a map of field names to their settings.",
                          "x-go-type-skip-optional-pointer": true,
                          "additionalProperties": {
                            "title": "Field setting",
                            "type": "object",
                            "properties": {
                              "default": {
                                "title": "Default value for a field",
                                "description": "Only use one of stringValue, integerValue, booleanValue.",
                                "type": "object",
                                "properties": {
                                  "stringValue": {
                                    "type": "string",
                                    "description": "The default string value to apply to a field"
                                  },
                                  "integerValue": {
                                    "type": "integer",
                                    "description": "The default integer value to apply to a field"
                                  },
                                  "booleanValue": {
                                    "type": "boolean",
                                    "description": "The default boolean value to apply to a field"
                                  }
                                }
                              },
                              "writeOnCreate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "default": "always",
                                "x-go-type-skip-optional-pointer": true,
                                "description": "Whether the default value should be applied when creating a record."
                              },
                              "writeOnUpdate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "default": "always",
                                "x-go-type-skip-optional-pointer": true,
                                "description": "Whether the default value should be applied when updating a record."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "proxy": {
                "title": "Base Proxy Config",
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "useModule": {
                    "description": "Default is false. If this is set to true, the base URL for the proxy action will be the module's base URL. Otherwise, it is assumed that the base URL is the provider's root base URL.",
                    "type": "boolean"
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "provider"
            ],
            "properties": {
              "read": {
                "title": "Read Config",
                "allOf": [
                  {
                    "title": "Base Read Config",
                    "type": "object",
                    "properties": {
                      "objects": {
                        "type": "object",
                        "description": "This is a map of object names to their configuration.",
                        "additionalProperties": {
                          "title": "Base Read Config Object",
                          "type": "object",
                          "properties": {
                            "objectName": {
                              "description": "The name of the object to read from.",
                              "example": "account",
                              "type": "string",
                              "x-oapi-codegen-extra-tags": {
                                "validate": "required"
                              }
                            },
                            "schedule": {
                              "type": "string",
                              "description": "The schedule for reading the object, in cron syntax.",
                              "example": "*/15 * * * *",
                              "x-go-type-skip-optional-pointer": true
                            },
                            "destination": {
                              "description": "The name of the destination that the result should be sent to.",
                              "example": "accountWebhook",
                              "type": "string",
                              "x-go-type-skip-optional-pointer": true
                            },
                            "selectedFields": {
                              "type": "object",
                              "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                              "example": "{ phone: true, fax: true }",
                              "additionalProperties": {
                                "type": "boolean"
                              }
                            },
                            "selectedValueMappings": {
                              "type": "object",
                              "description": "This is a map of field names to their value mappings.",
                              "example": {
                                "stage": {
                                  "open": "scheduled",
                                  "closedWon": "won",
                                  "closedLost": "lost"
                                }
                              },
                              "x-go-type-skip-optional-pointer": true,
                              "additionalProperties": {
                                "title": "Selected Value Mappings",
                                "type": "object",
                                "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                                "example": {
                                  "open": "scheduled",
                                  "closedWon": "won",
                                  "closedLost": "lost"
                                },
                                "x-go-type-skip-optional-pointer": true,
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "dynamicMappingsInput": {
                              "title": "Dynamic Mappings Input",
                              "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
                              "type": "array",
                              "items": {
                                "title": "Field Mapping Entry",
                                "type": "object",
                                "required": [
                                  "mapToName"
                                ],
                                "properties": {
                                  "mapToName": {
                                    "type": "string",
                                    "description": "The name of the field in your application."
                                  },
                                  "mapToDisplayName": {
                                    "type": "string",
                                    "description": "Optional display name of the field to show the user in the mapping UI."
                                  },
                                  "prompt": {
                                    "type": "string",
                                    "description": "Optional prompt to show the user in the mapping UI."
                                  },
                                  "mappedValues": {
                                    "type": "array",
                                    "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                                    "items": {
                                      "title": "Mapped Value",
                                      "type": "object",
                                      "required": [
                                        "mappedValue",
                                        "mappedDisplayValue"
                                      ],
                                      "properties": {
                                        "mappedValue": {
                                          "type": "string"
                                        },
                                        "mappedDisplayValue": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "fieldName": {
                                    "type": "string",
                                    "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                                  }
                                }
                              }
                            },
                            "selectedFieldMappings": {
                              "type": "object",
                              "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                              "example": "{ phoneNumber: phone, faxNumber: fax }",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "selectedFieldsAuto": {
                              "title": "Selected Fields Auto Config",
                              "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                              "type": "string",
                              "enum": [
                                "all"
                              ],
                              "x-enum-varnames": [
                                "SelectedFieldsAll"
                              ]
                            },
                            "backfill": {
                              "title": "Backfill Config",
                              "type": "object",
                              "required": [
                                "defaultPeriod"
                              ],
                              "properties": {
                                "defaultPeriod": {
                                  "title": "Default Period Config",
                                  "type": "object",
                                  "properties": {
                                    "days": {
                                      "type": "integer",
                                      "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                      "minimum": 0,
                                      "example": 30,
                                      "x-oapi-codegen-extra-tags": {
                                        "validate": "required_without=FullHistory,omitempty,min=0"
                                      }
                                    },
                                    "fullHistory": {
                                      "type": "boolean",
                                      "description": "If true, backfill all history. Required if days is not set.",
                                      "example": false,
                                      "x-oapi-codegen-extra-tags": {
                                        "validate": "required_without=Days"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "objects"
                    ],
                    "properties": {
                      "objects": {
                        "additionalProperties": {
                          "title": "Read Config Object",
                          "allOf": [
                            {
                              "title": "Base Read Config Object",
                              "type": "object",
                              "properties": {
                                "objectName": {
                                  "description": "The name of the object to read from.",
                                  "example": "account",
                                  "type": "string",
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required"
                                  }
                                },
                                "schedule": {
                                  "type": "string",
                                  "description": "The schedule for reading the object, in cron syntax.",
                                  "example": "*/15 * * * *",
                                  "x-go-type-skip-optional-pointer": true
                                },
                                "destination": {
                                  "description": "The name of the destination that the result should be sent to.",
                                  "example": "accountWebhook",
                                  "type": "string",
                                  "x-go-type-skip-optional-pointer": true
                                },
                                "selectedFields": {
                                  "type": "object",
                                  "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                                  "example": "{ phone: true, fax: true }",
                                  "additionalProperties": {
                                    "type": "boolean"
                                  }
                                },
                                "selectedValueMappings": {
                                  "type": "object",
                                  "description": "This is a map of field names to their value mappings.",
                                  "example": {
                                    "stage": {
                                      "open": "scheduled",
                                      "closedWon": "won",
                                      "closedLost": "lost"
                                    }
                                  },
                                  "x-go-type-skip-optional-pointer": true,
                                  "additionalProperties": {
                                    "title": "Selected Value Mappings",
                                    "type": "object",
                                    "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                                    "example": {
                                      "open": "scheduled",
                                      "closedWon": "won",
                                      "closedLost": "lost"
                                    },
                                    "x-go-type-skip-optional-pointer": true,
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "dynamicMappingsInput": {
                                  "title": "Dynamic Mappings Input",
                                  "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
                                  "type": "array",
                                  "items": {
                                    "title": "Field Mapping Entry",
                                    "type": "object",
                                    "required": [
                                      "mapToName"
                                    ],
                                    "properties": {
                                      "mapToName": {
                                        "type": "string",
                                        "description": "The name of the field in your application."
                                      },
                                      "mapToDisplayName": {
                                        "type": "string",
                                        "description": "Optional display name of the field to show the user in the mapping UI."
                                      },
                                      "prompt": {
                                        "type": "string",
                                        "description": "Optional prompt to show the user in the mapping UI."
                                      },
                                      "mappedValues": {
                                        "type": "array",
                                        "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                                        "items": {
                                          "title": "Mapped Value",
                                          "type": "object",
                                          "required": [
                                            "mappedValue",
                                            "mappedDisplayValue"
                                          ],
                                          "properties": {
                                            "mappedValue": {
                                              "type": "string"
                                            },
                                            "mappedDisplayValue": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "fieldName": {
                                        "type": "string",
                                        "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                                      }
                                    }
                                  }
                                },
                                "selectedFieldMappings": {
                                  "type": "object",
                                  "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                                  "example": "{ phoneNumber: phone, faxNumber: fax }",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "selectedFieldsAuto": {
                                  "title": "Selected Fields Auto Config",
                                  "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                                  "type": "string",
                                  "enum": [
                                    "all"
                                  ],
                                  "x-enum-varnames": [
                                    "SelectedFieldsAll"
                                  ]
                                },
                                "backfill": {
                                  "title": "Backfill Config",
                                  "type": "object",
                                  "required": [
                                    "defaultPeriod"
                                  ],
                                  "properties": {
                                    "defaultPeriod": {
                                      "title": "Default Period Config",
                                      "type": "object",
                                      "properties": {
                                        "days": {
                                          "type": "integer",
                                          "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                          "minimum": 0,
                                          "example": 30,
                                          "x-oapi-codegen-extra-tags": {
                                            "validate": "required_without=FullHistory,omitempty,min=0"
                                          }
                                        },
                                        "fullHistory": {
                                          "type": "boolean",
                                          "description": "If true, backfill all history. Required if days is not set.",
                                          "example": false,
                                          "x-oapi-codegen-extra-tags": {
                                            "validate": "required_without=Days"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "objectName",
                                "selectedFields",
                                "selectedFieldMappings"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              "write": {
                "title": "Write Config",
                "allOf": [
                  {
                    "title": "Base Write Config",
                    "type": "object",
                    "properties": {
                      "objects": {
                        "type": "object",
                        "description": "This is a map of object names to their configuration.",
                        "additionalProperties": {
                          "title": "Base Write Config Object",
                          "type": "object",
                          "required": [
                            "objectName"
                          ],
                          "properties": {
                            "objectName": {
                              "description": "The name of the object to write to.",
                              "example": "account",
                              "type": "string",
                              "x-oapi-codegen-extra-tags": {
                                "validate": "required"
                              }
                            },
                            "selectedValueDefaults": {
                              "type": "object",
                              "deprecated": true,
                              "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                              "x-go-type-skip-optional-pointer": true,
                              "additionalProperties": {
                                "title": "Value Default (Legacy)",
                                "deprecated": true,
                                "x-go-type": "any",
                                "oneOf": [
                                  {
                                    "title": "Value Default String",
                                    "type": "object",
                                    "required": [
                                      "value"
                                    ],
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The value to be used as a default."
                                      },
                                      "applyOnUpdate": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ],
                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                      }
                                    }
                                  },
                                  {
                                    "title": "Value Default Integer",
                                    "type": "object",
                                    "required": [
                                      "value"
                                    ],
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "description": "The value to be used as a default."
                                      },
                                      "applyOnUpdate": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ],
                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                      }
                                    }
                                  },
                                  {
                                    "title": "Value Default Boolean",
                                    "type": "object",
                                    "required": [
                                      "value"
                                    ],
                                    "properties": {
                                      "value": {
                                        "type": "boolean",
                                        "description": "The value to be used as a default."
                                      },
                                      "applyOnUpdate": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ],
                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "selectedFieldSettings": {
                              "type": "object",
                              "description": "This is a map of field names to their settings.",
                              "x-go-type-skip-optional-pointer": true,
                              "additionalProperties": {
                                "title": "Field setting",
                                "type": "object",
                                "properties": {
                                  "default": {
                                    "title": "Default value for a field",
                                    "description": "Only use one of stringValue, integerValue, booleanValue.",
                                    "type": "object",
                                    "properties": {
                                      "stringValue": {
                                        "type": "string",
                                        "description": "The default string value to apply to a field"
                                      },
                                      "integerValue": {
                                        "type": "integer",
                                        "description": "The default integer value to apply to a field"
                                      },
                                      "booleanValue": {
                                        "type": "boolean",
                                        "description": "The default boolean value to apply to a field"
                                      }
                                    }
                                  },
                                  "writeOnCreate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "default": "always",
                                    "x-go-type-skip-optional-pointer": true,
                                    "description": "Whether the default value should be applied when creating a record."
                                  },
                                  "writeOnUpdate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "default": "always",
                                    "x-go-type-skip-optional-pointer": true,
                                    "description": "Whether the default value should be applied when updating a record."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "objects": {
                        "additionalProperties": {
                          "title": "Write Config Object",
                          "allOf": [
                            {
                              "title": "Base Write Config Object",
                              "type": "object",
                              "required": [
                                "objectName"
                              ],
                              "properties": {
                                "objectName": {
                                  "description": "The name of the object to write to.",
                                  "example": "account",
                                  "type": "string",
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required"
                                  }
                                },
                                "selectedValueDefaults": {
                                  "type": "object",
                                  "deprecated": true,
                                  "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                                  "x-go-type-skip-optional-pointer": true,
                                  "additionalProperties": {
                                    "title": "Value Default (Legacy)",
                                    "deprecated": true,
                                    "x-go-type": "any",
                                    "oneOf": [
                                      {
                                        "title": "Value Default String",
                                        "type": "object",
                                        "required": [
                                          "value"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "string",
                                            "description": "The value to be used as a default."
                                          },
                                          "applyOnUpdate": {
                                            "type": "string",
                                            "enum": [
                                              "always",
                                              "never"
                                            ],
                                            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                          }
                                        }
                                      },
                                      {
                                        "title": "Value Default Integer",
                                        "type": "object",
                                        "required": [
                                          "value"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The value to be used as a default."
                                          },
                                          "applyOnUpdate": {
                                            "type": "string",
                                            "enum": [
                                              "always",
                                              "never"
                                            ],
                                            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                          }
                                        }
                                      },
                                      {
                                        "title": "Value Default Boolean",
                                        "type": "object",
                                        "required": [
                                          "value"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "boolean",
                                            "description": "The value to be used as a default."
                                          },
                                          "applyOnUpdate": {
                                            "type": "string",
                                            "enum": [
                                              "always",
                                              "never"
                                            ],
                                            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "selectedFieldSettings": {
                                  "type": "object",
                                  "description": "This is a map of field names to their settings.",
                                  "x-go-type-skip-optional-pointer": true,
                                  "additionalProperties": {
                                    "title": "Field setting",
                                    "type": "object",
                                    "properties": {
                                      "default": {
                                        "title": "Default value for a field",
                                        "description": "Only use one of stringValue, integerValue, booleanValue.",
                                        "type": "object",
                                        "properties": {
                                          "stringValue": {
                                            "type": "string",
                                            "description": "The default string value to apply to a field"
                                          },
                                          "integerValue": {
                                            "type": "integer",
                                            "description": "The default integer value to apply to a field"
                                          },
                                          "booleanValue": {
                                            "type": "boolean",
                                            "description": "The default boolean value to apply to a field"
                                          }
                                        }
                                      },
                                      "writeOnCreate": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ],
                                        "default": "always",
                                        "x-go-type-skip-optional-pointer": true,
                                        "description": "Whether the default value should be applied when creating a record."
                                      },
                                      "writeOnUpdate": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ],
                                        "default": "always",
                                        "x-go-type-skip-optional-pointer": true,
                                        "description": "Whether the default value should be applied when updating a record."
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "objectName"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              },
              "subscribe": {
                "title": "Subscribe Config",
                "allOf": [
                  {
                    "title": "Base Subscribe Config",
                    "type": "object",
                    "properties": {
                      "objects": {
                        "type": "object",
                        "additionalProperties": {
                          "title": "Base Subscribe Config Object",
                          "type": "object",
                          "required": [
                            "objectName",
                            "destination",
                            "inheritFieldsAndMappings"
                          ],
                          "properties": {
                            "inheritFieldsAndMappings": {
                              "type": "boolean",
                              "description": "Whether to inherit fields and mappings from the read config.",
                              "example": true
                            },
                            "objectName": {
                              "description": "The name of the object to subscribe to.",
                              "example": "account",
                              "type": "string",
                              "x-oapi-codegen-extra-tags": {
                                "validate": "required"
                              }
                            },
                            "destination": {
                              "description": "The name of the destination that the result should be sent to.",
                              "example": "accountWebhook",
                              "type": "string"
                            },
                            "createEvent": {
                              "title": "Create Event",
                              "type": "object",
                              "required": [
                                "enabled"
                              ],
                              "properties": {
                                "enabled": {
                                  "type": "string",
                                  "description": "Conditions to enable create events.",
                                  "enum": [
                                    "always",
                                    "never"
                                  ],
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "oneof=always never"
                                  }
                                }
                              }
                            },
                            "updateEvent": {
                              "title": "Update Event",
                              "type": "object",
                              "required": [
                                "enabled"
                              ],
                              "properties": {
                                "enabled": {
                                  "type": "string",
                                  "description": "Conditions to enable update events.",
                                  "example": "always",
                                  "enum": [
                                    "always",
                                    "never"
                                  ],
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "oneof=always never"
                                  }
                                },
                                "watchFieldsAuto": {
                                  "type": "string",
                                  "description": "Whether to watch fields all fields automatically.",
                                  "example": "all",
                                  "enum": [
                                    "all"
                                  ]
                                },
                                "requiredWatchFields": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "The fields that should be watched.",
                                  "example": [
                                    "name",
                                    "description"
                                  ]
                                }
                              }
                            },
                            "deleteEvent": {
                              "title": "Delete Event",
                              "type": "object",
                              "required": [
                                "enabled"
                              ],
                              "properties": {
                                "enabled": {
                                  "type": "string",
                                  "description": "Conditions to enable delete events.",
                                  "example": "always",
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "oneof=always never"
                                  },
                                  "enum": [
                                    "always",
                                    "never"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "objects"
                    ],
                    "properties": {
                      "objects": {
                        "additionalProperties": {
                          "title": "Subscribe Config Object",
                          "allOf": [
                            {
                              "title": "Base Subscribe Config Object",
                              "type": "object",
                              "required": [
                                "objectName",
                                "destination",
                                "inheritFieldsAndMappings"
                              ],
                              "properties": {
                                "inheritFieldsAndMappings": {
                                  "type": "boolean",
                                  "description": "Whether to inherit fields and mappings from the read config.",
                                  "example": true
                                },
                                "objectName": {
                                  "description": "The name of the object to subscribe to.",
                                  "example": "account",
                                  "type": "string",
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required"
                                  }
                                },
                                "destination": {
                                  "description": "The name of the destination that the result should be sent to.",
                                  "example": "accountWebhook",
                                  "type": "string"
                                },
                                "createEvent": {
                                  "title": "Create Event",
                                  "type": "object",
                                  "required": [
                                    "enabled"
                                  ],
                                  "properties": {
                                    "enabled": {
                                      "type": "string",
                                      "description": "Conditions to enable create events.",
                                      "enum": [
                                        "always",
                                        "never"
                                      ],
                                      "x-oapi-codegen-extra-tags": {
                                        "validate": "oneof=always never"
                                      }
                                    }
                                  }
                                },
                                "updateEvent": {
                                  "title": "Update Event",
                                  "type": "object",
                                  "required": [
                                    "enabled"
                                  ],
                                  "properties": {
                                    "enabled": {
                                      "type": "string",
                                      "description": "Conditions to enable update events.",
                                      "example": "always",
                                      "enum": [
                                        "always",
                                        "never"
                                      ],
                                      "x-oapi-codegen-extra-tags": {
                                        "validate": "oneof=always never"
                                      }
                                    },
                                    "watchFieldsAuto": {
                                      "type": "string",
                                      "description": "Whether to watch fields all fields automatically.",
                                      "example": "all",
                                      "enum": [
                                        "all"
                                      ]
                                    },
                                    "requiredWatchFields": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "description": "The fields that should be watched.",
                                      "example": [
                                        "name",
                                        "description"
                                      ]
                                    }
                                  }
                                },
                                "deleteEvent": {
                                  "title": "Delete Event",
                                  "type": "object",
                                  "required": [
                                    "enabled"
                                  ],
                                  "properties": {
                                    "enabled": {
                                      "type": "string",
                                      "description": "Conditions to enable delete events.",
                                      "example": "always",
                                      "x-oapi-codegen-extra-tags": {
                                        "validate": "oneof=always never"
                                      },
                                      "enum": [
                                        "always",
                                        "never"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "objectName",
                                "destination",
                                "inheritFieldsAndMappings"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      },
      "ReadConfig": {
        "title": "Read Config",
        "allOf": [
          {
            "title": "Base Read Config",
            "type": "object",
            "properties": {
              "objects": {
                "type": "object",
                "description": "This is a map of object names to their configuration.",
                "additionalProperties": {
                  "title": "Base Read Config Object",
                  "type": "object",
                  "properties": {
                    "objectName": {
                      "description": "The name of the object to read from.",
                      "example": "account",
                      "type": "string",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      }
                    },
                    "schedule": {
                      "type": "string",
                      "description": "The schedule for reading the object, in cron syntax.",
                      "example": "*/15 * * * *",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "destination": {
                      "description": "The name of the destination that the result should be sent to.",
                      "example": "accountWebhook",
                      "type": "string",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "selectedFields": {
                      "type": "object",
                      "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                      "example": "{ phone: true, fax: true }",
                      "additionalProperties": {
                        "type": "boolean"
                      }
                    },
                    "selectedValueMappings": {
                      "type": "object",
                      "description": "This is a map of field names to their value mappings.",
                      "example": {
                        "stage": {
                          "open": "scheduled",
                          "closedWon": "won",
                          "closedLost": "lost"
                        }
                      },
                      "x-go-type-skip-optional-pointer": true,
                      "additionalProperties": {
                        "title": "Selected Value Mappings",
                        "type": "object",
                        "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                        "example": {
                          "open": "scheduled",
                          "closedWon": "won",
                          "closedLost": "lost"
                        },
                        "x-go-type-skip-optional-pointer": true,
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "dynamicMappingsInput": {
                      "title": "Dynamic Mappings Input",
                      "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
                      "type": "array",
                      "items": {
                        "title": "Field Mapping Entry",
                        "type": "object",
                        "required": [
                          "mapToName"
                        ],
                        "properties": {
                          "mapToName": {
                            "type": "string",
                            "description": "The name of the field in your application."
                          },
                          "mapToDisplayName": {
                            "type": "string",
                            "description": "Optional display name of the field to show the user in the mapping UI."
                          },
                          "prompt": {
                            "type": "string",
                            "description": "Optional prompt to show the user in the mapping UI."
                          },
                          "mappedValues": {
                            "type": "array",
                            "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                            "items": {
                              "title": "Mapped Value",
                              "type": "object",
                              "required": [
                                "mappedValue",
                                "mappedDisplayValue"
                              ],
                              "properties": {
                                "mappedValue": {
                                  "type": "string"
                                },
                                "mappedDisplayValue": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                          }
                        }
                      }
                    },
                    "selectedFieldMappings": {
                      "type": "object",
                      "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                      "example": "{ phoneNumber: phone, faxNumber: fax }",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "selectedFieldsAuto": {
                      "title": "Selected Fields Auto Config",
                      "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                      "type": "string",
                      "enum": [
                        "all"
                      ],
                      "x-enum-varnames": [
                        "SelectedFieldsAll"
                      ]
                    },
                    "backfill": {
                      "title": "Backfill Config",
                      "type": "object",
                      "required": [
                        "defaultPeriod"
                      ],
                      "properties": {
                        "defaultPeriod": {
                          "title": "Default Period Config",
                          "type": "object",
                          "properties": {
                            "days": {
                              "type": "integer",
                              "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                              "minimum": 0,
                              "example": 30,
                              "x-oapi-codegen-extra-tags": {
                                "validate": "required_without=FullHistory,omitempty,min=0"
                              }
                            },
                            "fullHistory": {
                              "type": "boolean",
                              "description": "If true, backfill all history. Required if days is not set.",
                              "example": false,
                              "x-oapi-codegen-extra-tags": {
                                "validate": "required_without=Days"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "objects"
            ],
            "properties": {
              "objects": {
                "additionalProperties": {
                  "title": "Read Config Object",
                  "allOf": [
                    {
                      "title": "Base Read Config Object",
                      "type": "object",
                      "properties": {
                        "objectName": {
                          "description": "The name of the object to read from.",
                          "example": "account",
                          "type": "string",
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required"
                          }
                        },
                        "schedule": {
                          "type": "string",
                          "description": "The schedule for reading the object, in cron syntax.",
                          "example": "*/15 * * * *",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "destination": {
                          "description": "The name of the destination that the result should be sent to.",
                          "example": "accountWebhook",
                          "type": "string",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "selectedFields": {
                          "type": "object",
                          "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                          "example": "{ phone: true, fax: true }",
                          "additionalProperties": {
                            "type": "boolean"
                          }
                        },
                        "selectedValueMappings": {
                          "type": "object",
                          "description": "This is a map of field names to their value mappings.",
                          "example": {
                            "stage": {
                              "open": "scheduled",
                              "closedWon": "won",
                              "closedLost": "lost"
                            }
                          },
                          "x-go-type-skip-optional-pointer": true,
                          "additionalProperties": {
                            "title": "Selected Value Mappings",
                            "type": "object",
                            "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                            "example": {
                              "open": "scheduled",
                              "closedWon": "won",
                              "closedLost": "lost"
                            },
                            "x-go-type-skip-optional-pointer": true,
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "dynamicMappingsInput": {
                          "title": "Dynamic Mappings Input",
                          "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
                          "type": "array",
                          "items": {
                            "title": "Field Mapping Entry",
                            "type": "object",
                            "required": [
                              "mapToName"
                            ],
                            "properties": {
                              "mapToName": {
                                "type": "string",
                                "description": "The name of the field in your application."
                              },
                              "mapToDisplayName": {
                                "type": "string",
                                "description": "Optional display name of the field to show the user in the mapping UI."
                              },
                              "prompt": {
                                "type": "string",
                                "description": "Optional prompt to show the user in the mapping UI."
                              },
                              "mappedValues": {
                                "type": "array",
                                "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                                "items": {
                                  "title": "Mapped Value",
                                  "type": "object",
                                  "required": [
                                    "mappedValue",
                                    "mappedDisplayValue"
                                  ],
                                  "properties": {
                                    "mappedValue": {
                                      "type": "string"
                                    },
                                    "mappedDisplayValue": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "fieldName": {
                                "type": "string",
                                "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                              }
                            }
                          }
                        },
                        "selectedFieldMappings": {
                          "type": "object",
                          "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                          "example": "{ phoneNumber: phone, faxNumber: fax }",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "selectedFieldsAuto": {
                          "title": "Selected Fields Auto Config",
                          "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                          "type": "string",
                          "enum": [
                            "all"
                          ],
                          "x-enum-varnames": [
                            "SelectedFieldsAll"
                          ]
                        },
                        "backfill": {
                          "title": "Backfill Config",
                          "type": "object",
                          "required": [
                            "defaultPeriod"
                          ],
                          "properties": {
                            "defaultPeriod": {
                              "title": "Default Period Config",
                              "type": "object",
                              "properties": {
                                "days": {
                                  "type": "integer",
                                  "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                  "minimum": 0,
                                  "example": 30,
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required_without=FullHistory,omitempty,min=0"
                                  }
                                },
                                "fullHistory": {
                                  "type": "boolean",
                                  "description": "If true, backfill all history. Required if days is not set.",
                                  "example": false,
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required_without=Days"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "objectName",
                        "selectedFields",
                        "selectedFieldMappings"
                      ]
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "ReadConfigObject": {
        "title": "Read Config Object",
        "allOf": [
          {
            "title": "Base Read Config Object",
            "type": "object",
            "properties": {
              "objectName": {
                "description": "The name of the object to read from.",
                "example": "account",
                "type": "string",
                "x-oapi-codegen-extra-tags": {
                  "validate": "required"
                }
              },
              "schedule": {
                "type": "string",
                "description": "The schedule for reading the object, in cron syntax.",
                "example": "*/15 * * * *",
                "x-go-type-skip-optional-pointer": true
              },
              "destination": {
                "description": "The name of the destination that the result should be sent to.",
                "example": "accountWebhook",
                "type": "string",
                "x-go-type-skip-optional-pointer": true
              },
              "selectedFields": {
                "type": "object",
                "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                "example": "{ phone: true, fax: true }",
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "selectedValueMappings": {
                "type": "object",
                "description": "This is a map of field names to their value mappings.",
                "example": {
                  "stage": {
                    "open": "scheduled",
                    "closedWon": "won",
                    "closedLost": "lost"
                  }
                },
                "x-go-type-skip-optional-pointer": true,
                "additionalProperties": {
                  "title": "Selected Value Mappings",
                  "type": "object",
                  "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                  "example": {
                    "open": "scheduled",
                    "closedWon": "won",
                    "closedLost": "lost"
                  },
                  "x-go-type-skip-optional-pointer": true,
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "dynamicMappingsInput": {
                "title": "Dynamic Mappings Input",
                "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
                "type": "array",
                "items": {
                  "title": "Field Mapping Entry",
                  "type": "object",
                  "required": [
                    "mapToName"
                  ],
                  "properties": {
                    "mapToName": {
                      "type": "string",
                      "description": "The name of the field in your application."
                    },
                    "mapToDisplayName": {
                      "type": "string",
                      "description": "Optional display name of the field to show the user in the mapping UI."
                    },
                    "prompt": {
                      "type": "string",
                      "description": "Optional prompt to show the user in the mapping UI."
                    },
                    "mappedValues": {
                      "type": "array",
                      "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                      "items": {
                        "title": "Mapped Value",
                        "type": "object",
                        "required": [
                          "mappedValue",
                          "mappedDisplayValue"
                        ],
                        "properties": {
                          "mappedValue": {
                            "type": "string"
                          },
                          "mappedDisplayValue": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "fieldName": {
                      "type": "string",
                      "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                    }
                  }
                }
              },
              "selectedFieldMappings": {
                "type": "object",
                "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                "example": "{ phoneNumber: phone, faxNumber: fax }",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "selectedFieldsAuto": {
                "title": "Selected Fields Auto Config",
                "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                "type": "string",
                "enum": [
                  "all"
                ],
                "x-enum-varnames": [
                  "SelectedFieldsAll"
                ]
              },
              "backfill": {
                "title": "Backfill Config",
                "type": "object",
                "required": [
                  "defaultPeriod"
                ],
                "properties": {
                  "defaultPeriod": {
                    "title": "Default Period Config",
                    "type": "object",
                    "properties": {
                      "days": {
                        "type": "integer",
                        "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                        "minimum": 0,
                        "example": 30,
                        "x-oapi-codegen-extra-tags": {
                          "validate": "required_without=FullHistory,omitempty,min=0"
                        }
                      },
                      "fullHistory": {
                        "type": "boolean",
                        "description": "If true, backfill all history. Required if days is not set.",
                        "example": false,
                        "x-oapi-codegen-extra-tags": {
                          "validate": "required_without=Days"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "objectName",
              "selectedFields",
              "selectedFieldMappings"
            ]
          }
        ]
      },
      "WriteConfig": {
        "title": "Write Config",
        "allOf": [
          {
            "title": "Base Write Config",
            "type": "object",
            "properties": {
              "objects": {
                "type": "object",
                "description": "This is a map of object names to their configuration.",
                "additionalProperties": {
                  "title": "Base Write Config Object",
                  "type": "object",
                  "required": [
                    "objectName"
                  ],
                  "properties": {
                    "objectName": {
                      "description": "The name of the object to write to.",
                      "example": "account",
                      "type": "string",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      }
                    },
                    "selectedValueDefaults": {
                      "type": "object",
                      "deprecated": true,
                      "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                      "x-go-type-skip-optional-pointer": true,
                      "additionalProperties": {
                        "title": "Value Default (Legacy)",
                        "deprecated": true,
                        "x-go-type": "any",
                        "oneOf": [
                          {
                            "title": "Value Default String",
                            "type": "object",
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "type": "string",
                                "description": "The value to be used as a default."
                              },
                              "applyOnUpdate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                              }
                            }
                          },
                          {
                            "title": "Value Default Integer",
                            "type": "object",
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "type": "integer",
                                "description": "The value to be used as a default."
                              },
                              "applyOnUpdate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                              }
                            }
                          },
                          {
                            "title": "Value Default Boolean",
                            "type": "object",
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "type": "boolean",
                                "description": "The value to be used as a default."
                              },
                              "applyOnUpdate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "selectedFieldSettings": {
                      "type": "object",
                      "description": "This is a map of field names to their settings.",
                      "x-go-type-skip-optional-pointer": true,
                      "additionalProperties": {
                        "title": "Field setting",
                        "type": "object",
                        "properties": {
                          "default": {
                            "title": "Default value for a field",
                            "description": "Only use one of stringValue, integerValue, booleanValue.",
                            "type": "object",
                            "properties": {
                              "stringValue": {
                                "type": "string",
                                "description": "The default string value to apply to a field"
                              },
                              "integerValue": {
                                "type": "integer",
                                "description": "The default integer value to apply to a field"
                              },
                              "booleanValue": {
                                "type": "boolean",
                                "description": "The default boolean value to apply to a field"
                              }
                            }
                          },
                          "writeOnCreate": {
                            "type": "string",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "default": "always",
                            "x-go-type-skip-optional-pointer": true,
                            "description": "Whether the default value should be applied when creating a record."
                          },
                          "writeOnUpdate": {
                            "type": "string",
                            "enum": [
                              "always",
                              "never"
                            ],
                            "default": "always",
                            "x-go-type-skip-optional-pointer": true,
                            "description": "Whether the default value should be applied when updating a record."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "objects": {
                "additionalProperties": {
                  "title": "Write Config Object",
                  "allOf": [
                    {
                      "title": "Base Write Config Object",
                      "type": "object",
                      "required": [
                        "objectName"
                      ],
                      "properties": {
                        "objectName": {
                          "description": "The name of the object to write to.",
                          "example": "account",
                          "type": "string",
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required"
                          }
                        },
                        "selectedValueDefaults": {
                          "type": "object",
                          "deprecated": true,
                          "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                          "x-go-type-skip-optional-pointer": true,
                          "additionalProperties": {
                            "title": "Value Default (Legacy)",
                            "deprecated": true,
                            "x-go-type": "any",
                            "oneOf": [
                              {
                                "title": "Value Default String",
                                "type": "object",
                                "required": [
                                  "value"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "description": "The value to be used as a default."
                                  },
                                  "applyOnUpdate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                  }
                                }
                              },
                              {
                                "title": "Value Default Integer",
                                "type": "object",
                                "required": [
                                  "value"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "integer",
                                    "description": "The value to be used as a default."
                                  },
                                  "applyOnUpdate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                  }
                                }
                              },
                              {
                                "title": "Value Default Boolean",
                                "type": "object",
                                "required": [
                                  "value"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "boolean",
                                    "description": "The value to be used as a default."
                                  },
                                  "applyOnUpdate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "selectedFieldSettings": {
                          "type": "object",
                          "description": "This is a map of field names to their settings.",
                          "x-go-type-skip-optional-pointer": true,
                          "additionalProperties": {
                            "title": "Field setting",
                            "type": "object",
                            "properties": {
                              "default": {
                                "title": "Default value for a field",
                                "description": "Only use one of stringValue, integerValue, booleanValue.",
                                "type": "object",
                                "properties": {
                                  "stringValue": {
                                    "type": "string",
                                    "description": "The default string value to apply to a field"
                                  },
                                  "integerValue": {
                                    "type": "integer",
                                    "description": "The default integer value to apply to a field"
                                  },
                                  "booleanValue": {
                                    "type": "boolean",
                                    "description": "The default boolean value to apply to a field"
                                  }
                                }
                              },
                              "writeOnCreate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "default": "always",
                                "x-go-type-skip-optional-pointer": true,
                                "description": "Whether the default value should be applied when creating a record."
                              },
                              "writeOnUpdate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "default": "always",
                                "x-go-type-skip-optional-pointer": true,
                                "description": "Whether the default value should be applied when updating a record."
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "objectName"
                      ]
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "WriteConfigObject": {
        "title": "Write Config Object",
        "allOf": [
          {
            "title": "Base Write Config Object",
            "type": "object",
            "required": [
              "objectName"
            ],
            "properties": {
              "objectName": {
                "description": "The name of the object to write to.",
                "example": "account",
                "type": "string",
                "x-oapi-codegen-extra-tags": {
                  "validate": "required"
                }
              },
              "selectedValueDefaults": {
                "type": "object",
                "deprecated": true,
                "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                "x-go-type-skip-optional-pointer": true,
                "additionalProperties": {
                  "title": "Value Default (Legacy)",
                  "deprecated": true,
                  "x-go-type": "any",
                  "oneOf": [
                    {
                      "title": "Value Default String",
                      "type": "object",
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "type": "string",
                          "description": "The value to be used as a default."
                        },
                        "applyOnUpdate": {
                          "type": "string",
                          "enum": [
                            "always",
                            "never"
                          ],
                          "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                        }
                      }
                    },
                    {
                      "title": "Value Default Integer",
                      "type": "object",
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "type": "integer",
                          "description": "The value to be used as a default."
                        },
                        "applyOnUpdate": {
                          "type": "string",
                          "enum": [
                            "always",
                            "never"
                          ],
                          "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                        }
                      }
                    },
                    {
                      "title": "Value Default Boolean",
                      "type": "object",
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "type": "boolean",
                          "description": "The value to be used as a default."
                        },
                        "applyOnUpdate": {
                          "type": "string",
                          "enum": [
                            "always",
                            "never"
                          ],
                          "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                        }
                      }
                    }
                  ]
                }
              },
              "selectedFieldSettings": {
                "type": "object",
                "description": "This is a map of field names to their settings.",
                "x-go-type-skip-optional-pointer": true,
                "additionalProperties": {
                  "title": "Field setting",
                  "type": "object",
                  "properties": {
                    "default": {
                      "title": "Default value for a field",
                      "description": "Only use one of stringValue, integerValue, booleanValue.",
                      "type": "object",
                      "properties": {
                        "stringValue": {
                          "type": "string",
                          "description": "The default string value to apply to a field"
                        },
                        "integerValue": {
                          "type": "integer",
                          "description": "The default integer value to apply to a field"
                        },
                        "booleanValue": {
                          "type": "boolean",
                          "description": "The default boolean value to apply to a field"
                        }
                      }
                    },
                    "writeOnCreate": {
                      "type": "string",
                      "enum": [
                        "always",
                        "never"
                      ],
                      "default": "always",
                      "x-go-type-skip-optional-pointer": true,
                      "description": "Whether the default value should be applied when creating a record."
                    },
                    "writeOnUpdate": {
                      "type": "string",
                      "enum": [
                        "always",
                        "never"
                      ],
                      "default": "always",
                      "x-go-type-skip-optional-pointer": true,
                      "description": "Whether the default value should be applied when updating a record."
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "objectName"
            ]
          }
        ]
      },
      "SubscribeConfig": {
        "title": "Subscribe Config",
        "allOf": [
          {
            "title": "Base Subscribe Config",
            "type": "object",
            "properties": {
              "objects": {
                "type": "object",
                "additionalProperties": {
                  "title": "Base Subscribe Config Object",
                  "type": "object",
                  "required": [
                    "objectName",
                    "destination",
                    "inheritFieldsAndMappings"
                  ],
                  "properties": {
                    "inheritFieldsAndMappings": {
                      "type": "boolean",
                      "description": "Whether to inherit fields and mappings from the read config.",
                      "example": true
                    },
                    "objectName": {
                      "description": "The name of the object to subscribe to.",
                      "example": "account",
                      "type": "string",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      }
                    },
                    "destination": {
                      "description": "The name of the destination that the result should be sent to.",
                      "example": "accountWebhook",
                      "type": "string"
                    },
                    "createEvent": {
                      "title": "Create Event",
                      "type": "object",
                      "required": [
                        "enabled"
                      ],
                      "properties": {
                        "enabled": {
                          "type": "string",
                          "description": "Conditions to enable create events.",
                          "enum": [
                            "always",
                            "never"
                          ],
                          "x-oapi-codegen-extra-tags": {
                            "validate": "oneof=always never"
                          }
                        }
                      }
                    },
                    "updateEvent": {
                      "title": "Update Event",
                      "type": "object",
                      "required": [
                        "enabled"
                      ],
                      "properties": {
                        "enabled": {
                          "type": "string",
                          "description": "Conditions to enable update events.",
                          "example": "always",
                          "enum": [
                            "always",
                            "never"
                          ],
                          "x-oapi-codegen-extra-tags": {
                            "validate": "oneof=always never"
                          }
                        },
                        "watchFieldsAuto": {
                          "type": "string",
                          "description": "Whether to watch fields all fields automatically.",
                          "example": "all",
                          "enum": [
                            "all"
                          ]
                        },
                        "requiredWatchFields": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The fields that should be watched.",
                          "example": [
                            "name",
                            "description"
                          ]
                        }
                      }
                    },
                    "deleteEvent": {
                      "title": "Delete Event",
                      "type": "object",
                      "required": [
                        "enabled"
                      ],
                      "properties": {
                        "enabled": {
                          "type": "string",
                          "description": "Conditions to enable delete events.",
                          "example": "always",
                          "x-oapi-codegen-extra-tags": {
                            "validate": "oneof=always never"
                          },
                          "enum": [
                            "always",
                            "never"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "objects"
            ],
            "properties": {
              "objects": {
                "additionalProperties": {
                  "title": "Subscribe Config Object",
                  "allOf": [
                    {
                      "title": "Base Subscribe Config Object",
                      "type": "object",
                      "required": [
                        "objectName",
                        "destination",
                        "inheritFieldsAndMappings"
                      ],
                      "properties": {
                        "inheritFieldsAndMappings": {
                          "type": "boolean",
                          "description": "Whether to inherit fields and mappings from the read config.",
                          "example": true
                        },
                        "objectName": {
                          "description": "The name of the object to subscribe to.",
                          "example": "account",
                          "type": "string",
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required"
                          }
                        },
                        "destination": {
                          "description": "The name of the destination that the result should be sent to.",
                          "example": "accountWebhook",
                          "type": "string"
                        },
                        "createEvent": {
                          "title": "Create Event",
                          "type": "object",
                          "required": [
                            "enabled"
                          ],
                          "properties": {
                            "enabled": {
                              "type": "string",
                              "description": "Conditions to enable create events.",
                              "enum": [
                                "always",
                                "never"
                              ],
                              "x-oapi-codegen-extra-tags": {
                                "validate": "oneof=always never"
                              }
                            }
                          }
                        },
                        "updateEvent": {
                          "title": "Update Event",
                          "type": "object",
                          "required": [
                            "enabled"
                          ],
                          "properties": {
                            "enabled": {
                              "type": "string",
                              "description": "Conditions to enable update events.",
                              "example": "always",
                              "enum": [
                                "always",
                                "never"
                              ],
                              "x-oapi-codegen-extra-tags": {
                                "validate": "oneof=always never"
                              }
                            },
                            "watchFieldsAuto": {
                              "type": "string",
                              "description": "Whether to watch fields all fields automatically.",
                              "example": "all",
                              "enum": [
                                "all"
                              ]
                            },
                            "requiredWatchFields": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "The fields that should be watched.",
                              "example": [
                                "name",
                                "description"
                              ]
                            }
                          }
                        },
                        "deleteEvent": {
                          "title": "Delete Event",
                          "type": "object",
                          "required": [
                            "enabled"
                          ],
                          "properties": {
                            "enabled": {
                              "type": "string",
                              "description": "Conditions to enable delete events.",
                              "example": "always",
                              "x-oapi-codegen-extra-tags": {
                                "validate": "oneof=always never"
                              },
                              "enum": [
                                "always",
                                "never"
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "objectName",
                        "destination",
                        "inheritFieldsAndMappings"
                      ]
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "SubscribeConfigObject": {
        "title": "Subscribe Config Object",
        "allOf": [
          {
            "title": "Base Subscribe Config Object",
            "type": "object",
            "required": [
              "objectName",
              "destination",
              "inheritFieldsAndMappings"
            ],
            "properties": {
              "inheritFieldsAndMappings": {
                "type": "boolean",
                "description": "Whether to inherit fields and mappings from the read config.",
                "example": true
              },
              "objectName": {
                "description": "The name of the object to subscribe to.",
                "example": "account",
                "type": "string",
                "x-oapi-codegen-extra-tags": {
                  "validate": "required"
                }
              },
              "destination": {
                "description": "The name of the destination that the result should be sent to.",
                "example": "accountWebhook",
                "type": "string"
              },
              "createEvent": {
                "title": "Create Event",
                "type": "object",
                "required": [
                  "enabled"
                ],
                "properties": {
                  "enabled": {
                    "type": "string",
                    "description": "Conditions to enable create events.",
                    "enum": [
                      "always",
                      "never"
                    ],
                    "x-oapi-codegen-extra-tags": {
                      "validate": "oneof=always never"
                    }
                  }
                }
              },
              "updateEvent": {
                "title": "Update Event",
                "type": "object",
                "required": [
                  "enabled"
                ],
                "properties": {
                  "enabled": {
                    "type": "string",
                    "description": "Conditions to enable update events.",
                    "example": "always",
                    "enum": [
                      "always",
                      "never"
                    ],
                    "x-oapi-codegen-extra-tags": {
                      "validate": "oneof=always never"
                    }
                  },
                  "watchFieldsAuto": {
                    "type": "string",
                    "description": "Whether to watch fields all fields automatically.",
                    "example": "all",
                    "enum": [
                      "all"
                    ]
                  },
                  "requiredWatchFields": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The fields that should be watched.",
                    "example": [
                      "name",
                      "description"
                    ]
                  }
                }
              },
              "deleteEvent": {
                "title": "Delete Event",
                "type": "object",
                "required": [
                  "enabled"
                ],
                "properties": {
                  "enabled": {
                    "type": "string",
                    "description": "Conditions to enable delete events.",
                    "example": "always",
                    "x-oapi-codegen-extra-tags": {
                      "validate": "oneof=always never"
                    },
                    "enum": [
                      "always",
                      "never"
                    ]
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "objectName",
              "destination",
              "inheritFieldsAndMappings"
            ]
          }
        ]
      },
      "UpdateInstallationConfigContent": {
        "title": "Update Installation Config Content",
        "allOf": [
          {
            "title": "Base Config Content",
            "type": "object",
            "properties": {
              "provider": {
                "description": "The SaaS API that we are integrating with.",
                "example": "hubspot",
                "type": "string"
              },
              "module": {
                "description": "The SaaS module that we are integrating with.",
                "example": "crm",
                "type": "string",
                "x-go-type-skip-optional-pointer": true
              },
              "read": {
                "title": "Base Read Config",
                "type": "object",
                "properties": {
                  "objects": {
                    "type": "object",
                    "description": "This is a map of object names to their configuration.",
                    "additionalProperties": {
                      "title": "Base Read Config Object",
                      "type": "object",
                      "properties": {
                        "objectName": {
                          "description": "The name of the object to read from.",
                          "example": "account",
                          "type": "string",
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required"
                          }
                        },
                        "schedule": {
                          "type": "string",
                          "description": "The schedule for reading the object, in cron syntax.",
                          "example": "*/15 * * * *",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "destination": {
                          "description": "The name of the destination that the result should be sent to.",
                          "example": "accountWebhook",
                          "type": "string",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "selectedFields": {
                          "type": "object",
                          "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                          "example": "{ phone: true, fax: true }",
                          "additionalProperties": {
                            "type": "boolean"
                          }
                        },
                        "selectedValueMappings": {
                          "type": "object",
                          "description": "This is a map of field names to their value mappings.",
                          "example": {
                            "stage": {
                              "open": "scheduled",
                              "closedWon": "won",
                              "closedLost": "lost"
                            }
                          },
                          "x-go-type-skip-optional-pointer": true,
                          "additionalProperties": {
                            "title": "Selected Value Mappings",
                            "type": "object",
                            "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                            "example": {
                              "open": "scheduled",
                              "closedWon": "won",
                              "closedLost": "lost"
                            },
                            "x-go-type-skip-optional-pointer": true,
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "dynamicMappingsInput": {
                          "title": "Dynamic Mappings Input",
                          "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
                          "type": "array",
                          "items": {
                            "title": "Field Mapping Entry",
                            "type": "object",
                            "required": [
                              "mapToName"
                            ],
                            "properties": {
                              "mapToName": {
                                "type": "string",
                                "description": "The name of the field in your application."
                              },
                              "mapToDisplayName": {
                                "type": "string",
                                "description": "Optional display name of the field to show the user in the mapping UI."
                              },
                              "prompt": {
                                "type": "string",
                                "description": "Optional prompt to show the user in the mapping UI."
                              },
                              "mappedValues": {
                                "type": "array",
                                "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                                "items": {
                                  "title": "Mapped Value",
                                  "type": "object",
                                  "required": [
                                    "mappedValue",
                                    "mappedDisplayValue"
                                  ],
                                  "properties": {
                                    "mappedValue": {
                                      "type": "string"
                                    },
                                    "mappedDisplayValue": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "fieldName": {
                                "type": "string",
                                "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                              }
                            }
                          }
                        },
                        "selectedFieldMappings": {
                          "type": "object",
                          "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                          "example": "{ phoneNumber: phone, faxNumber: fax }",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "selectedFieldsAuto": {
                          "title": "Selected Fields Auto Config",
                          "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                          "type": "string",
                          "enum": [
                            "all"
                          ],
                          "x-enum-varnames": [
                            "SelectedFieldsAll"
                          ]
                        },
                        "backfill": {
                          "title": "Backfill Config",
                          "type": "object",
                          "required": [
                            "defaultPeriod"
                          ],
                          "properties": {
                            "defaultPeriod": {
                              "title": "Default Period Config",
                              "type": "object",
                              "properties": {
                                "days": {
                                  "type": "integer",
                                  "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                  "minimum": 0,
                                  "example": 30,
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required_without=FullHistory,omitempty,min=0"
                                  }
                                },
                                "fullHistory": {
                                  "type": "boolean",
                                  "description": "If true, backfill all history. Required if days is not set.",
                                  "example": false,
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required_without=Days"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "write": {
                "title": "Base Write Config",
                "type": "object",
                "properties": {
                  "objects": {
                    "type": "object",
                    "description": "This is a map of object names to their configuration.",
                    "additionalProperties": {
                      "title": "Base Write Config Object",
                      "type": "object",
                      "required": [
                        "objectName"
                      ],
                      "properties": {
                        "objectName": {
                          "description": "The name of the object to write to.",
                          "example": "account",
                          "type": "string",
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required"
                          }
                        },
                        "selectedValueDefaults": {
                          "type": "object",
                          "deprecated": true,
                          "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                          "x-go-type-skip-optional-pointer": true,
                          "additionalProperties": {
                            "title": "Value Default (Legacy)",
                            "deprecated": true,
                            "x-go-type": "any",
                            "oneOf": [
                              {
                                "title": "Value Default String",
                                "type": "object",
                                "required": [
                                  "value"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "description": "The value to be used as a default."
                                  },
                                  "applyOnUpdate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                  }
                                }
                              },
                              {
                                "title": "Value Default Integer",
                                "type": "object",
                                "required": [
                                  "value"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "integer",
                                    "description": "The value to be used as a default."
                                  },
                                  "applyOnUpdate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                  }
                                }
                              },
                              {
                                "title": "Value Default Boolean",
                                "type": "object",
                                "required": [
                                  "value"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "boolean",
                                    "description": "The value to be used as a default."
                                  },
                                  "applyOnUpdate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "selectedFieldSettings": {
                          "type": "object",
                          "description": "This is a map of field names to their settings.",
                          "x-go-type-skip-optional-pointer": true,
                          "additionalProperties": {
                            "title": "Field setting",
                            "type": "object",
                            "properties": {
                              "default": {
                                "title": "Default value for a field",
                                "description": "Only use one of stringValue, integerValue, booleanValue.",
                                "type": "object",
                                "properties": {
                                  "stringValue": {
                                    "type": "string",
                                    "description": "The default string value to apply to a field"
                                  },
                                  "integerValue": {
                                    "type": "integer",
                                    "description": "The default integer value to apply to a field"
                                  },
                                  "booleanValue": {
                                    "type": "boolean",
                                    "description": "The default boolean value to apply to a field"
                                  }
                                }
                              },
                              "writeOnCreate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "default": "always",
                                "x-go-type-skip-optional-pointer": true,
                                "description": "Whether the default value should be applied when creating a record."
                              },
                              "writeOnUpdate": {
                                "type": "string",
                                "enum": [
                                  "always",
                                  "never"
                                ],
                                "default": "always",
                                "x-go-type-skip-optional-pointer": true,
                                "description": "Whether the default value should be applied when updating a record."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "proxy": {
                "title": "Base Proxy Config",
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "useModule": {
                    "description": "Default is false. If this is set to true, the base URL for the proxy action will be the module's base URL. Otherwise, it is assumed that the base URL is the provider's root base URL.",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        ]
      },
      "UpdateInstallationReadConfig": {
        "title": "Update Installation Read Config",
        "allOf": [
          {
            "title": "Base Read Config",
            "type": "object",
            "properties": {
              "objects": {
                "type": "object",
                "description": "This is a map of object names to their configuration.",
                "additionalProperties": {
                  "title": "Base Read Config Object",
                  "type": "object",
                  "properties": {
                    "objectName": {
                      "description": "The name of the object to read from.",
                      "example": "account",
                      "type": "string",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      }
                    },
                    "schedule": {
                      "type": "string",
                      "description": "The schedule for reading the object, in cron syntax.",
                      "example": "*/15 * * * *",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "destination": {
                      "description": "The name of the destination that the result should be sent to.",
                      "example": "accountWebhook",
                      "type": "string",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "selectedFields": {
                      "type": "object",
                      "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                      "example": "{ phone: true, fax: true }",
                      "additionalProperties": {
                        "type": "boolean"
                      }
                    },
                    "selectedValueMappings": {
                      "type": "object",
                      "description": "This is a map of field names to their value mappings.",
                      "example": {
                        "stage": {
                          "open": "scheduled",
                          "closedWon": "won",
                          "closedLost": "lost"
                        }
                      },
                      "x-go-type-skip-optional-pointer": true,
                      "additionalProperties": {
                        "title": "Selected Value Mappings",
                        "type": "object",
                        "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                        "example": {
                          "open": "scheduled",
                          "closedWon": "won",
                          "closedLost": "lost"
                        },
                        "x-go-type-skip-optional-pointer": true,
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "dynamicMappingsInput": {
                      "title": "Dynamic Mappings Input",
                      "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
                      "type": "array",
                      "items": {
                        "title": "Field Mapping Entry",
                        "type": "object",
                        "required": [
                          "mapToName"
                        ],
                        "properties": {
                          "mapToName": {
                            "type": "string",
                            "description": "The name of the field in your application."
                          },
                          "mapToDisplayName": {
                            "type": "string",
                            "description": "Optional display name of the field to show the user in the mapping UI."
                          },
                          "prompt": {
                            "type": "string",
                            "description": "Optional prompt to show the user in the mapping UI."
                          },
                          "mappedValues": {
                            "type": "array",
                            "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                            "items": {
                              "title": "Mapped Value",
                              "type": "object",
                              "required": [
                                "mappedValue",
                                "mappedDisplayValue"
                              ],
                              "properties": {
                                "mappedValue": {
                                  "type": "string"
                                },
                                "mappedDisplayValue": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "fieldName": {
                            "type": "string",
                            "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                          }
                        }
                      }
                    },
                    "selectedFieldMappings": {
                      "type": "object",
                      "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                      "example": "{ phoneNumber: phone, faxNumber: fax }",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "selectedFieldsAuto": {
                      "title": "Selected Fields Auto Config",
                      "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                      "type": "string",
                      "enum": [
                        "all"
                      ],
                      "x-enum-varnames": [
                        "SelectedFieldsAll"
                      ]
                    },
                    "backfill": {
                      "title": "Backfill Config",
                      "type": "object",
                      "required": [
                        "defaultPeriod"
                      ],
                      "properties": {
                        "defaultPeriod": {
                          "title": "Default Period Config",
                          "type": "object",
                          "properties": {
                            "days": {
                              "type": "integer",
                              "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                              "minimum": 0,
                              "example": 30,
                              "x-oapi-codegen-extra-tags": {
                                "validate": "required_without=FullHistory,omitempty,min=0"
                              }
                            },
                            "fullHistory": {
                              "type": "boolean",
                              "description": "If true, backfill all history. Required if days is not set.",
                              "example": false,
                              "x-oapi-codegen-extra-tags": {
                                "validate": "required_without=Days"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "UpdateInstallationReadConfigObject": {
        "title": "Update Installation Read Config Object",
        "allOf": [
          {
            "title": "Base Read Config Object",
            "type": "object",
            "properties": {
              "objectName": {
                "description": "The name of the object to read from.",
                "example": "account",
                "type": "string",
                "x-oapi-codegen-extra-tags": {
                  "validate": "required"
                }
              },
              "schedule": {
                "type": "string",
                "description": "The schedule for reading the object, in cron syntax.",
                "example": "*/15 * * * *",
                "x-go-type-skip-optional-pointer": true
              },
              "destination": {
                "description": "The name of the destination that the result should be sent to.",
                "example": "accountWebhook",
                "type": "string",
                "x-go-type-skip-optional-pointer": true
              },
              "selectedFields": {
                "type": "object",
                "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                "example": "{ phone: true, fax: true }",
                "additionalProperties": {
                  "type": "boolean"
                }
              },
              "selectedValueMappings": {
                "type": "object",
                "description": "This is a map of field names to their value mappings.",
                "example": {
                  "stage": {
                    "open": "scheduled",
                    "closedWon": "won",
                    "closedLost": "lost"
                  }
                },
                "x-go-type-skip-optional-pointer": true,
                "additionalProperties": {
                  "title": "Selected Value Mappings",
                  "type": "object",
                  "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                  "example": {
                    "open": "scheduled",
                    "closedWon": "won",
                    "closedLost": "lost"
                  },
                  "x-go-type-skip-optional-pointer": true,
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "dynamicMappingsInput": {
                "title": "Dynamic Mappings Input",
                "description": "An array containing all available dynamic field and value mappings for this installation, provided by the InstallIntegration component. This array represents the complete set of possible mappings, regardless of which ones are currently selected. The actual selected mappings are stored separately in the selectedFieldMappings property.",
                "type": "array",
                "items": {
                  "title": "Field Mapping Entry",
                  "type": "object",
                  "required": [
                    "mapToName"
                  ],
                  "properties": {
                    "mapToName": {
                      "type": "string",
                      "description": "The name of the field in your application."
                    },
                    "mapToDisplayName": {
                      "type": "string",
                      "description": "Optional display name of the field to show the user in the mapping UI."
                    },
                    "prompt": {
                      "type": "string",
                      "description": "Optional prompt to show the user in the mapping UI."
                    },
                    "mappedValues": {
                      "type": "array",
                      "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
                      "items": {
                        "title": "Mapped Value",
                        "type": "object",
                        "required": [
                          "mappedValue",
                          "mappedDisplayValue"
                        ],
                        "properties": {
                          "mappedValue": {
                            "type": "string"
                          },
                          "mappedDisplayValue": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "fieldName": {
                      "type": "string",
                      "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
                    }
                  }
                }
              },
              "selectedFieldMappings": {
                "type": "object",
                "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                "example": "{ phoneNumber: phone, faxNumber: fax }",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "selectedFieldsAuto": {
                "title": "Selected Fields Auto Config",
                "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                "type": "string",
                "enum": [
                  "all"
                ],
                "x-enum-varnames": [
                  "SelectedFieldsAll"
                ]
              },
              "backfill": {
                "title": "Backfill Config",
                "type": "object",
                "required": [
                  "defaultPeriod"
                ],
                "properties": {
                  "defaultPeriod": {
                    "title": "Default Period Config",
                    "type": "object",
                    "properties": {
                      "days": {
                        "type": "integer",
                        "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                        "minimum": 0,
                        "example": 30,
                        "x-oapi-codegen-extra-tags": {
                          "validate": "required_without=FullHistory,omitempty,min=0"
                        }
                      },
                      "fullHistory": {
                        "type": "boolean",
                        "description": "If true, backfill all history. Required if days is not set.",
                        "example": false,
                        "x-oapi-codegen-extra-tags": {
                          "validate": "required_without=Days"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "SelectedFieldsAutoConfig": {
        "title": "Selected Fields Auto Config",
        "description": "If selectedFieldsAuto is set to all, all fields will be read.",
        "type": "string",
        "enum": [
          "all"
        ],
        "x-enum-varnames": [
          "SelectedFieldsAll"
        ]
      },
      "BackfillConfig": {
        "title": "Backfill Config",
        "type": "object",
        "required": [
          "defaultPeriod"
        ],
        "properties": {
          "defaultPeriod": {
            "title": "Default Period Config",
            "type": "object",
            "properties": {
              "days": {
                "type": "integer",
                "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                "minimum": 0,
                "example": 30,
                "x-oapi-codegen-extra-tags": {
                  "validate": "required_without=FullHistory,omitempty,min=0"
                }
              },
              "fullHistory": {
                "type": "boolean",
                "description": "If true, backfill all history. Required if days is not set.",
                "example": false,
                "x-oapi-codegen-extra-tags": {
                  "validate": "required_without=Days"
                }
              }
            }
          }
        }
      },
      "DefaultPeriodConfig": {
        "title": "Default Period Config",
        "type": "object",
        "properties": {
          "days": {
            "type": "integer",
            "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
            "minimum": 0,
            "example": 30,
            "x-oapi-codegen-extra-tags": {
              "validate": "required_without=FullHistory,omitempty,min=0"
            }
          },
          "fullHistory": {
            "type": "boolean",
            "description": "If true, backfill all history. Required if days is not set.",
            "example": false,
            "x-oapi-codegen-extra-tags": {
              "validate": "required_without=Days"
            }
          }
        }
      },
      "FieldSetting": {
        "title": "Field setting",
        "type": "object",
        "properties": {
          "default": {
            "title": "Default value for a field",
            "description": "Only use one of stringValue, integerValue, booleanValue.",
            "type": "object",
            "properties": {
              "stringValue": {
                "type": "string",
                "description": "The default string value to apply to a field"
              },
              "integerValue": {
                "type": "integer",
                "description": "The default integer value to apply to a field"
              },
              "booleanValue": {
                "type": "boolean",
                "description": "The default boolean value to apply to a field"
              }
            }
          },
          "writeOnCreate": {
            "type": "string",
            "enum": [
              "always",
              "never"
            ],
            "default": "always",
            "x-go-type-skip-optional-pointer": true,
            "description": "Whether the default value should be applied when creating a record."
          },
          "writeOnUpdate": {
            "type": "string",
            "enum": [
              "always",
              "never"
            ],
            "default": "always",
            "x-go-type-skip-optional-pointer": true,
            "description": "Whether the default value should be applied when updating a record."
          }
        }
      },
      "FieldSettingDefault": {
        "title": "Default value for a field",
        "description": "Only use one of stringValue, integerValue, booleanValue.",
        "type": "object",
        "properties": {
          "stringValue": {
            "type": "string",
            "description": "The default string value to apply to a field"
          },
          "integerValue": {
            "type": "integer",
            "description": "The default integer value to apply to a field"
          },
          "booleanValue": {
            "type": "boolean",
            "description": "The default boolean value to apply to a field"
          }
        }
      },
      "DynamicMappingsInputEntry": {
        "title": "Field Mapping Entry",
        "type": "object",
        "required": [
          "mapToName"
        ],
        "properties": {
          "mapToName": {
            "type": "string",
            "description": "The name of the field in your application."
          },
          "mapToDisplayName": {
            "type": "string",
            "description": "Optional display name of the field to show the user in the mapping UI."
          },
          "prompt": {
            "type": "string",
            "description": "Optional prompt to show the user in the mapping UI."
          },
          "mappedValues": {
            "type": "array",
            "description": "If you would like the user to map a set of possible values, this is the list of possible values of the field in your application.",
            "items": {
              "title": "Mapped Value",
              "type": "object",
              "required": [
                "mappedValue",
                "mappedDisplayValue"
              ],
              "properties": {
                "mappedValue": {
                  "type": "string"
                },
                "mappedDisplayValue": {
                  "type": "string"
                }
              }
            }
          },
          "fieldName": {
            "type": "string",
            "description": "The name of the field in SaaS provider, if present, then we will not prompt the user to map the field."
          }
        }
      },
      "DynamicMappingsInputMappedValue": {
        "title": "Mapped Value",
        "type": "object",
        "required": [
          "mappedValue",
          "mappedDisplayValue"
        ],
        "properties": {
          "mappedValue": {
            "type": "string"
          },
          "mappedDisplayValue": {
            "type": "string"
          }
        }
      },
      "ValueDefault": {
        "title": "Value Default (Legacy)",
        "deprecated": true,
        "x-go-type": "any",
        "oneOf": [
          {
            "title": "Value Default String",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "string",
                "description": "The value to be used as a default."
              },
              "applyOnUpdate": {
                "type": "string",
                "enum": [
                  "always",
                  "never"
                ],
                "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
              }
            }
          },
          {
            "title": "Value Default Integer",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "integer",
                "description": "The value to be used as a default."
              },
              "applyOnUpdate": {
                "type": "string",
                "enum": [
                  "always",
                  "never"
                ],
                "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
              }
            }
          },
          {
            "title": "Value Default Boolean",
            "type": "object",
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "type": "boolean",
                "description": "The value to be used as a default."
              },
              "applyOnUpdate": {
                "type": "string",
                "enum": [
                  "always",
                  "never"
                ],
                "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
              }
            }
          }
        ]
      },
      "ValueDefaultString": {
        "title": "Value Default String",
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string",
            "description": "The value to be used as a default."
          },
          "applyOnUpdate": {
            "type": "string",
            "enum": [
              "always",
              "never"
            ],
            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
          }
        }
      },
      "ValueDefaultInteger": {
        "title": "Value Default Integer",
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "integer",
            "description": "The value to be used as a default."
          },
          "applyOnUpdate": {
            "type": "string",
            "enum": [
              "always",
              "never"
            ],
            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
          }
        }
      },
      "ValueDefaultBoolean": {
        "title": "Value Default Boolean",
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "boolean",
            "description": "The value to be used as a default."
          },
          "applyOnUpdate": {
            "type": "string",
            "enum": [
              "always",
              "never"
            ],
            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
          }
        }
      }
    }
  }
}