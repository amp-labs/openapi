openapi: 3.0.1
info:
  title: Ampersand public write API
  version: 1.0.0
servers:
  - url: https://write.withampersand.com/v1
paths:
  /projects/{projectIdOrName}/integrations/{integrationId}/objects/{objectName}:
    post:
      summary: Write records
      operationId: writeRecords
      tags: ["Write"]
      parameters:
        - name: projectIdOrName
          in: path
          required: true
          schema:
            type: string
        - name: integrationId
          in: path
          required: true
          schema:
            type: string
        - name: objectName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Write request
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WriteRequest"
      responses:
        200:
          description: The success response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WriteResponseSingleSuccess"
        400:
          description: The failure response for bad request.
          content:
            text/plain:
              schema:
                type: string
                example: "required field not found"
        422:
          description: Error encountered while creating records
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WriteResponseSingleFail"
        default:
          description: Error
          content:
            application/problem+json:
              schema:
                $ref: "../problem/problem.yaml#/components/schemas/ApiProblem"
components:
  schemas:
    WriteRequest:
      required:
        - groupRef
        - type
      type: object
      properties:
        groupRef:
          type: string
          description:
            The ID of the user group whose SaaS instance you'd like to write data to. This is the ID that was provided
            during installation creation.
        type:
          type: string
          description:
            The type of write operation. The only supported types currently are create and update.
          enum: [create, update]
          example: create
        mode:
          type: string
          description: The mode of write operation. The only supported mode currently is synchronous.
          enum: [synchronous] #          enum: [synchronous, async, bulk]
          example: synchronous
        record:
          type: object
          description: The record to write
          example:
            {
              "email": "david@withampersand.com",
              "warmthScore": "ready-for-close",
            }
        associations:
          type: array
          items:
            type: object
          description: "To write associations to the record. Note: currently only HubSpot associations are supported"
          example:
            [
              { "to": {"id": "18417469260"},
                "types": [{
                    "associationCategory": "HUBSPOT_DEFINED",
                    "associationTypeId": 279
                }]}
            ]
        #        records:
        #          type: array
        #          description: The records to write
        #          example:
        #            [{
        #             "email": "david@withampersand.com",
        #             "warmthScore": "ready-for-close",
        #           }]
    WriteResponseSingleSuccess:
      type: object
      required:
        - result
      additionalProperties: false
      properties:
        result:
          $ref: "#/components/schemas/WriteResult"
    WriteResponseSingleFail:
      type: object
      required:
        - errors
      additionalProperties: false
      properties:
        errors:
          type: array
          description: Error messages resulted in failures
          items:
            type: string
            description: errors messages when some unexpected event happened, but write to provider was successful
            example: "The record with ID 003Dp0X#@RG7IAP was not found"
        result:
          $ref: "#/components/schemas/WriteResult"
        warnings:
          type: array
          description: Warnings messages when some unexpected event happened, but not blocking failures
          items:
            type: string
            description: Warning messages for unexpected events
            example: "Ampersand Operation failed to be updated"
        operationId:
          type: string
          description: The operation ID
          example: acb0d75a-1b59-4aad-a191-48c5b75ea9e4
    WriteResult:
      type: object
      required:
        - success
      additionalProperties: false
      properties:
        success:
          type: boolean
          description: Whether the operation was successful
          example: true
        data:
          type: object
          description: The data returned by the operation
          example: { "email": "david@ampersand.com" }
        recordId:
          type: string
          description: The ID of the object
          example: 003Dp0X#@RG7IAP
  securitySchemes:
    APIKeyHeader:
      type: apiKey
      name: X-Api-Key
      in: header
    APIKeyQueryParam:
      type: apiKey
      name: apiKey
      in: query
    Bearer:
      type: apiKey
      name: Authorization
      in: header
security:
  - APIKeyHeader: []