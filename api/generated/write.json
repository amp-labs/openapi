{
  "openapi": "3.0.1",
  "info": {
    "title": "Ampersand public write API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://write.withampersand.com/v1"
    }
  ],
  "paths": {
    "/projects/{projectId}/integrations/{integrationId}/objects/{objectName}": {
      "post": {
        "summary": "Create, update, upsert or delete records",
        "operationId": "writeRecords",
        "tags": [
          "Write"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Write request",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "groupRef",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "groupRef": {
                    "type": "string",
                    "description": "The ID of the user group whose SaaS instance you'd like to write data to. This is the ID that was provided during installation creation."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of write operation.",
                    "enum": [
                      "create",
                      "update",
                      "upsert",
                      "delete"
                    ],
                    "example": "create"
                  },
                  "mode": {
                    "type": "string",
                    "description": "The mode of write operation. Default is synchronous.",
                    "enum": [
                      "synchronous",
                      "bulk"
                    ],
                    "example": "synchronous"
                  },
                  "record": {
                    "type": "object",
                    "description": "The record to write in case of non-bulk writes.",
                    "example": {
                      "email": "david@withampersand.com",
                      "warmthScore": "ready-for-close"
                    }
                  },
                  "recordsCSV": {
                    "type": "string",
                    "description": "The records to write, in a CSV string. Max size limit of data is 10 MiB. For bulk writes, you must provide either recordsCSV or recordsURL.",
                    "example": "column1,column2\nvalue1,value2\nvalue3,value4"
                  },
                  "recordsURL": {
                    "type": "string",
                    "description": "Either a public URL to download the records in CSV format, or a `reference` returned by `/generate-upload-url`. Max size limit of CSV data is 150 MiB. You can provide either recordsCSV or recordsURL. For bulk writes, you must provide either recordsCSV or recordsURL.",
                    "example": "https://example.com/records.csv"
                  },
                  "primaryKey": {
                    "type": "string",
                    "description": "The name of the primary key field for bulk write (required for upsert, update and delete)",
                    "example": "id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The success response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "result"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "result": {
                          "type": "object",
                          "required": [
                            "success"
                          ],
                          "additionalProperties": false,
                          "properties": {
                            "success": {
                              "type": "boolean",
                              "description": "Whether the operation was successful",
                              "example": true
                            },
                            "data": {
                              "type": "object",
                              "description": "The data returned by the operation",
                              "example": {
                                "email": "david@ampersand.com"
                              }
                            },
                            "recordId": {
                              "type": "string",
                              "description": "The ID of the object",
                              "example": "003Dp0X#@RG7IAP"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "operationId"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "operationId": {
                          "type": "string",
                          "description": "The operation ID",
                          "example": 1234567890
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The failure response for bad request.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "required field not found"
                }
              }
            }
          },
          "422": {
            "description": "Error encountered while creating records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "errors"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "errors": {
                      "type": "array",
                      "description": "Error messages resulted in failures",
                      "items": {
                        "type": "string",
                        "description": "errors messages when some unexpected event happened, but write to provider was successful",
                        "example": "The record with ID 003Dp0X#@RG7IAP was not found"
                      }
                    },
                    "result": {
                      "type": "object",
                      "required": [
                        "success"
                      ],
                      "additionalProperties": false,
                      "properties": {
                        "success": {
                          "type": "boolean",
                          "description": "Whether the operation was successful",
                          "example": true
                        },
                        "data": {
                          "type": "object",
                          "description": "The data returned by the operation",
                          "example": {
                            "email": "david@ampersand.com"
                          }
                        },
                        "recordId": {
                          "type": "string",
                          "description": "The ID of the object",
                          "example": "003Dp0X#@RG7IAP"
                        }
                      }
                    },
                    "warnings": {
                      "type": "array",
                      "description": "Warnings messages when some unexpected event happened, but not blocking failures",
                      "items": {
                        "type": "string",
                        "description": "Warning messages for unexpected events",
                        "example": "Ampersand Operation failed to be updated"
                      }
                    },
                    "operationId": {
                      "type": "string",
                      "description": "The operation ID",
                      "example": "acb0d75a-1b59-4aad-a191-48c5b75ea9e4"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/generate-upload-url": {
      "get": {
        "summary": "Generate a signed URL to upload write data to.",
        "operationId": "generateUploadUrl",
        "tags": [
          "Upload URL"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The name of the file to upload",
              "example": "records.csv"
            }
          },
          {
            "name": "md5",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "The base64-encoded MD5 hash of the file to upload (optional). If you attach this, you must also attach the Content-MD5 header to the upload request.",
              "example": "NBLgJpN1XXun5+BsVUs/AA=="
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Signed URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "url",
                    "reference"
                  ],
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The signed URL to upload the zip file to."
                    },
                    "reference": {
                      "type": "string",
                      "description": "The WriteRequest.RecordsURL value to pass back in the write request. It will start with \"gs://\"."
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WriteResponseAsync": {
        "type": "object",
        "required": [
          "operationId"
        ],
        "additionalProperties": false,
        "properties": {
          "operationId": {
            "type": "string",
            "description": "The operation ID",
            "example": 1234567890
          }
        }
      },
      "WriteRequest": {
        "required": [
          "groupRef",
          "type"
        ],
        "type": "object",
        "properties": {
          "groupRef": {
            "type": "string",
            "description": "The ID of the user group whose SaaS instance you'd like to write data to. This is the ID that was provided during installation creation."
          },
          "type": {
            "type": "string",
            "description": "The type of write operation.",
            "enum": [
              "create",
              "update",
              "upsert",
              "delete"
            ],
            "example": "create"
          },
          "mode": {
            "type": "string",
            "description": "The mode of write operation. Default is synchronous.",
            "enum": [
              "synchronous",
              "bulk"
            ],
            "example": "synchronous"
          },
          "record": {
            "type": "object",
            "description": "The record to write in case of non-bulk writes.",
            "example": {
              "email": "david@withampersand.com",
              "warmthScore": "ready-for-close"
            }
          },
          "recordsCSV": {
            "type": "string",
            "description": "The records to write, in a CSV string. Max size limit of data is 10 MiB. For bulk writes, you must provide either recordsCSV or recordsURL.",
            "example": "column1,column2\nvalue1,value2\nvalue3,value4"
          },
          "recordsURL": {
            "type": "string",
            "description": "Either a public URL to download the records in CSV format, or a `reference` returned by `/generate-upload-url`. Max size limit of CSV data is 150 MiB. You can provide either recordsCSV or recordsURL. For bulk writes, you must provide either recordsCSV or recordsURL.",
            "example": "https://example.com/records.csv"
          },
          "primaryKey": {
            "type": "string",
            "description": "The name of the primary key field for bulk write (required for upsert, update and delete)",
            "example": "id"
          }
        }
      },
      "WriteResponseSingleSuccess": {
        "type": "object",
        "required": [
          "result"
        ],
        "additionalProperties": false,
        "properties": {
          "result": {
            "type": "object",
            "required": [
              "success"
            ],
            "additionalProperties": false,
            "properties": {
              "success": {
                "type": "boolean",
                "description": "Whether the operation was successful",
                "example": true
              },
              "data": {
                "type": "object",
                "description": "The data returned by the operation",
                "example": {
                  "email": "david@ampersand.com"
                }
              },
              "recordId": {
                "type": "string",
                "description": "The ID of the object",
                "example": "003Dp0X#@RG7IAP"
              }
            }
          }
        }
      },
      "WriteResponseSingleFail": {
        "type": "object",
        "required": [
          "errors"
        ],
        "additionalProperties": false,
        "properties": {
          "errors": {
            "type": "array",
            "description": "Error messages resulted in failures",
            "items": {
              "type": "string",
              "description": "errors messages when some unexpected event happened, but write to provider was successful",
              "example": "The record with ID 003Dp0X#@RG7IAP was not found"
            }
          },
          "result": {
            "type": "object",
            "required": [
              "success"
            ],
            "additionalProperties": false,
            "properties": {
              "success": {
                "type": "boolean",
                "description": "Whether the operation was successful",
                "example": true
              },
              "data": {
                "type": "object",
                "description": "The data returned by the operation",
                "example": {
                  "email": "david@ampersand.com"
                }
              },
              "recordId": {
                "type": "string",
                "description": "The ID of the object",
                "example": "003Dp0X#@RG7IAP"
              }
            }
          },
          "warnings": {
            "type": "array",
            "description": "Warnings messages when some unexpected event happened, but not blocking failures",
            "items": {
              "type": "string",
              "description": "Warning messages for unexpected events",
              "example": "Ampersand Operation failed to be updated"
            }
          },
          "operationId": {
            "type": "string",
            "description": "The operation ID",
            "example": "acb0d75a-1b59-4aad-a191-48c5b75ea9e4"
          }
        }
      },
      "WriteResult": {
        "type": "object",
        "required": [
          "success"
        ],
        "additionalProperties": false,
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Whether the operation was successful",
            "example": true
          },
          "data": {
            "type": "object",
            "description": "The data returned by the operation",
            "example": {
              "email": "david@ampersand.com"
            }
          },
          "recordId": {
            "type": "string",
            "description": "The ID of the object",
            "example": "003Dp0X#@RG7IAP"
          }
        }
      },
      "SignedWriteUrl": {
        "type": "object",
        "required": [
          "url",
          "reference"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "The signed URL to upload the zip file to."
          },
          "reference": {
            "type": "string",
            "description": "The WriteRequest.RecordsURL value to pass back in the write request. It will start with \"gs://\"."
          }
        }
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header"
      },
      "APIKeyQueryParam": {
        "type": "apiKey",
        "name": "apiKey",
        "in": "query"
      },
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}