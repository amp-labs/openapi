{
  "openapi": "3.0.1",
  "info": {
    "title": "Ampersand public API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.withampersand.com/v1"
    }
  ],
  "paths": {
    "/oauth-connect": {
      "post": {
        "operationId": "oauthConnect",
        "summary": "Get URL for OAuth flow",
        "description": "Generate a URL for the browser to render to kick off OAuth flow.",
        "tags": [
          "OAuth"
        ],
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "projectId",
                  "groupRef",
                  "consumerRef",
                  "provider"
                ],
                "properties": {
                  "providerWorkspaceRef": {
                    "type": "string",
                    "description": "The identifier for the provider workspace",
                    "example": "salesforce-instance-domain"
                  },
                  "projectId": {
                    "type": "string",
                    "description": "The Ampersand project ID."
                  },
                  "groupRef": {
                    "type": "string",
                    "description": "The ID that your app uses to identify the group of users for this Connection, this can be an Org ID, workspace ID, etc."
                  },
                  "groupName": {
                    "type": "string",
                    "description": "The display name for the group. Defaults to groupRef if not provided."
                  },
                  "consumerRef": {
                    "type": "string",
                    "description": "The ID that your app uses to identify the user whose SaaS credential will be used for this OAuth flow."
                  },
                  "consumerName": {
                    "type": "string",
                    "description": "The display name for the consumer. Defaults to consumerRef if not provided."
                  },
                  "providerAppId": {
                    "type": "string",
                    "description": "ID of the provider app (e.g. Salesforce connected app), returned from a CreateProviderApp call. If omitted, the default provider app that was set up on the Ampersand Dashboard is assumed."
                  },
                  "provider": {
                    "type": "string",
                    "description": "The provider that this app connects to.",
                    "example": "salesforce"
                  },
                  "enableCSRFProtection": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "description": "URL to render"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "connectOAuthParams"
      }
    },
    "/projects": {
      "get": {
        "summary": "List all projects that the API key or user credential has access to",
        "operationId": "listProjects",
        "tags": [
          "Project"
        ],
        "responses": {
          "200": {
            "description": "List of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Project",
                    "required": [
                      "appName",
                      "createTime",
                      "id",
                      "name"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The project ID.",
                        "example": "project-id-123"
                      },
                      "name": {
                        "type": "string",
                        "description": "The project name.",
                        "example": "mailmonkey-staging"
                      },
                      "appName": {
                        "type": "string",
                        "description": "The name of the application, which is displayed to end users.",
                        "example": "MailMonkey"
                      },
                      "orgId": {
                        "type": "string",
                        "description": "The organization ID that this project belongs to."
                      },
                      "createTime": {
                        "type": "string",
                        "description": "The time the project was created.",
                        "format": "date-time"
                      },
                      "updateTime": {
                        "type": "string",
                        "description": "The time the project was updated.",
                        "format": "date-time"
                      },
                      "entitlements": {
                        "type": "object",
                        "description": "The entitlements for the project.",
                        "properties": {
                          "brandingRemoval": {
                            "type": "object",
                            "required": [
                              "value"
                            ],
                            "x-go-type-skip-optional-pointer": true,
                            "description": "Whether branding can be removed from the UI library.",
                            "properties": {
                              "value": {
                                "type": "boolean",
                                "description": "Whether branding has been removed from the project."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new project",
        "operationId": "createProject",
        "tags": [
          "Project"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "appName",
                  "name",
                  "orgId"
                ],
                "type": "object",
                "properties": {
                  "appName": {
                    "type": "string",
                    "description": "The app name.",
                    "example": "MailMonkey"
                  },
                  "name": {
                    "type": "string",
                    "description": "The project name. Must be alphanumerics and hyphens only. Project names will be save in lowercase.",
                    "example": "mailmonkey-staging"
                  },
                  "orgId": {
                    "type": "string",
                    "description": "The organization ID."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The newly created project",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Project",
                  "required": [
                    "appName",
                    "createTime",
                    "id",
                    "name"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The project ID.",
                      "example": "project-id-123"
                    },
                    "name": {
                      "type": "string",
                      "description": "The project name.",
                      "example": "mailmonkey-staging"
                    },
                    "appName": {
                      "type": "string",
                      "description": "The name of the application, which is displayed to end users.",
                      "example": "MailMonkey"
                    },
                    "orgId": {
                      "type": "string",
                      "description": "The organization ID that this project belongs to."
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the project was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the project was updated.",
                      "format": "date-time"
                    },
                    "entitlements": {
                      "type": "object",
                      "description": "The entitlements for the project.",
                      "properties": {
                        "brandingRemoval": {
                          "type": "object",
                          "required": [
                            "value"
                          ],
                          "x-go-type-skip-optional-pointer": true,
                          "description": "Whether branding can be removed from the UI library.",
                          "properties": {
                            "value": {
                              "type": "boolean",
                              "description": "Whether branding has been removed from the project."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "project"
      }
    },
    "/projects/{projectIdOrName}": {
      "get": {
        "summary": "Get a project",
        "operationId": "getProject",
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeEntitlements",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Project",
                  "required": [
                    "appName",
                    "createTime",
                    "id",
                    "name"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The project ID.",
                      "example": "project-id-123"
                    },
                    "name": {
                      "type": "string",
                      "description": "The project name.",
                      "example": "mailmonkey-staging"
                    },
                    "appName": {
                      "type": "string",
                      "description": "The name of the application, which is displayed to end users.",
                      "example": "MailMonkey"
                    },
                    "orgId": {
                      "type": "string",
                      "description": "The organization ID that this project belongs to."
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the project was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the project was updated.",
                      "format": "date-time"
                    },
                    "entitlements": {
                      "type": "object",
                      "description": "The entitlements for the project.",
                      "properties": {
                        "brandingRemoval": {
                          "type": "object",
                          "required": [
                            "value"
                          ],
                          "x-go-type-skip-optional-pointer": true,
                          "description": "Whether branding can be removed from the UI library.",
                          "properties": {
                            "value": {
                              "type": "boolean",
                              "description": "Whether branding has been removed from the project."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a project",
        "operationId": "deleteProject",
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a project",
        "operationId": "updateProject",
        "tags": [
          "Project"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "project",
                  "updateMask"
                ],
                "type": "object",
                "properties": {
                  "updateMask": {
                    "type": "array",
                    "example": [
                      "appName"
                    ],
                    "items": {
                      "type": "string",
                      "description": "fields to update."
                    }
                  },
                  "project": {
                    "type": "object",
                    "properties": {
                      "appName": {
                        "type": "string",
                        "description": "The app name.",
                        "example": "MailMonkey"
                      },
                      "name": {
                        "type": "string",
                        "description": "The project name.",
                        "example": "mailmonkey-staging"
                      }
                    },
                    "description": "The project fields to update. (Only include the fields you'd like to update.)"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The updated project",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Project",
                  "required": [
                    "appName",
                    "createTime",
                    "id",
                    "name"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The project ID.",
                      "example": "project-id-123"
                    },
                    "name": {
                      "type": "string",
                      "description": "The project name.",
                      "example": "mailmonkey-staging"
                    },
                    "appName": {
                      "type": "string",
                      "description": "The name of the application, which is displayed to end users.",
                      "example": "MailMonkey"
                    },
                    "orgId": {
                      "type": "string",
                      "description": "The organization ID that this project belongs to."
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the project was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the project was updated.",
                      "format": "date-time"
                    },
                    "entitlements": {
                      "type": "object",
                      "description": "The entitlements for the project.",
                      "properties": {
                        "brandingRemoval": {
                          "type": "object",
                          "required": [
                            "value"
                          ],
                          "x-go-type-skip-optional-pointer": true,
                          "description": "Whether branding can be removed from the UI library.",
                          "properties": {
                            "value": {
                              "type": "boolean",
                              "description": "Whether branding has been removed from the project."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "projectUpdate"
      }
    },
    "/projects/{projectIdOrName}/provider-apps": {
      "get": {
        "summary": "List provider apps",
        "operationId": "listProviderApps",
        "tags": [
          "Provider App"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of provider apps",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Provider App",
                    "required": [
                      "clientId",
                      "createTime",
                      "id",
                      "projectId",
                      "provider"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The provider app ID.",
                        "example": "provider-app-123"
                      },
                      "projectId": {
                        "type": "string",
                        "description": "The Ampersand project ID.",
                        "example": "project-456"
                      },
                      "externalRef": {
                        "type": "string",
                        "description": "The ID used by the provider to identify the app (optional).",
                        "example": "external-id-123"
                      },
                      "provider": {
                        "type": "string",
                        "description": "The SaaS provider that this app connects to.",
                        "example": "salesforce"
                      },
                      "clientId": {
                        "type": "string",
                        "description": "The OAuth client ID for this app.",
                        "example": "client-id-123"
                      },
                      "scopes": {
                        "type": "array",
                        "description": "The OAuth scopes for this app.",
                        "items": {
                          "type": "string",
                          "example": [
                            "oauth",
                            "offline",
                            "crm.read"
                          ]
                        }
                      },
                      "createTime": {
                        "type": "string",
                        "description": "The time the provider app was created.",
                        "format": "date-time"
                      },
                      "updateTime": {
                        "type": "string",
                        "description": "The time the provider app was updated.",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new provider app",
        "operationId": "createProviderApp",
        "tags": [
          "Provider App"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "clientId",
                  "clientSecret",
                  "provider"
                ],
                "type": "object",
                "properties": {
                  "externalRef": {
                    "type": "string",
                    "description": "The ID used by the provider to identify the app (optional).",
                    "example": "external-id-123"
                  },
                  "provider": {
                    "type": "string",
                    "description": "The SaaS provider that this app connects to.",
                    "example": "salesforce"
                  },
                  "clientId": {
                    "type": "string",
                    "description": "The OAuth client ID for this app.",
                    "example": "client-id-123"
                  },
                  "clientSecret": {
                    "type": "string",
                    "description": "The OAuth client secret for this app.",
                    "example": "client-secret-123"
                  },
                  "scopes": {
                    "type": "array",
                    "description": "The OAuth scopes for this app.",
                    "items": {
                      "type": "string",
                      "example": [
                        "read",
                        "write"
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The newly created provider app",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Provider App",
                  "required": [
                    "clientId",
                    "createTime",
                    "id",
                    "projectId",
                    "provider"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The provider app ID.",
                      "example": "provider-app-123"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The Ampersand project ID.",
                      "example": "project-456"
                    },
                    "externalRef": {
                      "type": "string",
                      "description": "The ID used by the provider to identify the app (optional).",
                      "example": "external-id-123"
                    },
                    "provider": {
                      "type": "string",
                      "description": "The SaaS provider that this app connects to.",
                      "example": "salesforce"
                    },
                    "clientId": {
                      "type": "string",
                      "description": "The OAuth client ID for this app.",
                      "example": "client-id-123"
                    },
                    "scopes": {
                      "type": "array",
                      "description": "The OAuth scopes for this app.",
                      "items": {
                        "type": "string",
                        "example": [
                          "oauth",
                          "offline",
                          "crm.read"
                        ]
                      }
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the provider app was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the provider app was updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "providerApp"
      }
    },
    "/projects/{projectIdOrName}/provider-apps/{providerAppId}": {
      "delete": {
        "summary": "Delete a provider app",
        "operationId": "deleteProviderApp",
        "tags": [
          "Provider App"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerAppId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a provider app",
        "operationId": "updateProviderApp",
        "tags": [
          "Provider App"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerAppId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "providerApp",
                  "updateMask"
                ],
                "type": "object",
                "properties": {
                  "updateMask": {
                    "type": "array",
                    "example": [
                      "externalRef",
                      "provider",
                      "clientId",
                      "clientSecret"
                    ],
                    "items": {
                      "type": "string",
                      "description": "fields to update."
                    }
                  },
                  "providerApp": {
                    "type": "object",
                    "properties": {
                      "externalRef": {
                        "type": "string",
                        "description": "The ID used by the provider to identify the app (optional).",
                        "example": "external-id-123"
                      },
                      "provider": {
                        "type": "string",
                        "description": "The SaaS provider that this app connects to.",
                        "example": "salesforce"
                      },
                      "clientId": {
                        "type": "string",
                        "description": "The OAuth client ID for this app.",
                        "example": "client-id-123"
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "The OAuth client secret for this app.",
                        "example": "client-secret-123"
                      },
                      "scopes": {
                        "type": "array",
                        "description": "The OAuth scopes for this app.",
                        "items": {
                          "type": "string",
                          "example": [
                            "read",
                            "write"
                          ]
                        }
                      }
                    },
                    "description": "The provider app fields to update. (Only include the fields you'd like to update.)"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The updated provider app",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Provider App",
                  "required": [
                    "clientId",
                    "createTime",
                    "id",
                    "projectId",
                    "provider"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The provider app ID.",
                      "example": "provider-app-123"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The Ampersand project ID.",
                      "example": "project-456"
                    },
                    "externalRef": {
                      "type": "string",
                      "description": "The ID used by the provider to identify the app (optional).",
                      "example": "external-id-123"
                    },
                    "provider": {
                      "type": "string",
                      "description": "The SaaS provider that this app connects to.",
                      "example": "salesforce"
                    },
                    "clientId": {
                      "type": "string",
                      "description": "The OAuth client ID for this app.",
                      "example": "client-id-123"
                    },
                    "scopes": {
                      "type": "array",
                      "description": "The OAuth scopes for this app.",
                      "items": {
                        "type": "string",
                        "example": [
                          "oauth",
                          "offline",
                          "crm.read"
                        ]
                      }
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the provider app was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the provider app was updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "providerAppUpdate"
      }
    },
    "/projects/{projectIdOrName}/integrations": {
      "get": {
        "summary": "List integrations",
        "operationId": "listIntegrations",
        "tags": [
          "Integration"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of integrations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Integration",
                    "required": [
                      "createTime",
                      "id",
                      "latestRevision",
                      "name",
                      "projectId",
                      "provider"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The integration ID.",
                        "example": "integration-123"
                      },
                      "projectId": {
                        "type": "string",
                        "description": "The Ampersand project ID.",
                        "example": "project-456"
                      },
                      "name": {
                        "type": "string",
                        "description": "The integration name.",
                        "example": "read-accounts"
                      },
                      "provider": {
                        "type": "string",
                        "description": "The SaaS provider that this integration connects to.",
                        "example": "salesforce"
                      },
                      "createTime": {
                        "type": "string",
                        "description": "The time the integration was created.",
                        "format": "date-time"
                      },
                      "updateTime": {
                        "type": "string",
                        "description": "The time the integration was last updated.",
                        "format": "date-time"
                      },
                      "latestRevision": {
                        "title": "Revision",
                        "required": [
                          "content",
                          "createTime",
                          "id",
                          "specVersion"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The revision ID.",
                            "example": "revision-id-1"
                          },
                          "specVersion": {
                            "type": "string",
                            "description": "The spec version string.",
                            "example": "1.0.0"
                          },
                          "createTime": {
                            "type": "string",
                            "description": "The time the revision was created.",
                            "format": "date-time"
                          },
                          "content": {
                            "title": "Integration",
                            "type": "object",
                            "required": [
                              "name",
                              "provider"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "string"
                              },
                              "provider": {
                                "type": "string"
                              },
                              "read": {
                                "title": "Read Integration",
                                "type": "object",
                                "properties": {
                                  "objects": {
                                    "type": "array",
                                    "items": {
                                      "title": "Integration Object",
                                      "type": "object",
                                      "required": [
                                        "objectName",
                                        "destination",
                                        "schedule"
                                      ],
                                      "properties": {
                                        "objectName": {
                                          "type": "string"
                                        },
                                        "destination": {
                                          "type": "string"
                                        },
                                        "schedule": {
                                          "type": "string"
                                        },
                                        "mapToName": {
                                          "type": "string",
                                          "description": "An object name to map to.",
                                          "example": "people",
                                          "x-go-type-skip-optional-pointer": true
                                        },
                                        "mapToDisplayName": {
                                          "type": "string",
                                          "description": "A display name to map to.",
                                          "example": "People",
                                          "x-go-type-skip-optional-pointer": true
                                        },
                                        "requiredFields": {
                                          "type": "array",
                                          "items": {
                                            "title": "Integration Field",
                                            "oneOf": [
                                              {
                                                "title": "Integration Field Existent",
                                                "type": "object",
                                                "required": [
                                                  "fieldName"
                                                ],
                                                "properties": {
                                                  "fieldName": {
                                                    "type": "string"
                                                  },
                                                  "mapToName": {
                                                    "type": "string",
                                                    "description": "The field name to map to.",
                                                    "example": "account_id",
                                                    "x-go-type-skip-optional-pointer": true
                                                  },
                                                  "mapToDisplayName": {
                                                    "type": "string",
                                                    "description": "The display name to map to.",
                                                    "example": "Account ID",
                                                    "x-go-type-skip-optional-pointer": true
                                                  }
                                                }
                                              },
                                              {
                                                "title": "Integration Field Mapping",
                                                "type": "object",
                                                "required": [
                                                  "mapToName"
                                                ],
                                                "properties": {
                                                  "mapToName": {
                                                    "type": "string"
                                                  },
                                                  "mapToDisplayName": {
                                                    "type": "string"
                                                  },
                                                  "default": {
                                                    "type": "string"
                                                  },
                                                  "prompt": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "optionalFields": {
                                          "type": "array",
                                          "items": {
                                            "title": "Integration Field",
                                            "oneOf": [
                                              {
                                                "title": "Integration Field Existent",
                                                "type": "object",
                                                "required": [
                                                  "fieldName"
                                                ],
                                                "properties": {
                                                  "fieldName": {
                                                    "type": "string"
                                                  },
                                                  "mapToName": {
                                                    "type": "string",
                                                    "description": "The field name to map to.",
                                                    "example": "account_id",
                                                    "x-go-type-skip-optional-pointer": true
                                                  },
                                                  "mapToDisplayName": {
                                                    "type": "string",
                                                    "description": "The display name to map to.",
                                                    "example": "Account ID",
                                                    "x-go-type-skip-optional-pointer": true
                                                  }
                                                }
                                              },
                                              {
                                                "title": "Integration Field Mapping",
                                                "type": "object",
                                                "required": [
                                                  "mapToName"
                                                ],
                                                "properties": {
                                                  "mapToName": {
                                                    "type": "string"
                                                  },
                                                  "mapToDisplayName": {
                                                    "type": "string"
                                                  },
                                                  "default": {
                                                    "type": "string"
                                                  },
                                                  "prompt": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "optionalFieldsAuto": {
                                          "title": "Optional Fields Auto Option",
                                          "type": "string",
                                          "enum": [
                                            "all"
                                          ]
                                        },
                                        "backfill": {
                                          "title": "Backfill",
                                          "type": "object",
                                          "required": [
                                            "defaultPeriod"
                                          ],
                                          "properties": {
                                            "defaultPeriod": {
                                              "title": "Default Period",
                                              "type": "object",
                                              "properties": {
                                                "days": {
                                                  "type": "integer",
                                                  "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                                  "minimum": 0,
                                                  "example": 30,
                                                  "x-oapi-codegen-extra-tags": {
                                                    "validate": "required_without=FullHistory,omitempty,min=0"
                                                  }
                                                },
                                                "fullHistory": {
                                                  "type": "boolean",
                                                  "description": "If true, backfill all history. Required if days is not set.",
                                                  "example": false,
                                                  "x-oapi-codegen-extra-tags": {
                                                    "validate": "required_without=Days"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "delivery": {
                                          "title": "Delivery",
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string",
                                              "default": "auto",
                                              "enum": [
                                                "onRequest",
                                                "auto"
                                              ],
                                              "description": "The data delivery mode for this object. If not specified, defaults to automatic."
                                            },
                                            "pageSize": {
                                              "type": "integer",
                                              "description": "The number of records to receive per data delivery.",
                                              "minimum": 50,
                                              "maximum": 500
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "write": {
                                "title": "Write Integration",
                                "type": "object",
                                "properties": {
                                  "objects": {
                                    "type": "array",
                                    "items": {
                                      "title": "Integration Write Object",
                                      "type": "object",
                                      "required": [
                                        "objectName"
                                      ],
                                      "properties": {
                                        "objectName": {
                                          "type": "string"
                                        },
                                        "inheritMapping": {
                                          "type": "boolean",
                                          "description": "If true, the write object will inherit the mapping from the read object. If false, the write object will have no mapping.",
                                          "example": true
                                        },
                                        "valueDefaults": {
                                          "title": "Value Defaults",
                                          "type": "object",
                                          "description": "Configuration to set default write values for object fields.",
                                          "properties": {
                                            "allowAnyFields": {
                                              "type": "boolean",
                                              "description": "If true, users can set default values for any field.",
                                              "example": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "proxy": {
                                "title": "Proxy Integration",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "subscribe": {
                                "title": "Subscribe Integration",
                                "type": "object",
                                "properties": {
                                  "objects": {
                                    "type": "array",
                                    "items": {
                                      "title": "Integration Subscribe Object",
                                      "type": "object",
                                      "required": [
                                        "objectName",
                                        "destination"
                                      ],
                                      "properties": {
                                        "objectName": {
                                          "type": "string"
                                        },
                                        "destination": {
                                          "type": "string"
                                        },
                                        "createEvent": {
                                          "type": "object",
                                          "properties": {
                                            "enabled": {
                                              "type": "string",
                                              "description": "If always, the integration will subscribe to create events.",
                                              "enum": [
                                                "always"
                                              ]
                                            }
                                          }
                                        },
                                        "updateEvent": {
                                          "type": "object",
                                          "properties": {
                                            "enabled": {
                                              "type": "string",
                                              "description": "If always, the integration will subscribe to update events.",
                                              "enum": [
                                                "always"
                                              ]
                                            },
                                            "requiredWatchFields": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "The fields that are required to be watched for updates.",
                                                "example": [
                                                  "name",
                                                  "domain"
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "deleteEvent": {
                                          "type": "object",
                                          "properties": {
                                            "enabled": {
                                              "type": "string",
                                              "description": "If always, the integration will subscribe to delete events.",
                                              "enum": [
                                                "always"
                                              ]
                                            }
                                          }
                                        },
                                        "associationChangeEvent": {
                                          "type": "object",
                                          "properties": {
                                            "enabled": {
                                              "type": "string",
                                              "description": "If always, the integration will subscribe to association change events.",
                                              "enum": [
                                                "always"
                                              ]
                                            },
                                            "includeFullRecords": {
                                              "type": "boolean",
                                              "description": "If true, the integration will include full records in the event payload."
                                            }
                                          }
                                        },
                                        "otherEvents": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "Non-standard events that the integration will subscribe to.",
                                            "example": [
                                              "object.merged",
                                              "object.restored"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new integration",
        "operationId": "createIntegration",
        "tags": [
          "Integration"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name",
                  "provider",
                  "latestRevision"
                ],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The integration name."
                  },
                  "provider": {
                    "type": "string",
                    "description": "The provider name (e.g. \"salesforce\", \"hubspot\")"
                  },
                  "latestRevision": {
                    "type": "object",
                    "required": [
                      "content",
                      "specVersion"
                    ],
                    "properties": {
                      "specVersion": {
                        "type": "string",
                        "description": "The spec version string.",
                        "example": "1.0.0"
                      },
                      "content": {
                        "title": "Integration",
                        "type": "object",
                        "required": [
                          "name",
                          "provider"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "displayName": {
                            "type": "string"
                          },
                          "provider": {
                            "type": "string"
                          },
                          "read": {
                            "title": "Read Integration",
                            "type": "object",
                            "properties": {
                              "objects": {
                                "type": "array",
                                "items": {
                                  "title": "Integration Object",
                                  "type": "object",
                                  "required": [
                                    "objectName",
                                    "destination",
                                    "schedule"
                                  ],
                                  "properties": {
                                    "objectName": {
                                      "type": "string"
                                    },
                                    "destination": {
                                      "type": "string"
                                    },
                                    "schedule": {
                                      "type": "string"
                                    },
                                    "mapToName": {
                                      "type": "string",
                                      "description": "An object name to map to.",
                                      "example": "people",
                                      "x-go-type-skip-optional-pointer": true
                                    },
                                    "mapToDisplayName": {
                                      "type": "string",
                                      "description": "A display name to map to.",
                                      "example": "People",
                                      "x-go-type-skip-optional-pointer": true
                                    },
                                    "requiredFields": {
                                      "type": "array",
                                      "items": {
                                        "title": "Integration Field",
                                        "oneOf": [
                                          {
                                            "title": "Integration Field Existent",
                                            "type": "object",
                                            "required": [
                                              "fieldName"
                                            ],
                                            "properties": {
                                              "fieldName": {
                                                "type": "string"
                                              },
                                              "mapToName": {
                                                "type": "string",
                                                "description": "The field name to map to.",
                                                "example": "account_id",
                                                "x-go-type-skip-optional-pointer": true
                                              },
                                              "mapToDisplayName": {
                                                "type": "string",
                                                "description": "The display name to map to.",
                                                "example": "Account ID",
                                                "x-go-type-skip-optional-pointer": true
                                              }
                                            }
                                          },
                                          {
                                            "title": "Integration Field Mapping",
                                            "type": "object",
                                            "required": [
                                              "mapToName"
                                            ],
                                            "properties": {
                                              "mapToName": {
                                                "type": "string"
                                              },
                                              "mapToDisplayName": {
                                                "type": "string"
                                              },
                                              "default": {
                                                "type": "string"
                                              },
                                              "prompt": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "optionalFields": {
                                      "type": "array",
                                      "items": {
                                        "title": "Integration Field",
                                        "oneOf": [
                                          {
                                            "title": "Integration Field Existent",
                                            "type": "object",
                                            "required": [
                                              "fieldName"
                                            ],
                                            "properties": {
                                              "fieldName": {
                                                "type": "string"
                                              },
                                              "mapToName": {
                                                "type": "string",
                                                "description": "The field name to map to.",
                                                "example": "account_id",
                                                "x-go-type-skip-optional-pointer": true
                                              },
                                              "mapToDisplayName": {
                                                "type": "string",
                                                "description": "The display name to map to.",
                                                "example": "Account ID",
                                                "x-go-type-skip-optional-pointer": true
                                              }
                                            }
                                          },
                                          {
                                            "title": "Integration Field Mapping",
                                            "type": "object",
                                            "required": [
                                              "mapToName"
                                            ],
                                            "properties": {
                                              "mapToName": {
                                                "type": "string"
                                              },
                                              "mapToDisplayName": {
                                                "type": "string"
                                              },
                                              "default": {
                                                "type": "string"
                                              },
                                              "prompt": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "optionalFieldsAuto": {
                                      "title": "Optional Fields Auto Option",
                                      "type": "string",
                                      "enum": [
                                        "all"
                                      ]
                                    },
                                    "backfill": {
                                      "title": "Backfill",
                                      "type": "object",
                                      "required": [
                                        "defaultPeriod"
                                      ],
                                      "properties": {
                                        "defaultPeriod": {
                                          "title": "Default Period",
                                          "type": "object",
                                          "properties": {
                                            "days": {
                                              "type": "integer",
                                              "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                              "minimum": 0,
                                              "example": 30,
                                              "x-oapi-codegen-extra-tags": {
                                                "validate": "required_without=FullHistory,omitempty,min=0"
                                              }
                                            },
                                            "fullHistory": {
                                              "type": "boolean",
                                              "description": "If true, backfill all history. Required if days is not set.",
                                              "example": false,
                                              "x-oapi-codegen-extra-tags": {
                                                "validate": "required_without=Days"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "delivery": {
                                      "title": "Delivery",
                                      "type": "object",
                                      "properties": {
                                        "mode": {
                                          "type": "string",
                                          "default": "auto",
                                          "enum": [
                                            "onRequest",
                                            "auto"
                                          ],
                                          "description": "The data delivery mode for this object. If not specified, defaults to automatic."
                                        },
                                        "pageSize": {
                                          "type": "integer",
                                          "description": "The number of records to receive per data delivery.",
                                          "minimum": 50,
                                          "maximum": 500
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "write": {
                            "title": "Write Integration",
                            "type": "object",
                            "properties": {
                              "objects": {
                                "type": "array",
                                "items": {
                                  "title": "Integration Write Object",
                                  "type": "object",
                                  "required": [
                                    "objectName"
                                  ],
                                  "properties": {
                                    "objectName": {
                                      "type": "string"
                                    },
                                    "inheritMapping": {
                                      "type": "boolean",
                                      "description": "If true, the write object will inherit the mapping from the read object. If false, the write object will have no mapping.",
                                      "example": true
                                    },
                                    "valueDefaults": {
                                      "title": "Value Defaults",
                                      "type": "object",
                                      "description": "Configuration to set default write values for object fields.",
                                      "properties": {
                                        "allowAnyFields": {
                                          "type": "boolean",
                                          "description": "If true, users can set default values for any field.",
                                          "example": true
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "proxy": {
                            "title": "Proxy Integration",
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "type": "boolean"
                              }
                            }
                          },
                          "subscribe": {
                            "title": "Subscribe Integration",
                            "type": "object",
                            "properties": {
                              "objects": {
                                "type": "array",
                                "items": {
                                  "title": "Integration Subscribe Object",
                                  "type": "object",
                                  "required": [
                                    "objectName",
                                    "destination"
                                  ],
                                  "properties": {
                                    "objectName": {
                                      "type": "string"
                                    },
                                    "destination": {
                                      "type": "string"
                                    },
                                    "createEvent": {
                                      "type": "object",
                                      "properties": {
                                        "enabled": {
                                          "type": "string",
                                          "description": "If always, the integration will subscribe to create events.",
                                          "enum": [
                                            "always"
                                          ]
                                        }
                                      }
                                    },
                                    "updateEvent": {
                                      "type": "object",
                                      "properties": {
                                        "enabled": {
                                          "type": "string",
                                          "description": "If always, the integration will subscribe to update events.",
                                          "enum": [
                                            "always"
                                          ]
                                        },
                                        "requiredWatchFields": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "The fields that are required to be watched for updates.",
                                            "example": [
                                              "name",
                                              "domain"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "deleteEvent": {
                                      "type": "object",
                                      "properties": {
                                        "enabled": {
                                          "type": "string",
                                          "description": "If always, the integration will subscribe to delete events.",
                                          "enum": [
                                            "always"
                                          ]
                                        }
                                      }
                                    },
                                    "associationChangeEvent": {
                                      "type": "object",
                                      "properties": {
                                        "enabled": {
                                          "type": "string",
                                          "description": "If always, the integration will subscribe to association change events.",
                                          "enum": [
                                            "always"
                                          ]
                                        },
                                        "includeFullRecords": {
                                          "type": "boolean",
                                          "description": "If true, the integration will include full records in the event payload."
                                        }
                                      }
                                    },
                                    "otherEvents": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "Non-standard events that the integration will subscribe to.",
                                        "example": [
                                          "object.merged",
                                          "object.restored"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "integration"
      }
    },
    "/projects/{projectIdOrName}/integrations/{integrationId}": {
      "delete": {
        "summary": "Delete an integration",
        "operationId": "deleteIntegration",
        "tags": [
          "Integration"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Integration not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/integrations:batch": {
      "put": {
        "summary": "Batch upsert a group of integrations",
        "operationId": "batchUpsertIntegrations",
        "tags": [
          "Integration"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourceZipUrl": {
                    "type": "string",
                    "description": "URL of where a zip of the source files can be downloaded (e.g. Google Cloud Storage URL)."
                  },
                  "sourceYaml": {
                    "type": "string",
                    "description": "A YAML string that defines the integrations."
                  }
                },
                "description": "The source of the integrations to upsert. One of sourceZipUrl or sourceYaml is required."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upserted integrations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Integration",
                    "required": [
                      "createTime",
                      "id",
                      "latestRevision",
                      "name",
                      "projectId",
                      "provider"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The integration ID.",
                        "example": "integration-123"
                      },
                      "projectId": {
                        "type": "string",
                        "description": "The Ampersand project ID.",
                        "example": "project-456"
                      },
                      "name": {
                        "type": "string",
                        "description": "The integration name.",
                        "example": "read-accounts"
                      },
                      "provider": {
                        "type": "string",
                        "description": "The SaaS provider that this integration connects to.",
                        "example": "salesforce"
                      },
                      "createTime": {
                        "type": "string",
                        "description": "The time the integration was created.",
                        "format": "date-time"
                      },
                      "updateTime": {
                        "type": "string",
                        "description": "The time the integration was last updated.",
                        "format": "date-time"
                      },
                      "latestRevision": {
                        "title": "Revision",
                        "required": [
                          "content",
                          "createTime",
                          "id",
                          "specVersion"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The revision ID.",
                            "example": "revision-id-1"
                          },
                          "specVersion": {
                            "type": "string",
                            "description": "The spec version string.",
                            "example": "1.0.0"
                          },
                          "createTime": {
                            "type": "string",
                            "description": "The time the revision was created.",
                            "format": "date-time"
                          },
                          "content": {
                            "title": "Integration",
                            "type": "object",
                            "required": [
                              "name",
                              "provider"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "string"
                              },
                              "provider": {
                                "type": "string"
                              },
                              "read": {
                                "title": "Read Integration",
                                "type": "object",
                                "properties": {
                                  "objects": {
                                    "type": "array",
                                    "items": {
                                      "title": "Integration Object",
                                      "type": "object",
                                      "required": [
                                        "objectName",
                                        "destination",
                                        "schedule"
                                      ],
                                      "properties": {
                                        "objectName": {
                                          "type": "string"
                                        },
                                        "destination": {
                                          "type": "string"
                                        },
                                        "schedule": {
                                          "type": "string"
                                        },
                                        "mapToName": {
                                          "type": "string",
                                          "description": "An object name to map to.",
                                          "example": "people",
                                          "x-go-type-skip-optional-pointer": true
                                        },
                                        "mapToDisplayName": {
                                          "type": "string",
                                          "description": "A display name to map to.",
                                          "example": "People",
                                          "x-go-type-skip-optional-pointer": true
                                        },
                                        "requiredFields": {
                                          "type": "array",
                                          "items": {
                                            "title": "Integration Field",
                                            "oneOf": [
                                              {
                                                "title": "Integration Field Existent",
                                                "type": "object",
                                                "required": [
                                                  "fieldName"
                                                ],
                                                "properties": {
                                                  "fieldName": {
                                                    "type": "string"
                                                  },
                                                  "mapToName": {
                                                    "type": "string",
                                                    "description": "The field name to map to.",
                                                    "example": "account_id",
                                                    "x-go-type-skip-optional-pointer": true
                                                  },
                                                  "mapToDisplayName": {
                                                    "type": "string",
                                                    "description": "The display name to map to.",
                                                    "example": "Account ID",
                                                    "x-go-type-skip-optional-pointer": true
                                                  }
                                                }
                                              },
                                              {
                                                "title": "Integration Field Mapping",
                                                "type": "object",
                                                "required": [
                                                  "mapToName"
                                                ],
                                                "properties": {
                                                  "mapToName": {
                                                    "type": "string"
                                                  },
                                                  "mapToDisplayName": {
                                                    "type": "string"
                                                  },
                                                  "default": {
                                                    "type": "string"
                                                  },
                                                  "prompt": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "optionalFields": {
                                          "type": "array",
                                          "items": {
                                            "title": "Integration Field",
                                            "oneOf": [
                                              {
                                                "title": "Integration Field Existent",
                                                "type": "object",
                                                "required": [
                                                  "fieldName"
                                                ],
                                                "properties": {
                                                  "fieldName": {
                                                    "type": "string"
                                                  },
                                                  "mapToName": {
                                                    "type": "string",
                                                    "description": "The field name to map to.",
                                                    "example": "account_id",
                                                    "x-go-type-skip-optional-pointer": true
                                                  },
                                                  "mapToDisplayName": {
                                                    "type": "string",
                                                    "description": "The display name to map to.",
                                                    "example": "Account ID",
                                                    "x-go-type-skip-optional-pointer": true
                                                  }
                                                }
                                              },
                                              {
                                                "title": "Integration Field Mapping",
                                                "type": "object",
                                                "required": [
                                                  "mapToName"
                                                ],
                                                "properties": {
                                                  "mapToName": {
                                                    "type": "string"
                                                  },
                                                  "mapToDisplayName": {
                                                    "type": "string"
                                                  },
                                                  "default": {
                                                    "type": "string"
                                                  },
                                                  "prompt": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "optionalFieldsAuto": {
                                          "title": "Optional Fields Auto Option",
                                          "type": "string",
                                          "enum": [
                                            "all"
                                          ]
                                        },
                                        "backfill": {
                                          "title": "Backfill",
                                          "type": "object",
                                          "required": [
                                            "defaultPeriod"
                                          ],
                                          "properties": {
                                            "defaultPeriod": {
                                              "title": "Default Period",
                                              "type": "object",
                                              "properties": {
                                                "days": {
                                                  "type": "integer",
                                                  "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                                  "minimum": 0,
                                                  "example": 30,
                                                  "x-oapi-codegen-extra-tags": {
                                                    "validate": "required_without=FullHistory,omitempty,min=0"
                                                  }
                                                },
                                                "fullHistory": {
                                                  "type": "boolean",
                                                  "description": "If true, backfill all history. Required if days is not set.",
                                                  "example": false,
                                                  "x-oapi-codegen-extra-tags": {
                                                    "validate": "required_without=Days"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "delivery": {
                                          "title": "Delivery",
                                          "type": "object",
                                          "properties": {
                                            "mode": {
                                              "type": "string",
                                              "default": "auto",
                                              "enum": [
                                                "onRequest",
                                                "auto"
                                              ],
                                              "description": "The data delivery mode for this object. If not specified, defaults to automatic."
                                            },
                                            "pageSize": {
                                              "type": "integer",
                                              "description": "The number of records to receive per data delivery.",
                                              "minimum": 50,
                                              "maximum": 500
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "write": {
                                "title": "Write Integration",
                                "type": "object",
                                "properties": {
                                  "objects": {
                                    "type": "array",
                                    "items": {
                                      "title": "Integration Write Object",
                                      "type": "object",
                                      "required": [
                                        "objectName"
                                      ],
                                      "properties": {
                                        "objectName": {
                                          "type": "string"
                                        },
                                        "inheritMapping": {
                                          "type": "boolean",
                                          "description": "If true, the write object will inherit the mapping from the read object. If false, the write object will have no mapping.",
                                          "example": true
                                        },
                                        "valueDefaults": {
                                          "title": "Value Defaults",
                                          "type": "object",
                                          "description": "Configuration to set default write values for object fields.",
                                          "properties": {
                                            "allowAnyFields": {
                                              "type": "boolean",
                                              "description": "If true, users can set default values for any field.",
                                              "example": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "proxy": {
                                "title": "Proxy Integration",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "subscribe": {
                                "title": "Subscribe Integration",
                                "type": "object",
                                "properties": {
                                  "objects": {
                                    "type": "array",
                                    "items": {
                                      "title": "Integration Subscribe Object",
                                      "type": "object",
                                      "required": [
                                        "objectName",
                                        "destination"
                                      ],
                                      "properties": {
                                        "objectName": {
                                          "type": "string"
                                        },
                                        "destination": {
                                          "type": "string"
                                        },
                                        "createEvent": {
                                          "type": "object",
                                          "properties": {
                                            "enabled": {
                                              "type": "string",
                                              "description": "If always, the integration will subscribe to create events.",
                                              "enum": [
                                                "always"
                                              ]
                                            }
                                          }
                                        },
                                        "updateEvent": {
                                          "type": "object",
                                          "properties": {
                                            "enabled": {
                                              "type": "string",
                                              "description": "If always, the integration will subscribe to update events.",
                                              "enum": [
                                                "always"
                                              ]
                                            },
                                            "requiredWatchFields": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "The fields that are required to be watched for updates.",
                                                "example": [
                                                  "name",
                                                  "domain"
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "deleteEvent": {
                                          "type": "object",
                                          "properties": {
                                            "enabled": {
                                              "type": "string",
                                              "description": "If always, the integration will subscribe to delete events.",
                                              "enum": [
                                                "always"
                                              ]
                                            }
                                          }
                                        },
                                        "associationChangeEvent": {
                                          "type": "object",
                                          "properties": {
                                            "enabled": {
                                              "type": "string",
                                              "description": "If always, the integration will subscribe to association change events.",
                                              "enum": [
                                                "always"
                                              ]
                                            },
                                            "includeFullRecords": {
                                              "type": "boolean",
                                              "description": "If true, the integration will include full records in the event payload."
                                            }
                                          }
                                        },
                                        "otherEvents": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "Non-standard events that the integration will subscribe to.",
                                            "example": [
                                              "object.merged",
                                              "object.restored"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/integrations/{integrationId}/revisions": {
      "post": {
        "summary": "Create a new revision",
        "operationId": "createRevision",
        "tags": [
          "Revision"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourceZipUrl": {
                    "type": "string",
                    "description": "URL of where a zip of the source files can be downloaded (e.g. Google Cloud Storage URL)."
                  },
                  "sourceYaml": {
                    "type": "string",
                    "description": "The source YAML file that defines the revision."
                  }
                },
                "description": "The source of the revision to create. One of sourceZipUrl or sourceYaml is required."
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "revision"
      }
    },
    "/projects/{projectIdOrName}/integrations/{integrationId}/revisions/{revisionId}:hydrate": {
      "get": {
        "summary": "Hydrate a revision",
        "description": "Hydrate a revision with information from the consumer's SaaS instance.",
        "operationId": "getHydratedRevision",
        "tags": [
          "Revision"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "revisionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hydrated revision",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Hydrated Revision",
                  "required": [
                    "content",
                    "createTime",
                    "id",
                    "specVersion"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The revision ID.",
                      "example": "revision-id-1"
                    },
                    "specVersion": {
                      "type": "string",
                      "description": "The spec version string.",
                      "example": "1.0.0"
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the revision was created.",
                      "format": "date-time"
                    },
                    "content": {
                      "title": "Hydrated Integration",
                      "type": "object",
                      "required": [
                        "name",
                        "provider"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        },
                        "provider": {
                          "type": "string"
                        },
                        "read": {
                          "title": "Hydrated Read Integration",
                          "type": "object",
                          "properties": {
                            "objects": {
                              "type": "array",
                              "items": {
                                "title": "Hydrated Integration Object",
                                "type": "object",
                                "required": [
                                  "objectName",
                                  "displayName",
                                  "destination",
                                  "schedule"
                                ],
                                "properties": {
                                  "objectName": {
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "type": "string"
                                  },
                                  "mapToName": {
                                    "type": "string",
                                    "description": "An object name to map to.",
                                    "example": "people",
                                    "x-go-type-skip-optional-pointer": true
                                  },
                                  "mapToDisplayName": {
                                    "type": "string",
                                    "description": "A display name to map to.",
                                    "example": "People",
                                    "x-go-type-skip-optional-pointer": true
                                  },
                                  "destination": {
                                    "type": "string"
                                  },
                                  "schedule": {
                                    "type": "string"
                                  },
                                  "requiredFields": {
                                    "type": "array",
                                    "items": {
                                      "title": "Hydrated Integration Field",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "fieldName",
                                            "displayName"
                                          ],
                                          "properties": {
                                            "fieldName": {
                                              "type": "string"
                                            },
                                            "displayName": {
                                              "type": "string"
                                            },
                                            "mapToName": {
                                              "type": "string",
                                              "description": "The field name to map to in the destination.",
                                              "example": "account_id",
                                              "x-go-type-skip-optional-pointer": true
                                            },
                                            "mapToDisplayName": {
                                              "type": "string",
                                              "description": "The display name to map to in the destination.",
                                              "example": "Account ID",
                                              "x-go-type-skip-optional-pointer": true
                                            }
                                          }
                                        },
                                        {
                                          "title": "Integration Field Mapping",
                                          "type": "object",
                                          "required": [
                                            "mapToName"
                                          ],
                                          "properties": {
                                            "mapToName": {
                                              "type": "string"
                                            },
                                            "mapToDisplayName": {
                                              "type": "string"
                                            },
                                            "default": {
                                              "type": "string"
                                            },
                                            "prompt": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "optionalFields": {
                                    "type": "array",
                                    "items": {
                                      "title": "Hydrated Integration Field",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "fieldName",
                                            "displayName"
                                          ],
                                          "properties": {
                                            "fieldName": {
                                              "type": "string"
                                            },
                                            "displayName": {
                                              "type": "string"
                                            },
                                            "mapToName": {
                                              "type": "string",
                                              "description": "The field name to map to in the destination.",
                                              "example": "account_id",
                                              "x-go-type-skip-optional-pointer": true
                                            },
                                            "mapToDisplayName": {
                                              "type": "string",
                                              "description": "The display name to map to in the destination.",
                                              "example": "Account ID",
                                              "x-go-type-skip-optional-pointer": true
                                            }
                                          }
                                        },
                                        {
                                          "title": "Integration Field Mapping",
                                          "type": "object",
                                          "required": [
                                            "mapToName"
                                          ],
                                          "properties": {
                                            "mapToName": {
                                              "type": "string"
                                            },
                                            "mapToDisplayName": {
                                              "type": "string"
                                            },
                                            "default": {
                                              "type": "string"
                                            },
                                            "prompt": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "optionalFieldsAuto": {
                                    "title": "Optional Fields Auto Option",
                                    "type": "string",
                                    "enum": [
                                      "all"
                                    ]
                                  },
                                  "allFields": {
                                    "description": "This is a list of all fields on the object for a particular SaaS instance, including their display names.",
                                    "type": "array",
                                    "items": {
                                      "title": "Hydrated Integration Field",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "fieldName",
                                            "displayName"
                                          ],
                                          "properties": {
                                            "fieldName": {
                                              "type": "string"
                                            },
                                            "displayName": {
                                              "type": "string"
                                            },
                                            "mapToName": {
                                              "type": "string",
                                              "description": "The field name to map to in the destination.",
                                              "example": "account_id",
                                              "x-go-type-skip-optional-pointer": true
                                            },
                                            "mapToDisplayName": {
                                              "type": "string",
                                              "description": "The display name to map to in the destination.",
                                              "example": "Account ID",
                                              "x-go-type-skip-optional-pointer": true
                                            }
                                          }
                                        },
                                        {
                                          "title": "Integration Field Mapping",
                                          "type": "object",
                                          "required": [
                                            "mapToName"
                                          ],
                                          "properties": {
                                            "mapToName": {
                                              "type": "string"
                                            },
                                            "mapToDisplayName": {
                                              "type": "string"
                                            },
                                            "default": {
                                              "type": "string"
                                            },
                                            "prompt": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "allFieldsMetadata": {
                                    "description": "This is a map of all fields on the object including their metadata (such as display name and type), the keys of the map are the field names.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "title": "Field Metadata",
                                      "type": "object",
                                      "required": [
                                        "fieldName",
                                        "displayName"
                                      ],
                                      "properties": {
                                        "fieldName": {
                                          "type": "string",
                                          "description": "The name of the field from the provider API.",
                                          "example": "Account ID"
                                        },
                                        "displayName": {
                                          "type": "string",
                                          "description": "The display name of the field from the provider API.",
                                          "example": "Account ID"
                                        },
                                        "valueType": {
                                          "type": "string",
                                          "description": "A normalized field type",
                                          "enum": [
                                            "string",
                                            "boolean",
                                            "singleSelect",
                                            "multiSelect",
                                            "date",
                                            "datetime",
                                            "int",
                                            "float",
                                            "other"
                                          ],
                                          "x-go-type-skip-optional-pointer": true
                                        },
                                        "providerType": {
                                          "type": "string",
                                          "description": "Raw field type from the provider API.",
                                          "example": "timestamp",
                                          "x-go-type-skip-optional-pointer": true
                                        },
                                        "readOnly": {
                                          "type": "boolean",
                                          "description": "Whether the field is read-only.",
                                          "example": false,
                                          "x-go-type-skip-optional-pointer": true
                                        },
                                        "values": {
                                          "type": "array",
                                          "description": "If the valueType is singleSelect or multiSelect, this is a list of possible values",
                                          "x-go-type-skip-optional-pointer": true,
                                          "items": {
                                            "title": "Field Value",
                                            "type": "object",
                                            "required": [
                                              "value",
                                              "displayValue"
                                            ],
                                            "description": "Represents a field value",
                                            "properties": {
                                              "value": {
                                                "type": "string",
                                                "description": "The internal value used by the system",
                                                "example": "outbound"
                                              },
                                              "displayValue": {
                                                "type": "string",
                                                "description": "The human-readable display value",
                                                "example": "Outbound Campaign"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "backfill": {
                                    "title": "Backfill",
                                    "type": "object",
                                    "required": [
                                      "defaultPeriod"
                                    ],
                                    "properties": {
                                      "defaultPeriod": {
                                        "title": "Default Period",
                                        "type": "object",
                                        "properties": {
                                          "days": {
                                            "type": "integer",
                                            "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                            "minimum": 0,
                                            "example": 30,
                                            "x-oapi-codegen-extra-tags": {
                                              "validate": "required_without=FullHistory,omitempty,min=0"
                                            }
                                          },
                                          "fullHistory": {
                                            "type": "boolean",
                                            "description": "If true, backfill all history. Required if days is not set.",
                                            "example": false,
                                            "x-oapi-codegen-extra-tags": {
                                              "validate": "required_without=Days"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "write": {
                          "type": "object",
                          "properties": {
                            "objects": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "objectName",
                                  "displayName"
                                ],
                                "properties": {
                                  "objectName": {
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "type": "string"
                                  },
                                  "valueDefaults": {
                                    "title": "Value Defaults",
                                    "type": "object",
                                    "description": "Configuration to set default write values for object fields.",
                                    "properties": {
                                      "allowAnyFields": {
                                        "type": "boolean",
                                        "description": "If true, users can set default values for any field.",
                                        "example": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "proxy": {
                          "title": "Hydrated Proxy Integration",
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/integrations/{integrationId}/installations": {
      "get": {
        "summary": "List installations",
        "operationId": "listInstallations",
        "tags": [
          "Installation"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupRef",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of installations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Installation",
                    "required": [
                      "config",
                      "connection",
                      "createTime",
                      "createdBy",
                      "healthStatus",
                      "id",
                      "integrationId",
                      "projectId"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The installation ID.",
                        "example": "installation-123"
                      },
                      "projectId": {
                        "type": "string",
                        "description": "The Ampersand project ID.",
                        "example": "project-456"
                      },
                      "integrationId": {
                        "type": "string",
                        "description": "The integration ID.",
                        "example": "integration-123"
                      },
                      "group": {
                        "title": "Group",
                        "required": [
                          "createTime",
                          "groupName",
                          "groupRef",
                          "projectId"
                        ],
                        "type": "object",
                        "properties": {
                          "groupRef": {
                            "type": "string",
                            "description": "The ID of the user group that has access to this installation.",
                            "example": "group-123"
                          },
                          "groupName": {
                            "type": "string",
                            "description": "The name of the user group that has access to this installation.",
                            "example": "Super Customer"
                          },
                          "projectId": {
                            "type": "string",
                            "description": "The Ampersand project ID.",
                            "example": "project-456"
                          },
                          "createTime": {
                            "type": "string",
                            "description": "The time the group was created.",
                            "format": "date-time",
                            "example": "2023-07-13T21:34:44.816Z"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "The time the group was last updated.",
                            "format": "date-time",
                            "example": "2023-07-13T21:34:44.816Z"
                          }
                        }
                      },
                      "healthStatus": {
                        "type": "string",
                        "description": "The health status of the installation (\"healthy\", \"unhealthy\").",
                        "example": "healthy"
                      },
                      "connection": {
                        "title": "Connection",
                        "required": [
                          "id",
                          "createTime",
                          "group",
                          "consumer",
                          "projectId",
                          "provider",
                          "authScheme",
                          "status"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The connection ID.",
                            "example": "connection-123"
                          },
                          "projectId": {
                            "type": "string",
                            "description": "The Ampersand project ID.",
                            "example": "project-456"
                          },
                          "provider": {
                            "type": "string",
                            "description": "The SaaS provider that this Connection is for.",
                            "example": "salesforce"
                          },
                          "providerApp": {
                            "title": "Provider App",
                            "required": [
                              "clientId",
                              "createTime",
                              "id",
                              "projectId",
                              "provider"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The provider app ID.",
                                "example": "provider-app-123"
                              },
                              "projectId": {
                                "type": "string",
                                "description": "The Ampersand project ID.",
                                "example": "project-456"
                              },
                              "externalRef": {
                                "type": "string",
                                "description": "The ID used by the provider to identify the app (optional).",
                                "example": "external-id-123"
                              },
                              "provider": {
                                "type": "string",
                                "description": "The SaaS provider that this app connects to.",
                                "example": "salesforce"
                              },
                              "clientId": {
                                "type": "string",
                                "description": "The OAuth client ID for this app.",
                                "example": "client-id-123"
                              },
                              "scopes": {
                                "type": "array",
                                "description": "The OAuth scopes for this app.",
                                "items": {
                                  "type": "string",
                                  "example": [
                                    "oauth",
                                    "offline",
                                    "crm.read"
                                  ]
                                }
                              },
                              "createTime": {
                                "type": "string",
                                "description": "The time the provider app was created.",
                                "format": "date-time"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "The time the provider app was updated.",
                                "format": "date-time"
                              }
                            }
                          },
                          "group": {
                            "title": "Group",
                            "required": [
                              "createTime",
                              "groupName",
                              "groupRef",
                              "projectId"
                            ],
                            "type": "object",
                            "properties": {
                              "groupRef": {
                                "type": "string",
                                "description": "The ID of the user group that has access to this installation.",
                                "example": "group-123"
                              },
                              "groupName": {
                                "type": "string",
                                "description": "The name of the user group that has access to this installation.",
                                "example": "Super Customer"
                              },
                              "projectId": {
                                "type": "string",
                                "description": "The Ampersand project ID.",
                                "example": "project-456"
                              },
                              "createTime": {
                                "type": "string",
                                "description": "The time the group was created.",
                                "format": "date-time",
                                "example": "2023-07-13T21:34:44.816Z"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "The time the group was last updated.",
                                "format": "date-time",
                                "example": "2023-07-13T21:34:44.816Z"
                              }
                            }
                          },
                          "consumer": {
                            "title": "Consumer",
                            "required": [
                              "consumerName",
                              "consumerRef",
                              "createTime",
                              "projectId"
                            ],
                            "type": "object",
                            "properties": {
                              "consumerRef": {
                                "type": "string",
                                "description": "The consumer reference.",
                                "example": "consumer-123"
                              },
                              "consumerName": {
                                "type": "string",
                                "description": "The name of the consumer.",
                                "example": "Super Customer"
                              },
                              "projectId": {
                                "type": "string",
                                "description": "The Ampersand project ID.",
                                "example": "project-456"
                              },
                              "createTime": {
                                "type": "string",
                                "description": "The time the consumer was created.",
                                "format": "date-time",
                                "example": "2023-07-13T21:34:44.816Z"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "The time the consumer was last updated.",
                                "format": "date-time",
                                "example": "2023-07-13T21:34:44.816Z"
                              }
                            }
                          },
                          "providerWorkspaceRef": {
                            "type": "string",
                            "description": "If available, the identifier for the provider workspace (e.g. \"salesforce-instance-domain\")",
                            "example": "provider-workspace-123"
                          },
                          "providerConsumerRef": {
                            "type": "string",
                            "description": "If available, the ID that Salesforce/Hubspot uses to identify this user (e.g. Salesforce has IDs in the form of https://login.salesforce.com/id/00D4x0000019CQTEA2/0054x000000orJ4AA)",
                            "example": "provider-consumer-123"
                          },
                          "createTime": {
                            "type": "string",
                            "description": "The time the connection was created.",
                            "format": "date-time",
                            "example": "2023-07-13T21:34:44.816Z"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "The time the connection was last updated.",
                            "format": "date-time",
                            "example": "2023-07-13T21:34:44.816Z"
                          },
                          "authScheme": {
                            "type": "string",
                            "description": "The authentication scheme used for this connection.",
                            "example": "oauth2/authorizationCode",
                            "enum": [
                              "none",
                              "apiKey",
                              "basic",
                              "oauth2/authorizationCode",
                              "oauth2/authorizationCodePKCE",
                              "oauth2/clientCredentials",
                              "oauth2/password"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the connection.",
                            "example": "working",
                            "enum": [
                              "created",
                              "working",
                              "bad_credentials"
                            ]
                          },
                          "oauth2AuthorizationCode": {
                            "title": "OAuth2 AuthorizationCode Token",
                            "type": "object",
                            "properties": {
                              "accessToken": {
                                "type": "object",
                                "required": [
                                  "token"
                                ],
                                "description": "The access token for the connection.",
                                "properties": {
                                  "token": {
                                    "type": "string"
                                  },
                                  "issuedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-04-22T18:55:28.456076Z"
                                  },
                                  "expiresAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-10-22T18:55:28.456076Z"
                                  }
                                }
                              },
                              "refreshToken": {
                                "type": "object",
                                "required": [
                                  "token"
                                ],
                                "description": "The refresh token to use for the connection.",
                                "properties": {
                                  "token": {
                                    "type": "string"
                                  },
                                  "issuedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-04-22T18:55:28.456076Z"
                                  },
                                  "expiresAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2024-10-22T18:55:28.456076Z"
                                  }
                                }
                              },
                              "scopes": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "The scopes for the tokens."
                              }
                            }
                          },
                          "apiKey": {
                            "type": "string",
                            "description": "The API key used while making the connection.",
                            "example": "api-key-123"
                          }
                        }
                      },
                      "createTime": {
                        "type": "string",
                        "description": "The time the integration was first installed.",
                        "format": "date-time"
                      },
                      "createdBy": {
                        "type": "string",
                        "description": "The person who did the installation, in the format of \"consumer:{consumer-id}\".",
                        "example": "consumer:consumer-123"
                      },
                      "updateTime": {
                        "type": "string",
                        "description": "The time the installation was last updated with a new config.",
                        "format": "date-time"
                      },
                      "config": {
                        "title": "Config",
                        "required": [
                          "content",
                          "createTime",
                          "createdBy",
                          "id",
                          "revisionId"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The config ID.",
                            "example": "config-123"
                          },
                          "revisionId": {
                            "type": "string",
                            "description": "The ID of the revision that this config is based on.",
                            "example": "revision-123"
                          },
                          "createTime": {
                            "type": "string",
                            "description": "The time the config was created.",
                            "format": "date-time"
                          },
                          "createdBy": {
                            "type": "string",
                            "description": "The person who created the config, in the format of \"consumer:{consumer-id}\" or \"builder:{builder-id}\".",
                            "example": "builder:builder-123"
                          },
                          "content": {
                            "title": "Config Content",
                            "allOf": [
                              {
                                "title": "Base Config Content",
                                "type": "object",
                                "properties": {
                                  "provider": {
                                    "description": "The SaaS API that we are integrating with.",
                                    "example": "salesforce",
                                    "type": "string"
                                  },
                                  "read": {
                                    "title": "Base Read Config",
                                    "type": "object",
                                    "properties": {
                                      "objects": {
                                        "type": "object",
                                        "description": "This is a map of object names to their configuration.",
                                        "additionalProperties": {
                                          "title": "Base Read Config Object",
                                          "type": "object",
                                          "properties": {
                                            "objectName": {
                                              "description": "The name of the object to read from.",
                                              "example": "account",
                                              "type": "string",
                                              "x-oapi-codegen-extra-tags": {
                                                "validate": "required"
                                              }
                                            },
                                            "schedule": {
                                              "type": "string",
                                              "description": "The schedule for reading the object, in cron syntax.",
                                              "example": "*/15 * * * *"
                                            },
                                            "destination": {
                                              "description": "The name of the destination that the result should be sent to.",
                                              "example": "accountWebhook",
                                              "type": "string"
                                            },
                                            "selectedFields": {
                                              "type": "object",
                                              "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                                              "example": "{ phone: true, fax: true }",
                                              "additionalProperties": {
                                                "type": "boolean"
                                              }
                                            },
                                            "selectedValueMappings": {
                                              "type": "object",
                                              "description": "This is a map of field names to their value mappings.",
                                              "example": {
                                                "stage": {
                                                  "open": "scheduled",
                                                  "closedWon": "won",
                                                  "closedLost": "lost"
                                                }
                                              },
                                              "x-go-type-skip-optional-pointer": true,
                                              "additionalProperties": {
                                                "title": "Selected Value Mappings",
                                                "type": "object",
                                                "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                                                "example": {
                                                  "open": "scheduled",
                                                  "closedWon": "won",
                                                  "closedLost": "lost"
                                                },
                                                "x-go-type-skip-optional-pointer": true,
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "selectedFieldMappings": {
                                              "type": "object",
                                              "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                                              "example": "{ phoneNumber: phone, faxNumber: fax }",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "selectedFieldsAuto": {
                                              "title": "Selected Fields Auto Config",
                                              "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                                              "type": "string",
                                              "enum": [
                                                "all"
                                              ],
                                              "x-enum-varnames": [
                                                "SelectedFieldsAll"
                                              ]
                                            },
                                            "backfill": {
                                              "title": "Backfill Config",
                                              "type": "object",
                                              "required": [
                                                "defaultPeriod"
                                              ],
                                              "properties": {
                                                "defaultPeriod": {
                                                  "title": "Default Period Config",
                                                  "type": "object",
                                                  "properties": {
                                                    "days": {
                                                      "type": "integer",
                                                      "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                                      "minimum": 0,
                                                      "example": 30,
                                                      "x-oapi-codegen-extra-tags": {
                                                        "validate": "required_without=FullHistory,omitempty,min=0"
                                                      }
                                                    },
                                                    "fullHistory": {
                                                      "type": "boolean",
                                                      "description": "If true, backfill all history. Required if days is not set.",
                                                      "example": false,
                                                      "x-oapi-codegen-extra-tags": {
                                                        "validate": "required_without=Days"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "write": {
                                    "title": "Base Write Config",
                                    "type": "object",
                                    "properties": {
                                      "objects": {
                                        "type": "object",
                                        "description": "This is a map of object names to their configuration.",
                                        "additionalProperties": {
                                          "title": "Base Write Config Object",
                                          "type": "object",
                                          "required": [
                                            "objectName"
                                          ],
                                          "properties": {
                                            "objectName": {
                                              "description": "The name of the object to write to.",
                                              "example": "account",
                                              "type": "string",
                                              "x-oapi-codegen-extra-tags": {
                                                "validate": "required"
                                              }
                                            },
                                            "selectedValueDefaults": {
                                              "type": "object",
                                              "deprecated": true,
                                              "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                                              "x-go-type-skip-optional-pointer": true,
                                              "additionalProperties": {
                                                "title": "Value Default (Legacy)",
                                                "deprecated": true,
                                                "x-go-type": "any",
                                                "oneOf": [
                                                  {
                                                    "title": "Value Default String",
                                                    "type": "object",
                                                    "required": [
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string",
                                                        "description": "The value to be used as a default."
                                                      },
                                                      "applyOnUpdate": {
                                                        "type": "string",
                                                        "enum": [
                                                          "always",
                                                          "never"
                                                        ],
                                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "title": "Value Default Integer",
                                                    "type": "object",
                                                    "required": [
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "integer",
                                                        "description": "The value to be used as a default."
                                                      },
                                                      "applyOnUpdate": {
                                                        "type": "string",
                                                        "enum": [
                                                          "always",
                                                          "never"
                                                        ],
                                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "title": "Value Default Boolean",
                                                    "type": "object",
                                                    "required": [
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "boolean",
                                                        "description": "The value to be used as a default."
                                                      },
                                                      "applyOnUpdate": {
                                                        "type": "string",
                                                        "enum": [
                                                          "always",
                                                          "never"
                                                        ],
                                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "selectedFieldSettings": {
                                              "type": "object",
                                              "description": "This is a map of field names to their settings.",
                                              "x-go-type-skip-optional-pointer": true,
                                              "additionalProperties": {
                                                "title": "Field setting",
                                                "type": "object",
                                                "properties": {
                                                  "default": {
                                                    "title": "Default value for a field",
                                                    "description": "Only use one of stringValue, integerValue, booleanValue.",
                                                    "type": "object",
                                                    "properties": {
                                                      "stringValue": {
                                                        "type": "string",
                                                        "description": "The default string value to apply to a field"
                                                      },
                                                      "integerValue": {
                                                        "type": "integer",
                                                        "description": "The default integer value to apply to a field"
                                                      },
                                                      "booleanValue": {
                                                        "type": "boolean",
                                                        "description": "The default boolean value to apply to a field"
                                                      }
                                                    }
                                                  },
                                                  "writeOnCreate": {
                                                    "type": "string",
                                                    "enum": [
                                                      "always",
                                                      "never"
                                                    ],
                                                    "default": "always",
                                                    "x-go-type-skip-optional-pointer": true,
                                                    "description": "Whether the default value should be applied when creating a record."
                                                  },
                                                  "writeOnUpdate": {
                                                    "type": "string",
                                                    "enum": [
                                                      "always",
                                                      "never"
                                                    ],
                                                    "default": "always",
                                                    "x-go-type-skip-optional-pointer": true,
                                                    "description": "Whether the default value should be applied when updating a record."
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "proxy": {
                                    "title": "Base Proxy Config",
                                    "type": "object",
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "provider"
                                ],
                                "properties": {
                                  "read": {
                                    "x-go-type": "ReadConfig"
                                  },
                                  "write": {
                                    "x-go-type": "WriteConfig"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new installation",
        "operationId": "createInstallation",
        "tags": [
          "Installation"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "config",
                  "groupRef"
                ],
                "type": "object",
                "properties": {
                  "groupRef": {
                    "type": "string",
                    "description": "The ID of the user group that has access to this installation."
                  },
                  "connectionId": {
                    "type": "string",
                    "description": "The ID of the SaaS connection tied to this installation. If omitted the default connection for this group will be used."
                  },
                  "config": {
                    "required": [
                      "content"
                    ],
                    "type": "object",
                    "properties": {
                      "revisionId": {
                        "type": "string",
                        "description": "The ID of the revision that this config is based on. If omitted, the latest revision is assumed."
                      },
                      "createdBy": {
                        "type": "string",
                        "description": "The person who created the config, in the format of \"consumer:{consumer-id}\" or \"builder:{builder-id}\".",
                        "default": "api:create-installation"
                      },
                      "content": {
                        "title": "Config Content",
                        "allOf": [
                          {
                            "title": "Base Config Content",
                            "type": "object",
                            "properties": {
                              "provider": {
                                "description": "The SaaS API that we are integrating with.",
                                "example": "salesforce",
                                "type": "string"
                              },
                              "read": {
                                "title": "Base Read Config",
                                "type": "object",
                                "properties": {
                                  "objects": {
                                    "type": "object",
                                    "description": "This is a map of object names to their configuration.",
                                    "additionalProperties": {
                                      "title": "Base Read Config Object",
                                      "type": "object",
                                      "properties": {
                                        "objectName": {
                                          "description": "The name of the object to read from.",
                                          "example": "account",
                                          "type": "string",
                                          "x-oapi-codegen-extra-tags": {
                                            "validate": "required"
                                          }
                                        },
                                        "schedule": {
                                          "type": "string",
                                          "description": "The schedule for reading the object, in cron syntax.",
                                          "example": "*/15 * * * *"
                                        },
                                        "destination": {
                                          "description": "The name of the destination that the result should be sent to.",
                                          "example": "accountWebhook",
                                          "type": "string"
                                        },
                                        "selectedFields": {
                                          "type": "object",
                                          "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                                          "example": "{ phone: true, fax: true }",
                                          "additionalProperties": {
                                            "type": "boolean"
                                          }
                                        },
                                        "selectedValueMappings": {
                                          "type": "object",
                                          "description": "This is a map of field names to their value mappings.",
                                          "example": {
                                            "stage": {
                                              "open": "scheduled",
                                              "closedWon": "won",
                                              "closedLost": "lost"
                                            }
                                          },
                                          "x-go-type-skip-optional-pointer": true,
                                          "additionalProperties": {
                                            "title": "Selected Value Mappings",
                                            "type": "object",
                                            "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                                            "example": {
                                              "open": "scheduled",
                                              "closedWon": "won",
                                              "closedLost": "lost"
                                            },
                                            "x-go-type-skip-optional-pointer": true,
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "selectedFieldMappings": {
                                          "type": "object",
                                          "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                                          "example": "{ phoneNumber: phone, faxNumber: fax }",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "selectedFieldsAuto": {
                                          "title": "Selected Fields Auto Config",
                                          "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                                          "type": "string",
                                          "enum": [
                                            "all"
                                          ],
                                          "x-enum-varnames": [
                                            "SelectedFieldsAll"
                                          ]
                                        },
                                        "backfill": {
                                          "title": "Backfill Config",
                                          "type": "object",
                                          "required": [
                                            "defaultPeriod"
                                          ],
                                          "properties": {
                                            "defaultPeriod": {
                                              "title": "Default Period Config",
                                              "type": "object",
                                              "properties": {
                                                "days": {
                                                  "type": "integer",
                                                  "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                                  "minimum": 0,
                                                  "example": 30,
                                                  "x-oapi-codegen-extra-tags": {
                                                    "validate": "required_without=FullHistory,omitempty,min=0"
                                                  }
                                                },
                                                "fullHistory": {
                                                  "type": "boolean",
                                                  "description": "If true, backfill all history. Required if days is not set.",
                                                  "example": false,
                                                  "x-oapi-codegen-extra-tags": {
                                                    "validate": "required_without=Days"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "write": {
                                "title": "Base Write Config",
                                "type": "object",
                                "properties": {
                                  "objects": {
                                    "type": "object",
                                    "description": "This is a map of object names to their configuration.",
                                    "additionalProperties": {
                                      "title": "Base Write Config Object",
                                      "type": "object",
                                      "required": [
                                        "objectName"
                                      ],
                                      "properties": {
                                        "objectName": {
                                          "description": "The name of the object to write to.",
                                          "example": "account",
                                          "type": "string",
                                          "x-oapi-codegen-extra-tags": {
                                            "validate": "required"
                                          }
                                        },
                                        "selectedValueDefaults": {
                                          "type": "object",
                                          "deprecated": true,
                                          "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                                          "x-go-type-skip-optional-pointer": true,
                                          "additionalProperties": {
                                            "title": "Value Default (Legacy)",
                                            "deprecated": true,
                                            "x-go-type": "any",
                                            "oneOf": [
                                              {
                                                "title": "Value Default String",
                                                "type": "object",
                                                "required": [
                                                  "value"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "string",
                                                    "description": "The value to be used as a default."
                                                  },
                                                  "applyOnUpdate": {
                                                    "type": "string",
                                                    "enum": [
                                                      "always",
                                                      "never"
                                                    ],
                                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                  }
                                                }
                                              },
                                              {
                                                "title": "Value Default Integer",
                                                "type": "object",
                                                "required": [
                                                  "value"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "integer",
                                                    "description": "The value to be used as a default."
                                                  },
                                                  "applyOnUpdate": {
                                                    "type": "string",
                                                    "enum": [
                                                      "always",
                                                      "never"
                                                    ],
                                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                  }
                                                }
                                              },
                                              {
                                                "title": "Value Default Boolean",
                                                "type": "object",
                                                "required": [
                                                  "value"
                                                ],
                                                "properties": {
                                                  "value": {
                                                    "type": "boolean",
                                                    "description": "The value to be used as a default."
                                                  },
                                                  "applyOnUpdate": {
                                                    "type": "string",
                                                    "enum": [
                                                      "always",
                                                      "never"
                                                    ],
                                                    "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        },
                                        "selectedFieldSettings": {
                                          "type": "object",
                                          "description": "This is a map of field names to their settings.",
                                          "x-go-type-skip-optional-pointer": true,
                                          "additionalProperties": {
                                            "title": "Field setting",
                                            "type": "object",
                                            "properties": {
                                              "default": {
                                                "title": "Default value for a field",
                                                "description": "Only use one of stringValue, integerValue, booleanValue.",
                                                "type": "object",
                                                "properties": {
                                                  "stringValue": {
                                                    "type": "string",
                                                    "description": "The default string value to apply to a field"
                                                  },
                                                  "integerValue": {
                                                    "type": "integer",
                                                    "description": "The default integer value to apply to a field"
                                                  },
                                                  "booleanValue": {
                                                    "type": "boolean",
                                                    "description": "The default boolean value to apply to a field"
                                                  }
                                                }
                                              },
                                              "writeOnCreate": {
                                                "type": "string",
                                                "enum": [
                                                  "always",
                                                  "never"
                                                ],
                                                "default": "always",
                                                "x-go-type-skip-optional-pointer": true,
                                                "description": "Whether the default value should be applied when creating a record."
                                              },
                                              "writeOnUpdate": {
                                                "type": "string",
                                                "enum": [
                                                  "always",
                                                  "never"
                                                ],
                                                "default": "always",
                                                "x-go-type-skip-optional-pointer": true,
                                                "description": "Whether the default value should be applied when updating a record."
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "proxy": {
                                "title": "Base Proxy Config",
                                "type": "object",
                                "properties": {
                                  "enabled": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "provider"
                            ],
                            "properties": {
                              "read": {
                                "x-go-type": "ReadConfig"
                              },
                              "write": {
                                "x-go-type": "WriteConfig"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "description": "The config of the installation."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Installation",
                  "required": [
                    "config",
                    "connection",
                    "createTime",
                    "createdBy",
                    "healthStatus",
                    "id",
                    "integrationId",
                    "projectId"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The installation ID.",
                      "example": "installation-123"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The Ampersand project ID.",
                      "example": "project-456"
                    },
                    "integrationId": {
                      "type": "string",
                      "description": "The integration ID.",
                      "example": "integration-123"
                    },
                    "group": {
                      "title": "Group",
                      "required": [
                        "createTime",
                        "groupName",
                        "groupRef",
                        "projectId"
                      ],
                      "type": "object",
                      "properties": {
                        "groupRef": {
                          "type": "string",
                          "description": "The ID of the user group that has access to this installation.",
                          "example": "group-123"
                        },
                        "groupName": {
                          "type": "string",
                          "description": "The name of the user group that has access to this installation.",
                          "example": "Super Customer"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the group was created.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the group was last updated.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        }
                      }
                    },
                    "healthStatus": {
                      "type": "string",
                      "description": "The health status of the installation (\"healthy\", \"unhealthy\").",
                      "example": "healthy"
                    },
                    "connection": {
                      "title": "Connection",
                      "required": [
                        "id",
                        "createTime",
                        "group",
                        "consumer",
                        "projectId",
                        "provider",
                        "authScheme",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The connection ID.",
                          "example": "connection-123"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "provider": {
                          "type": "string",
                          "description": "The SaaS provider that this Connection is for.",
                          "example": "salesforce"
                        },
                        "providerApp": {
                          "title": "Provider App",
                          "required": [
                            "clientId",
                            "createTime",
                            "id",
                            "projectId",
                            "provider"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The provider app ID.",
                              "example": "provider-app-123"
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Ampersand project ID.",
                              "example": "project-456"
                            },
                            "externalRef": {
                              "type": "string",
                              "description": "The ID used by the provider to identify the app (optional).",
                              "example": "external-id-123"
                            },
                            "provider": {
                              "type": "string",
                              "description": "The SaaS provider that this app connects to.",
                              "example": "salesforce"
                            },
                            "clientId": {
                              "type": "string",
                              "description": "The OAuth client ID for this app.",
                              "example": "client-id-123"
                            },
                            "scopes": {
                              "type": "array",
                              "description": "The OAuth scopes for this app.",
                              "items": {
                                "type": "string",
                                "example": [
                                  "oauth",
                                  "offline",
                                  "crm.read"
                                ]
                              }
                            },
                            "createTime": {
                              "type": "string",
                              "description": "The time the provider app was created.",
                              "format": "date-time"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "The time the provider app was updated.",
                              "format": "date-time"
                            }
                          }
                        },
                        "group": {
                          "title": "Group",
                          "required": [
                            "createTime",
                            "groupName",
                            "groupRef",
                            "projectId"
                          ],
                          "type": "object",
                          "properties": {
                            "groupRef": {
                              "type": "string",
                              "description": "The ID of the user group that has access to this installation.",
                              "example": "group-123"
                            },
                            "groupName": {
                              "type": "string",
                              "description": "The name of the user group that has access to this installation.",
                              "example": "Super Customer"
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Ampersand project ID.",
                              "example": "project-456"
                            },
                            "createTime": {
                              "type": "string",
                              "description": "The time the group was created.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "The time the group was last updated.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            }
                          }
                        },
                        "consumer": {
                          "title": "Consumer",
                          "required": [
                            "consumerName",
                            "consumerRef",
                            "createTime",
                            "projectId"
                          ],
                          "type": "object",
                          "properties": {
                            "consumerRef": {
                              "type": "string",
                              "description": "The consumer reference.",
                              "example": "consumer-123"
                            },
                            "consumerName": {
                              "type": "string",
                              "description": "The name of the consumer.",
                              "example": "Super Customer"
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Ampersand project ID.",
                              "example": "project-456"
                            },
                            "createTime": {
                              "type": "string",
                              "description": "The time the consumer was created.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "The time the consumer was last updated.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            }
                          }
                        },
                        "providerWorkspaceRef": {
                          "type": "string",
                          "description": "If available, the identifier for the provider workspace (e.g. \"salesforce-instance-domain\")",
                          "example": "provider-workspace-123"
                        },
                        "providerConsumerRef": {
                          "type": "string",
                          "description": "If available, the ID that Salesforce/Hubspot uses to identify this user (e.g. Salesforce has IDs in the form of https://login.salesforce.com/id/00D4x0000019CQTEA2/0054x000000orJ4AA)",
                          "example": "provider-consumer-123"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the connection was created.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the connection was last updated.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "authScheme": {
                          "type": "string",
                          "description": "The authentication scheme used for this connection.",
                          "example": "oauth2/authorizationCode",
                          "enum": [
                            "none",
                            "apiKey",
                            "basic",
                            "oauth2/authorizationCode",
                            "oauth2/authorizationCodePKCE",
                            "oauth2/clientCredentials",
                            "oauth2/password"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the connection.",
                          "example": "working",
                          "enum": [
                            "created",
                            "working",
                            "bad_credentials"
                          ]
                        },
                        "oauth2AuthorizationCode": {
                          "title": "OAuth2 AuthorizationCode Token",
                          "type": "object",
                          "properties": {
                            "accessToken": {
                              "type": "object",
                              "required": [
                                "token"
                              ],
                              "description": "The access token for the connection.",
                              "properties": {
                                "token": {
                                  "type": "string"
                                },
                                "issuedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-04-22T18:55:28.456076Z"
                                },
                                "expiresAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-10-22T18:55:28.456076Z"
                                }
                              }
                            },
                            "refreshToken": {
                              "type": "object",
                              "required": [
                                "token"
                              ],
                              "description": "The refresh token to use for the connection.",
                              "properties": {
                                "token": {
                                  "type": "string"
                                },
                                "issuedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-04-22T18:55:28.456076Z"
                                },
                                "expiresAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-10-22T18:55:28.456076Z"
                                }
                              }
                            },
                            "scopes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "The scopes for the tokens."
                            }
                          }
                        },
                        "apiKey": {
                          "type": "string",
                          "description": "The API key used while making the connection.",
                          "example": "api-key-123"
                        }
                      }
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the integration was first installed.",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The person who did the installation, in the format of \"consumer:{consumer-id}\".",
                      "example": "consumer:consumer-123"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the installation was last updated with a new config.",
                      "format": "date-time"
                    },
                    "config": {
                      "title": "Config",
                      "required": [
                        "content",
                        "createTime",
                        "createdBy",
                        "id",
                        "revisionId"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The config ID.",
                          "example": "config-123"
                        },
                        "revisionId": {
                          "type": "string",
                          "description": "The ID of the revision that this config is based on.",
                          "example": "revision-123"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the config was created.",
                          "format": "date-time"
                        },
                        "createdBy": {
                          "type": "string",
                          "description": "The person who created the config, in the format of \"consumer:{consumer-id}\" or \"builder:{builder-id}\".",
                          "example": "builder:builder-123"
                        },
                        "content": {
                          "title": "Config Content",
                          "allOf": [
                            {
                              "title": "Base Config Content",
                              "type": "object",
                              "properties": {
                                "provider": {
                                  "description": "The SaaS API that we are integrating with.",
                                  "example": "salesforce",
                                  "type": "string"
                                },
                                "read": {
                                  "title": "Base Read Config",
                                  "type": "object",
                                  "properties": {
                                    "objects": {
                                      "type": "object",
                                      "description": "This is a map of object names to their configuration.",
                                      "additionalProperties": {
                                        "title": "Base Read Config Object",
                                        "type": "object",
                                        "properties": {
                                          "objectName": {
                                            "description": "The name of the object to read from.",
                                            "example": "account",
                                            "type": "string",
                                            "x-oapi-codegen-extra-tags": {
                                              "validate": "required"
                                            }
                                          },
                                          "schedule": {
                                            "type": "string",
                                            "description": "The schedule for reading the object, in cron syntax.",
                                            "example": "*/15 * * * *"
                                          },
                                          "destination": {
                                            "description": "The name of the destination that the result should be sent to.",
                                            "example": "accountWebhook",
                                            "type": "string"
                                          },
                                          "selectedFields": {
                                            "type": "object",
                                            "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                                            "example": "{ phone: true, fax: true }",
                                            "additionalProperties": {
                                              "type": "boolean"
                                            }
                                          },
                                          "selectedValueMappings": {
                                            "type": "object",
                                            "description": "This is a map of field names to their value mappings.",
                                            "example": {
                                              "stage": {
                                                "open": "scheduled",
                                                "closedWon": "won",
                                                "closedLost": "lost"
                                              }
                                            },
                                            "x-go-type-skip-optional-pointer": true,
                                            "additionalProperties": {
                                              "title": "Selected Value Mappings",
                                              "type": "object",
                                              "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                                              "example": {
                                                "open": "scheduled",
                                                "closedWon": "won",
                                                "closedLost": "lost"
                                              },
                                              "x-go-type-skip-optional-pointer": true,
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "selectedFieldMappings": {
                                            "type": "object",
                                            "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                                            "example": "{ phoneNumber: phone, faxNumber: fax }",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "selectedFieldsAuto": {
                                            "title": "Selected Fields Auto Config",
                                            "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                                            "type": "string",
                                            "enum": [
                                              "all"
                                            ],
                                            "x-enum-varnames": [
                                              "SelectedFieldsAll"
                                            ]
                                          },
                                          "backfill": {
                                            "title": "Backfill Config",
                                            "type": "object",
                                            "required": [
                                              "defaultPeriod"
                                            ],
                                            "properties": {
                                              "defaultPeriod": {
                                                "title": "Default Period Config",
                                                "type": "object",
                                                "properties": {
                                                  "days": {
                                                    "type": "integer",
                                                    "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                                    "minimum": 0,
                                                    "example": 30,
                                                    "x-oapi-codegen-extra-tags": {
                                                      "validate": "required_without=FullHistory,omitempty,min=0"
                                                    }
                                                  },
                                                  "fullHistory": {
                                                    "type": "boolean",
                                                    "description": "If true, backfill all history. Required if days is not set.",
                                                    "example": false,
                                                    "x-oapi-codegen-extra-tags": {
                                                      "validate": "required_without=Days"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "write": {
                                  "title": "Base Write Config",
                                  "type": "object",
                                  "properties": {
                                    "objects": {
                                      "type": "object",
                                      "description": "This is a map of object names to their configuration.",
                                      "additionalProperties": {
                                        "title": "Base Write Config Object",
                                        "type": "object",
                                        "required": [
                                          "objectName"
                                        ],
                                        "properties": {
                                          "objectName": {
                                            "description": "The name of the object to write to.",
                                            "example": "account",
                                            "type": "string",
                                            "x-oapi-codegen-extra-tags": {
                                              "validate": "required"
                                            }
                                          },
                                          "selectedValueDefaults": {
                                            "type": "object",
                                            "deprecated": true,
                                            "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                                            "x-go-type-skip-optional-pointer": true,
                                            "additionalProperties": {
                                              "title": "Value Default (Legacy)",
                                              "deprecated": true,
                                              "x-go-type": "any",
                                              "oneOf": [
                                                {
                                                  "title": "Value Default String",
                                                  "type": "object",
                                                  "required": [
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "string",
                                                      "description": "The value to be used as a default."
                                                    },
                                                    "applyOnUpdate": {
                                                      "type": "string",
                                                      "enum": [
                                                        "always",
                                                        "never"
                                                      ],
                                                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                    }
                                                  }
                                                },
                                                {
                                                  "title": "Value Default Integer",
                                                  "type": "object",
                                                  "required": [
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "integer",
                                                      "description": "The value to be used as a default."
                                                    },
                                                    "applyOnUpdate": {
                                                      "type": "string",
                                                      "enum": [
                                                        "always",
                                                        "never"
                                                      ],
                                                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                    }
                                                  }
                                                },
                                                {
                                                  "title": "Value Default Boolean",
                                                  "type": "object",
                                                  "required": [
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "boolean",
                                                      "description": "The value to be used as a default."
                                                    },
                                                    "applyOnUpdate": {
                                                      "type": "string",
                                                      "enum": [
                                                        "always",
                                                        "never"
                                                      ],
                                                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "selectedFieldSettings": {
                                            "type": "object",
                                            "description": "This is a map of field names to their settings.",
                                            "x-go-type-skip-optional-pointer": true,
                                            "additionalProperties": {
                                              "title": "Field setting",
                                              "type": "object",
                                              "properties": {
                                                "default": {
                                                  "title": "Default value for a field",
                                                  "description": "Only use one of stringValue, integerValue, booleanValue.",
                                                  "type": "object",
                                                  "properties": {
                                                    "stringValue": {
                                                      "type": "string",
                                                      "description": "The default string value to apply to a field"
                                                    },
                                                    "integerValue": {
                                                      "type": "integer",
                                                      "description": "The default integer value to apply to a field"
                                                    },
                                                    "booleanValue": {
                                                      "type": "boolean",
                                                      "description": "The default boolean value to apply to a field"
                                                    }
                                                  }
                                                },
                                                "writeOnCreate": {
                                                  "type": "string",
                                                  "enum": [
                                                    "always",
                                                    "never"
                                                  ],
                                                  "default": "always",
                                                  "x-go-type-skip-optional-pointer": true,
                                                  "description": "Whether the default value should be applied when creating a record."
                                                },
                                                "writeOnUpdate": {
                                                  "type": "string",
                                                  "enum": [
                                                    "always",
                                                    "never"
                                                  ],
                                                  "default": "always",
                                                  "x-go-type-skip-optional-pointer": true,
                                                  "description": "Whether the default value should be applied when updating a record."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "proxy": {
                                  "title": "Base Proxy Config",
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "provider"
                              ],
                              "properties": {
                                "read": {
                                  "x-go-type": "ReadConfig"
                                },
                                "write": {
                                  "x-go-type": "WriteConfig"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "installation"
      }
    },
    "/projects/{projectIdOrName}/integrations/{integrationId}/installations/{installationId}": {
      "get": {
        "summary": "Get an installation",
        "operationId": "getInstallation",
        "tags": [
          "Installation"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "installationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The installation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Installation",
                  "required": [
                    "config",
                    "connection",
                    "createTime",
                    "createdBy",
                    "healthStatus",
                    "id",
                    "integrationId",
                    "projectId"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The installation ID.",
                      "example": "installation-123"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The Ampersand project ID.",
                      "example": "project-456"
                    },
                    "integrationId": {
                      "type": "string",
                      "description": "The integration ID.",
                      "example": "integration-123"
                    },
                    "group": {
                      "title": "Group",
                      "required": [
                        "createTime",
                        "groupName",
                        "groupRef",
                        "projectId"
                      ],
                      "type": "object",
                      "properties": {
                        "groupRef": {
                          "type": "string",
                          "description": "The ID of the user group that has access to this installation.",
                          "example": "group-123"
                        },
                        "groupName": {
                          "type": "string",
                          "description": "The name of the user group that has access to this installation.",
                          "example": "Super Customer"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the group was created.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the group was last updated.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        }
                      }
                    },
                    "healthStatus": {
                      "type": "string",
                      "description": "The health status of the installation (\"healthy\", \"unhealthy\").",
                      "example": "healthy"
                    },
                    "connection": {
                      "title": "Connection",
                      "required": [
                        "id",
                        "createTime",
                        "group",
                        "consumer",
                        "projectId",
                        "provider",
                        "authScheme",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The connection ID.",
                          "example": "connection-123"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "provider": {
                          "type": "string",
                          "description": "The SaaS provider that this Connection is for.",
                          "example": "salesforce"
                        },
                        "providerApp": {
                          "title": "Provider App",
                          "required": [
                            "clientId",
                            "createTime",
                            "id",
                            "projectId",
                            "provider"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The provider app ID.",
                              "example": "provider-app-123"
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Ampersand project ID.",
                              "example": "project-456"
                            },
                            "externalRef": {
                              "type": "string",
                              "description": "The ID used by the provider to identify the app (optional).",
                              "example": "external-id-123"
                            },
                            "provider": {
                              "type": "string",
                              "description": "The SaaS provider that this app connects to.",
                              "example": "salesforce"
                            },
                            "clientId": {
                              "type": "string",
                              "description": "The OAuth client ID for this app.",
                              "example": "client-id-123"
                            },
                            "scopes": {
                              "type": "array",
                              "description": "The OAuth scopes for this app.",
                              "items": {
                                "type": "string",
                                "example": [
                                  "oauth",
                                  "offline",
                                  "crm.read"
                                ]
                              }
                            },
                            "createTime": {
                              "type": "string",
                              "description": "The time the provider app was created.",
                              "format": "date-time"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "The time the provider app was updated.",
                              "format": "date-time"
                            }
                          }
                        },
                        "group": {
                          "title": "Group",
                          "required": [
                            "createTime",
                            "groupName",
                            "groupRef",
                            "projectId"
                          ],
                          "type": "object",
                          "properties": {
                            "groupRef": {
                              "type": "string",
                              "description": "The ID of the user group that has access to this installation.",
                              "example": "group-123"
                            },
                            "groupName": {
                              "type": "string",
                              "description": "The name of the user group that has access to this installation.",
                              "example": "Super Customer"
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Ampersand project ID.",
                              "example": "project-456"
                            },
                            "createTime": {
                              "type": "string",
                              "description": "The time the group was created.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "The time the group was last updated.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            }
                          }
                        },
                        "consumer": {
                          "title": "Consumer",
                          "required": [
                            "consumerName",
                            "consumerRef",
                            "createTime",
                            "projectId"
                          ],
                          "type": "object",
                          "properties": {
                            "consumerRef": {
                              "type": "string",
                              "description": "The consumer reference.",
                              "example": "consumer-123"
                            },
                            "consumerName": {
                              "type": "string",
                              "description": "The name of the consumer.",
                              "example": "Super Customer"
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Ampersand project ID.",
                              "example": "project-456"
                            },
                            "createTime": {
                              "type": "string",
                              "description": "The time the consumer was created.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "The time the consumer was last updated.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            }
                          }
                        },
                        "providerWorkspaceRef": {
                          "type": "string",
                          "description": "If available, the identifier for the provider workspace (e.g. \"salesforce-instance-domain\")",
                          "example": "provider-workspace-123"
                        },
                        "providerConsumerRef": {
                          "type": "string",
                          "description": "If available, the ID that Salesforce/Hubspot uses to identify this user (e.g. Salesforce has IDs in the form of https://login.salesforce.com/id/00D4x0000019CQTEA2/0054x000000orJ4AA)",
                          "example": "provider-consumer-123"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the connection was created.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the connection was last updated.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "authScheme": {
                          "type": "string",
                          "description": "The authentication scheme used for this connection.",
                          "example": "oauth2/authorizationCode",
                          "enum": [
                            "none",
                            "apiKey",
                            "basic",
                            "oauth2/authorizationCode",
                            "oauth2/authorizationCodePKCE",
                            "oauth2/clientCredentials",
                            "oauth2/password"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the connection.",
                          "example": "working",
                          "enum": [
                            "created",
                            "working",
                            "bad_credentials"
                          ]
                        },
                        "oauth2AuthorizationCode": {
                          "title": "OAuth2 AuthorizationCode Token",
                          "type": "object",
                          "properties": {
                            "accessToken": {
                              "type": "object",
                              "required": [
                                "token"
                              ],
                              "description": "The access token for the connection.",
                              "properties": {
                                "token": {
                                  "type": "string"
                                },
                                "issuedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-04-22T18:55:28.456076Z"
                                },
                                "expiresAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-10-22T18:55:28.456076Z"
                                }
                              }
                            },
                            "refreshToken": {
                              "type": "object",
                              "required": [
                                "token"
                              ],
                              "description": "The refresh token to use for the connection.",
                              "properties": {
                                "token": {
                                  "type": "string"
                                },
                                "issuedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-04-22T18:55:28.456076Z"
                                },
                                "expiresAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-10-22T18:55:28.456076Z"
                                }
                              }
                            },
                            "scopes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "The scopes for the tokens."
                            }
                          }
                        },
                        "apiKey": {
                          "type": "string",
                          "description": "The API key used while making the connection.",
                          "example": "api-key-123"
                        }
                      }
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the integration was first installed.",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The person who did the installation, in the format of \"consumer:{consumer-id}\".",
                      "example": "consumer:consumer-123"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the installation was last updated with a new config.",
                      "format": "date-time"
                    },
                    "config": {
                      "title": "Config",
                      "required": [
                        "content",
                        "createTime",
                        "createdBy",
                        "id",
                        "revisionId"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The config ID.",
                          "example": "config-123"
                        },
                        "revisionId": {
                          "type": "string",
                          "description": "The ID of the revision that this config is based on.",
                          "example": "revision-123"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the config was created.",
                          "format": "date-time"
                        },
                        "createdBy": {
                          "type": "string",
                          "description": "The person who created the config, in the format of \"consumer:{consumer-id}\" or \"builder:{builder-id}\".",
                          "example": "builder:builder-123"
                        },
                        "content": {
                          "title": "Config Content",
                          "allOf": [
                            {
                              "title": "Base Config Content",
                              "type": "object",
                              "properties": {
                                "provider": {
                                  "description": "The SaaS API that we are integrating with.",
                                  "example": "salesforce",
                                  "type": "string"
                                },
                                "read": {
                                  "title": "Base Read Config",
                                  "type": "object",
                                  "properties": {
                                    "objects": {
                                      "type": "object",
                                      "description": "This is a map of object names to their configuration.",
                                      "additionalProperties": {
                                        "title": "Base Read Config Object",
                                        "type": "object",
                                        "properties": {
                                          "objectName": {
                                            "description": "The name of the object to read from.",
                                            "example": "account",
                                            "type": "string",
                                            "x-oapi-codegen-extra-tags": {
                                              "validate": "required"
                                            }
                                          },
                                          "schedule": {
                                            "type": "string",
                                            "description": "The schedule for reading the object, in cron syntax.",
                                            "example": "*/15 * * * *"
                                          },
                                          "destination": {
                                            "description": "The name of the destination that the result should be sent to.",
                                            "example": "accountWebhook",
                                            "type": "string"
                                          },
                                          "selectedFields": {
                                            "type": "object",
                                            "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                                            "example": "{ phone: true, fax: true }",
                                            "additionalProperties": {
                                              "type": "boolean"
                                            }
                                          },
                                          "selectedValueMappings": {
                                            "type": "object",
                                            "description": "This is a map of field names to their value mappings.",
                                            "example": {
                                              "stage": {
                                                "open": "scheduled",
                                                "closedWon": "won",
                                                "closedLost": "lost"
                                              }
                                            },
                                            "x-go-type-skip-optional-pointer": true,
                                            "additionalProperties": {
                                              "title": "Selected Value Mappings",
                                              "type": "object",
                                              "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                                              "example": {
                                                "open": "scheduled",
                                                "closedWon": "won",
                                                "closedLost": "lost"
                                              },
                                              "x-go-type-skip-optional-pointer": true,
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "selectedFieldMappings": {
                                            "type": "object",
                                            "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                                            "example": "{ phoneNumber: phone, faxNumber: fax }",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "selectedFieldsAuto": {
                                            "title": "Selected Fields Auto Config",
                                            "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                                            "type": "string",
                                            "enum": [
                                              "all"
                                            ],
                                            "x-enum-varnames": [
                                              "SelectedFieldsAll"
                                            ]
                                          },
                                          "backfill": {
                                            "title": "Backfill Config",
                                            "type": "object",
                                            "required": [
                                              "defaultPeriod"
                                            ],
                                            "properties": {
                                              "defaultPeriod": {
                                                "title": "Default Period Config",
                                                "type": "object",
                                                "properties": {
                                                  "days": {
                                                    "type": "integer",
                                                    "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                                    "minimum": 0,
                                                    "example": 30,
                                                    "x-oapi-codegen-extra-tags": {
                                                      "validate": "required_without=FullHistory,omitempty,min=0"
                                                    }
                                                  },
                                                  "fullHistory": {
                                                    "type": "boolean",
                                                    "description": "If true, backfill all history. Required if days is not set.",
                                                    "example": false,
                                                    "x-oapi-codegen-extra-tags": {
                                                      "validate": "required_without=Days"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "write": {
                                  "title": "Base Write Config",
                                  "type": "object",
                                  "properties": {
                                    "objects": {
                                      "type": "object",
                                      "description": "This is a map of object names to their configuration.",
                                      "additionalProperties": {
                                        "title": "Base Write Config Object",
                                        "type": "object",
                                        "required": [
                                          "objectName"
                                        ],
                                        "properties": {
                                          "objectName": {
                                            "description": "The name of the object to write to.",
                                            "example": "account",
                                            "type": "string",
                                            "x-oapi-codegen-extra-tags": {
                                              "validate": "required"
                                            }
                                          },
                                          "selectedValueDefaults": {
                                            "type": "object",
                                            "deprecated": true,
                                            "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                                            "x-go-type-skip-optional-pointer": true,
                                            "additionalProperties": {
                                              "title": "Value Default (Legacy)",
                                              "deprecated": true,
                                              "x-go-type": "any",
                                              "oneOf": [
                                                {
                                                  "title": "Value Default String",
                                                  "type": "object",
                                                  "required": [
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "string",
                                                      "description": "The value to be used as a default."
                                                    },
                                                    "applyOnUpdate": {
                                                      "type": "string",
                                                      "enum": [
                                                        "always",
                                                        "never"
                                                      ],
                                                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                    }
                                                  }
                                                },
                                                {
                                                  "title": "Value Default Integer",
                                                  "type": "object",
                                                  "required": [
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "integer",
                                                      "description": "The value to be used as a default."
                                                    },
                                                    "applyOnUpdate": {
                                                      "type": "string",
                                                      "enum": [
                                                        "always",
                                                        "never"
                                                      ],
                                                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                    }
                                                  }
                                                },
                                                {
                                                  "title": "Value Default Boolean",
                                                  "type": "object",
                                                  "required": [
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "boolean",
                                                      "description": "The value to be used as a default."
                                                    },
                                                    "applyOnUpdate": {
                                                      "type": "string",
                                                      "enum": [
                                                        "always",
                                                        "never"
                                                      ],
                                                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "selectedFieldSettings": {
                                            "type": "object",
                                            "description": "This is a map of field names to their settings.",
                                            "x-go-type-skip-optional-pointer": true,
                                            "additionalProperties": {
                                              "title": "Field setting",
                                              "type": "object",
                                              "properties": {
                                                "default": {
                                                  "title": "Default value for a field",
                                                  "description": "Only use one of stringValue, integerValue, booleanValue.",
                                                  "type": "object",
                                                  "properties": {
                                                    "stringValue": {
                                                      "type": "string",
                                                      "description": "The default string value to apply to a field"
                                                    },
                                                    "integerValue": {
                                                      "type": "integer",
                                                      "description": "The default integer value to apply to a field"
                                                    },
                                                    "booleanValue": {
                                                      "type": "boolean",
                                                      "description": "The default boolean value to apply to a field"
                                                    }
                                                  }
                                                },
                                                "writeOnCreate": {
                                                  "type": "string",
                                                  "enum": [
                                                    "always",
                                                    "never"
                                                  ],
                                                  "default": "always",
                                                  "x-go-type-skip-optional-pointer": true,
                                                  "description": "Whether the default value should be applied when creating a record."
                                                },
                                                "writeOnUpdate": {
                                                  "type": "string",
                                                  "enum": [
                                                    "always",
                                                    "never"
                                                  ],
                                                  "default": "always",
                                                  "x-go-type-skip-optional-pointer": true,
                                                  "description": "Whether the default value should be applied when updating a record."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "proxy": {
                                  "title": "Base Proxy Config",
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "provider"
                              ],
                              "properties": {
                                "read": {
                                  "x-go-type": "ReadConfig"
                                },
                                "write": {
                                  "x-go-type": "WriteConfig"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an installation",
        "operationId": "deleteInstallation",
        "tags": [
          "Installation"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "installationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update an installation",
        "operationId": "updateInstallation",
        "tags": [
          "Installation"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "installationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "installation",
                  "updateMask"
                ],
                "type": "object",
                "properties": {
                  "updateMask": {
                    "type": "array",
                    "example": [
                      "connectionId",
                      "config.content.write.objects.account"
                    ],
                    "items": {
                      "type": "string",
                      "description": "fields to update."
                    }
                  },
                  "installation": {
                    "type": "object",
                    "properties": {
                      "connectionId": {
                        "type": "string",
                        "description": "The ID of the SaaS connection tied to this installation.",
                        "example": "connection-123"
                      },
                      "config": {
                        "type": "object",
                        "properties": {
                          "revisionId": {
                            "type": "string",
                            "description": "The ID of the revision that this config is based on."
                          },
                          "createdBy": {
                            "type": "string",
                            "description": "The person who created the config, in the format of \"consumer:{consumer-id}\" or \"builder:{builder-id}\"."
                          },
                          "content": {
                            "description": "The content of the config.",
                            "title": "Update Installation Config Content",
                            "allOf": [
                              {
                                "title": "Base Config Content",
                                "type": "object",
                                "properties": {
                                  "provider": {
                                    "description": "The SaaS API that we are integrating with.",
                                    "example": "salesforce",
                                    "type": "string"
                                  },
                                  "read": {
                                    "title": "Base Read Config",
                                    "type": "object",
                                    "properties": {
                                      "objects": {
                                        "type": "object",
                                        "description": "This is a map of object names to their configuration.",
                                        "additionalProperties": {
                                          "title": "Base Read Config Object",
                                          "type": "object",
                                          "properties": {
                                            "objectName": {
                                              "description": "The name of the object to read from.",
                                              "example": "account",
                                              "type": "string",
                                              "x-oapi-codegen-extra-tags": {
                                                "validate": "required"
                                              }
                                            },
                                            "schedule": {
                                              "type": "string",
                                              "description": "The schedule for reading the object, in cron syntax.",
                                              "example": "*/15 * * * *"
                                            },
                                            "destination": {
                                              "description": "The name of the destination that the result should be sent to.",
                                              "example": "accountWebhook",
                                              "type": "string"
                                            },
                                            "selectedFields": {
                                              "type": "object",
                                              "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                                              "example": "{ phone: true, fax: true }",
                                              "additionalProperties": {
                                                "type": "boolean"
                                              }
                                            },
                                            "selectedValueMappings": {
                                              "type": "object",
                                              "description": "This is a map of field names to their value mappings.",
                                              "example": {
                                                "stage": {
                                                  "open": "scheduled",
                                                  "closedWon": "won",
                                                  "closedLost": "lost"
                                                }
                                              },
                                              "x-go-type-skip-optional-pointer": true,
                                              "additionalProperties": {
                                                "title": "Selected Value Mappings",
                                                "type": "object",
                                                "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                                                "example": {
                                                  "open": "scheduled",
                                                  "closedWon": "won",
                                                  "closedLost": "lost"
                                                },
                                                "x-go-type-skip-optional-pointer": true,
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "selectedFieldMappings": {
                                              "type": "object",
                                              "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                                              "example": "{ phoneNumber: phone, faxNumber: fax }",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "selectedFieldsAuto": {
                                              "title": "Selected Fields Auto Config",
                                              "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                                              "type": "string",
                                              "enum": [
                                                "all"
                                              ],
                                              "x-enum-varnames": [
                                                "SelectedFieldsAll"
                                              ]
                                            },
                                            "backfill": {
                                              "title": "Backfill Config",
                                              "type": "object",
                                              "required": [
                                                "defaultPeriod"
                                              ],
                                              "properties": {
                                                "defaultPeriod": {
                                                  "title": "Default Period Config",
                                                  "type": "object",
                                                  "properties": {
                                                    "days": {
                                                      "type": "integer",
                                                      "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                                      "minimum": 0,
                                                      "example": 30,
                                                      "x-oapi-codegen-extra-tags": {
                                                        "validate": "required_without=FullHistory,omitempty,min=0"
                                                      }
                                                    },
                                                    "fullHistory": {
                                                      "type": "boolean",
                                                      "description": "If true, backfill all history. Required if days is not set.",
                                                      "example": false,
                                                      "x-oapi-codegen-extra-tags": {
                                                        "validate": "required_without=Days"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "write": {
                                    "title": "Base Write Config",
                                    "type": "object",
                                    "properties": {
                                      "objects": {
                                        "type": "object",
                                        "description": "This is a map of object names to their configuration.",
                                        "additionalProperties": {
                                          "title": "Base Write Config Object",
                                          "type": "object",
                                          "required": [
                                            "objectName"
                                          ],
                                          "properties": {
                                            "objectName": {
                                              "description": "The name of the object to write to.",
                                              "example": "account",
                                              "type": "string",
                                              "x-oapi-codegen-extra-tags": {
                                                "validate": "required"
                                              }
                                            },
                                            "selectedValueDefaults": {
                                              "type": "object",
                                              "deprecated": true,
                                              "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                                              "x-go-type-skip-optional-pointer": true,
                                              "additionalProperties": {
                                                "title": "Value Default (Legacy)",
                                                "deprecated": true,
                                                "x-go-type": "any",
                                                "oneOf": [
                                                  {
                                                    "title": "Value Default String",
                                                    "type": "object",
                                                    "required": [
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "string",
                                                        "description": "The value to be used as a default."
                                                      },
                                                      "applyOnUpdate": {
                                                        "type": "string",
                                                        "enum": [
                                                          "always",
                                                          "never"
                                                        ],
                                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "title": "Value Default Integer",
                                                    "type": "object",
                                                    "required": [
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "integer",
                                                        "description": "The value to be used as a default."
                                                      },
                                                      "applyOnUpdate": {
                                                        "type": "string",
                                                        "enum": [
                                                          "always",
                                                          "never"
                                                        ],
                                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "title": "Value Default Boolean",
                                                    "type": "object",
                                                    "required": [
                                                      "value"
                                                    ],
                                                    "properties": {
                                                      "value": {
                                                        "type": "boolean",
                                                        "description": "The value to be used as a default."
                                                      },
                                                      "applyOnUpdate": {
                                                        "type": "string",
                                                        "enum": [
                                                          "always",
                                                          "never"
                                                        ],
                                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            },
                                            "selectedFieldSettings": {
                                              "type": "object",
                                              "description": "This is a map of field names to their settings.",
                                              "x-go-type-skip-optional-pointer": true,
                                              "additionalProperties": {
                                                "title": "Field setting",
                                                "type": "object",
                                                "properties": {
                                                  "default": {
                                                    "title": "Default value for a field",
                                                    "description": "Only use one of stringValue, integerValue, booleanValue.",
                                                    "type": "object",
                                                    "properties": {
                                                      "stringValue": {
                                                        "type": "string",
                                                        "description": "The default string value to apply to a field"
                                                      },
                                                      "integerValue": {
                                                        "type": "integer",
                                                        "description": "The default integer value to apply to a field"
                                                      },
                                                      "booleanValue": {
                                                        "type": "boolean",
                                                        "description": "The default boolean value to apply to a field"
                                                      }
                                                    }
                                                  },
                                                  "writeOnCreate": {
                                                    "type": "string",
                                                    "enum": [
                                                      "always",
                                                      "never"
                                                    ],
                                                    "default": "always",
                                                    "x-go-type-skip-optional-pointer": true,
                                                    "description": "Whether the default value should be applied when creating a record."
                                                  },
                                                  "writeOnUpdate": {
                                                    "type": "string",
                                                    "enum": [
                                                      "always",
                                                      "never"
                                                    ],
                                                    "default": "always",
                                                    "x-go-type-skip-optional-pointer": true,
                                                    "description": "Whether the default value should be applied when updating a record."
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "proxy": {
                                    "title": "Base Proxy Config",
                                    "type": "object",
                                    "properties": {
                                      "enabled": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "description": "The config of the installation."
                      }
                    },
                    "description": "The installation fields to update. (Only include the fields you'd like to update.)"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "The updated installation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Installation",
                  "required": [
                    "config",
                    "connection",
                    "createTime",
                    "createdBy",
                    "healthStatus",
                    "id",
                    "integrationId",
                    "projectId"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The installation ID.",
                      "example": "installation-123"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The Ampersand project ID.",
                      "example": "project-456"
                    },
                    "integrationId": {
                      "type": "string",
                      "description": "The integration ID.",
                      "example": "integration-123"
                    },
                    "group": {
                      "title": "Group",
                      "required": [
                        "createTime",
                        "groupName",
                        "groupRef",
                        "projectId"
                      ],
                      "type": "object",
                      "properties": {
                        "groupRef": {
                          "type": "string",
                          "description": "The ID of the user group that has access to this installation.",
                          "example": "group-123"
                        },
                        "groupName": {
                          "type": "string",
                          "description": "The name of the user group that has access to this installation.",
                          "example": "Super Customer"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the group was created.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the group was last updated.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        }
                      }
                    },
                    "healthStatus": {
                      "type": "string",
                      "description": "The health status of the installation (\"healthy\", \"unhealthy\").",
                      "example": "healthy"
                    },
                    "connection": {
                      "title": "Connection",
                      "required": [
                        "id",
                        "createTime",
                        "group",
                        "consumer",
                        "projectId",
                        "provider",
                        "authScheme",
                        "status"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The connection ID.",
                          "example": "connection-123"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "provider": {
                          "type": "string",
                          "description": "The SaaS provider that this Connection is for.",
                          "example": "salesforce"
                        },
                        "providerApp": {
                          "title": "Provider App",
                          "required": [
                            "clientId",
                            "createTime",
                            "id",
                            "projectId",
                            "provider"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The provider app ID.",
                              "example": "provider-app-123"
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Ampersand project ID.",
                              "example": "project-456"
                            },
                            "externalRef": {
                              "type": "string",
                              "description": "The ID used by the provider to identify the app (optional).",
                              "example": "external-id-123"
                            },
                            "provider": {
                              "type": "string",
                              "description": "The SaaS provider that this app connects to.",
                              "example": "salesforce"
                            },
                            "clientId": {
                              "type": "string",
                              "description": "The OAuth client ID for this app.",
                              "example": "client-id-123"
                            },
                            "scopes": {
                              "type": "array",
                              "description": "The OAuth scopes for this app.",
                              "items": {
                                "type": "string",
                                "example": [
                                  "oauth",
                                  "offline",
                                  "crm.read"
                                ]
                              }
                            },
                            "createTime": {
                              "type": "string",
                              "description": "The time the provider app was created.",
                              "format": "date-time"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "The time the provider app was updated.",
                              "format": "date-time"
                            }
                          }
                        },
                        "group": {
                          "title": "Group",
                          "required": [
                            "createTime",
                            "groupName",
                            "groupRef",
                            "projectId"
                          ],
                          "type": "object",
                          "properties": {
                            "groupRef": {
                              "type": "string",
                              "description": "The ID of the user group that has access to this installation.",
                              "example": "group-123"
                            },
                            "groupName": {
                              "type": "string",
                              "description": "The name of the user group that has access to this installation.",
                              "example": "Super Customer"
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Ampersand project ID.",
                              "example": "project-456"
                            },
                            "createTime": {
                              "type": "string",
                              "description": "The time the group was created.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "The time the group was last updated.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            }
                          }
                        },
                        "consumer": {
                          "title": "Consumer",
                          "required": [
                            "consumerName",
                            "consumerRef",
                            "createTime",
                            "projectId"
                          ],
                          "type": "object",
                          "properties": {
                            "consumerRef": {
                              "type": "string",
                              "description": "The consumer reference.",
                              "example": "consumer-123"
                            },
                            "consumerName": {
                              "type": "string",
                              "description": "The name of the consumer.",
                              "example": "Super Customer"
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The Ampersand project ID.",
                              "example": "project-456"
                            },
                            "createTime": {
                              "type": "string",
                              "description": "The time the consumer was created.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "The time the consumer was last updated.",
                              "format": "date-time",
                              "example": "2023-07-13T21:34:44.816Z"
                            }
                          }
                        },
                        "providerWorkspaceRef": {
                          "type": "string",
                          "description": "If available, the identifier for the provider workspace (e.g. \"salesforce-instance-domain\")",
                          "example": "provider-workspace-123"
                        },
                        "providerConsumerRef": {
                          "type": "string",
                          "description": "If available, the ID that Salesforce/Hubspot uses to identify this user (e.g. Salesforce has IDs in the form of https://login.salesforce.com/id/00D4x0000019CQTEA2/0054x000000orJ4AA)",
                          "example": "provider-consumer-123"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the connection was created.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the connection was last updated.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "authScheme": {
                          "type": "string",
                          "description": "The authentication scheme used for this connection.",
                          "example": "oauth2/authorizationCode",
                          "enum": [
                            "none",
                            "apiKey",
                            "basic",
                            "oauth2/authorizationCode",
                            "oauth2/authorizationCodePKCE",
                            "oauth2/clientCredentials",
                            "oauth2/password"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the connection.",
                          "example": "working",
                          "enum": [
                            "created",
                            "working",
                            "bad_credentials"
                          ]
                        },
                        "oauth2AuthorizationCode": {
                          "title": "OAuth2 AuthorizationCode Token",
                          "type": "object",
                          "properties": {
                            "accessToken": {
                              "type": "object",
                              "required": [
                                "token"
                              ],
                              "description": "The access token for the connection.",
                              "properties": {
                                "token": {
                                  "type": "string"
                                },
                                "issuedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-04-22T18:55:28.456076Z"
                                },
                                "expiresAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-10-22T18:55:28.456076Z"
                                }
                              }
                            },
                            "refreshToken": {
                              "type": "object",
                              "required": [
                                "token"
                              ],
                              "description": "The refresh token to use for the connection.",
                              "properties": {
                                "token": {
                                  "type": "string"
                                },
                                "issuedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-04-22T18:55:28.456076Z"
                                },
                                "expiresAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2024-10-22T18:55:28.456076Z"
                                }
                              }
                            },
                            "scopes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "The scopes for the tokens."
                            }
                          }
                        },
                        "apiKey": {
                          "type": "string",
                          "description": "The API key used while making the connection.",
                          "example": "api-key-123"
                        }
                      }
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the integration was first installed.",
                      "format": "date-time"
                    },
                    "createdBy": {
                      "type": "string",
                      "description": "The person who did the installation, in the format of \"consumer:{consumer-id}\".",
                      "example": "consumer:consumer-123"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the installation was last updated with a new config.",
                      "format": "date-time"
                    },
                    "config": {
                      "title": "Config",
                      "required": [
                        "content",
                        "createTime",
                        "createdBy",
                        "id",
                        "revisionId"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The config ID.",
                          "example": "config-123"
                        },
                        "revisionId": {
                          "type": "string",
                          "description": "The ID of the revision that this config is based on.",
                          "example": "revision-123"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the config was created.",
                          "format": "date-time"
                        },
                        "createdBy": {
                          "type": "string",
                          "description": "The person who created the config, in the format of \"consumer:{consumer-id}\" or \"builder:{builder-id}\".",
                          "example": "builder:builder-123"
                        },
                        "content": {
                          "title": "Config Content",
                          "allOf": [
                            {
                              "title": "Base Config Content",
                              "type": "object",
                              "properties": {
                                "provider": {
                                  "description": "The SaaS API that we are integrating with.",
                                  "example": "salesforce",
                                  "type": "string"
                                },
                                "read": {
                                  "title": "Base Read Config",
                                  "type": "object",
                                  "properties": {
                                    "objects": {
                                      "type": "object",
                                      "description": "This is a map of object names to their configuration.",
                                      "additionalProperties": {
                                        "title": "Base Read Config Object",
                                        "type": "object",
                                        "properties": {
                                          "objectName": {
                                            "description": "The name of the object to read from.",
                                            "example": "account",
                                            "type": "string",
                                            "x-oapi-codegen-extra-tags": {
                                              "validate": "required"
                                            }
                                          },
                                          "schedule": {
                                            "type": "string",
                                            "description": "The schedule for reading the object, in cron syntax.",
                                            "example": "*/15 * * * *"
                                          },
                                          "destination": {
                                            "description": "The name of the destination that the result should be sent to.",
                                            "example": "accountWebhook",
                                            "type": "string"
                                          },
                                          "selectedFields": {
                                            "type": "object",
                                            "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                                            "example": "{ phone: true, fax: true }",
                                            "additionalProperties": {
                                              "type": "boolean"
                                            }
                                          },
                                          "selectedValueMappings": {
                                            "type": "object",
                                            "description": "This is a map of field names to their value mappings.",
                                            "example": {
                                              "stage": {
                                                "open": "scheduled",
                                                "closedWon": "won",
                                                "closedLost": "lost"
                                              }
                                            },
                                            "x-go-type-skip-optional-pointer": true,
                                            "additionalProperties": {
                                              "title": "Selected Value Mappings",
                                              "type": "object",
                                              "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                                              "example": {
                                                "open": "scheduled",
                                                "closedWon": "won",
                                                "closedLost": "lost"
                                              },
                                              "x-go-type-skip-optional-pointer": true,
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "selectedFieldMappings": {
                                            "type": "object",
                                            "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                                            "example": "{ phoneNumber: phone, faxNumber: fax }",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          },
                                          "selectedFieldsAuto": {
                                            "title": "Selected Fields Auto Config",
                                            "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                                            "type": "string",
                                            "enum": [
                                              "all"
                                            ],
                                            "x-enum-varnames": [
                                              "SelectedFieldsAll"
                                            ]
                                          },
                                          "backfill": {
                                            "title": "Backfill Config",
                                            "type": "object",
                                            "required": [
                                              "defaultPeriod"
                                            ],
                                            "properties": {
                                              "defaultPeriod": {
                                                "title": "Default Period Config",
                                                "type": "object",
                                                "properties": {
                                                  "days": {
                                                    "type": "integer",
                                                    "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                                    "minimum": 0,
                                                    "example": 30,
                                                    "x-oapi-codegen-extra-tags": {
                                                      "validate": "required_without=FullHistory,omitempty,min=0"
                                                    }
                                                  },
                                                  "fullHistory": {
                                                    "type": "boolean",
                                                    "description": "If true, backfill all history. Required if days is not set.",
                                                    "example": false,
                                                    "x-oapi-codegen-extra-tags": {
                                                      "validate": "required_without=Days"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "write": {
                                  "title": "Base Write Config",
                                  "type": "object",
                                  "properties": {
                                    "objects": {
                                      "type": "object",
                                      "description": "This is a map of object names to their configuration.",
                                      "additionalProperties": {
                                        "title": "Base Write Config Object",
                                        "type": "object",
                                        "required": [
                                          "objectName"
                                        ],
                                        "properties": {
                                          "objectName": {
                                            "description": "The name of the object to write to.",
                                            "example": "account",
                                            "type": "string",
                                            "x-oapi-codegen-extra-tags": {
                                              "validate": "required"
                                            }
                                          },
                                          "selectedValueDefaults": {
                                            "type": "object",
                                            "deprecated": true,
                                            "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                                            "x-go-type-skip-optional-pointer": true,
                                            "additionalProperties": {
                                              "title": "Value Default (Legacy)",
                                              "deprecated": true,
                                              "x-go-type": "any",
                                              "oneOf": [
                                                {
                                                  "title": "Value Default String",
                                                  "type": "object",
                                                  "required": [
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "string",
                                                      "description": "The value to be used as a default."
                                                    },
                                                    "applyOnUpdate": {
                                                      "type": "string",
                                                      "enum": [
                                                        "always",
                                                        "never"
                                                      ],
                                                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                    }
                                                  }
                                                },
                                                {
                                                  "title": "Value Default Integer",
                                                  "type": "object",
                                                  "required": [
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "integer",
                                                      "description": "The value to be used as a default."
                                                    },
                                                    "applyOnUpdate": {
                                                      "type": "string",
                                                      "enum": [
                                                        "always",
                                                        "never"
                                                      ],
                                                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                    }
                                                  }
                                                },
                                                {
                                                  "title": "Value Default Boolean",
                                                  "type": "object",
                                                  "required": [
                                                    "value"
                                                  ],
                                                  "properties": {
                                                    "value": {
                                                      "type": "boolean",
                                                      "description": "The value to be used as a default."
                                                    },
                                                    "applyOnUpdate": {
                                                      "type": "string",
                                                      "enum": [
                                                        "always",
                                                        "never"
                                                      ],
                                                      "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          },
                                          "selectedFieldSettings": {
                                            "type": "object",
                                            "description": "This is a map of field names to their settings.",
                                            "x-go-type-skip-optional-pointer": true,
                                            "additionalProperties": {
                                              "title": "Field setting",
                                              "type": "object",
                                              "properties": {
                                                "default": {
                                                  "title": "Default value for a field",
                                                  "description": "Only use one of stringValue, integerValue, booleanValue.",
                                                  "type": "object",
                                                  "properties": {
                                                    "stringValue": {
                                                      "type": "string",
                                                      "description": "The default string value to apply to a field"
                                                    },
                                                    "integerValue": {
                                                      "type": "integer",
                                                      "description": "The default integer value to apply to a field"
                                                    },
                                                    "booleanValue": {
                                                      "type": "boolean",
                                                      "description": "The default boolean value to apply to a field"
                                                    }
                                                  }
                                                },
                                                "writeOnCreate": {
                                                  "type": "string",
                                                  "enum": [
                                                    "always",
                                                    "never"
                                                  ],
                                                  "default": "always",
                                                  "x-go-type-skip-optional-pointer": true,
                                                  "description": "Whether the default value should be applied when creating a record."
                                                },
                                                "writeOnUpdate": {
                                                  "type": "string",
                                                  "enum": [
                                                    "always",
                                                    "never"
                                                  ],
                                                  "default": "always",
                                                  "x-go-type-skip-optional-pointer": true,
                                                  "description": "Whether the default value should be applied when updating a record."
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "proxy": {
                                  "title": "Base Proxy Config",
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "provider"
                              ],
                              "properties": {
                                "read": {
                                  "x-go-type": "ReadConfig"
                                },
                                "write": {
                                  "x-go-type": "WriteConfig"
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "installationUpdate"
      }
    },
    "/projects/{projectIdOrName}/integrations/{integrationId}/objects/{objectName}/metadata": {
      "get": {
        "summary": "Get object metadata for installation",
        "description": "Retrieves metadata about an object in a customer's SaaS instance, including its fields.\nThis endpoint requires that an Installation exists for the given groupRef.\nIt applies object mappings.\n",
        "tags": [
          "Objects & Fields"
        ],
        "operationId": "getObjectMetadataForInstallation",
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "description": "Project ID or name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integrationId",
            "in": "path",
            "required": true,
            "description": "Integration ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectName",
            "in": "path",
            "required": true,
            "description": "Object name (mapped or unmapped)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupRef",
            "in": "query",
            "required": false,
            "description": "The groupRef for the installation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved object metadata",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Object Metadata",
                  "type": "object",
                  "required": [
                    "name",
                    "fields"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The provider name of the object",
                      "example": "contact"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Human-readable name of the object",
                      "example": "Contact"
                    },
                    "mappedObjectName": {
                      "type": "string",
                      "example": "people"
                    },
                    "fields": {
                      "type": "object",
                      "description": "Map of field metadata keyed by field name",
                      "additionalProperties": {
                        "title": "Field Metadata",
                        "type": "object",
                        "required": [
                          "fieldName",
                          "displayName"
                        ],
                        "properties": {
                          "fieldName": {
                            "type": "string",
                            "description": "The name of the field from the provider API.",
                            "example": "Account ID"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the field from the provider API.",
                            "example": "Account ID"
                          },
                          "valueType": {
                            "type": "string",
                            "description": "A normalized field type",
                            "enum": [
                              "string",
                              "boolean",
                              "singleSelect",
                              "multiSelect",
                              "date",
                              "datetime",
                              "int",
                              "float",
                              "other"
                            ],
                            "x-go-type-skip-optional-pointer": true
                          },
                          "providerType": {
                            "type": "string",
                            "description": "Raw field type from the provider API.",
                            "example": "timestamp",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "readOnly": {
                            "type": "boolean",
                            "description": "Whether the field is read-only.",
                            "example": false,
                            "x-go-type-skip-optional-pointer": true
                          },
                          "values": {
                            "type": "array",
                            "description": "If the valueType is singleSelect or multiSelect, this is a list of possible values",
                            "x-go-type-skip-optional-pointer": true,
                            "items": {
                              "title": "Field Value",
                              "type": "object",
                              "required": [
                                "value",
                                "displayValue"
                              ],
                              "description": "Represents a field value",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "description": "The internal value used by the system",
                                  "example": "outbound"
                                },
                                "displayValue": {
                                  "type": "string",
                                  "description": "The human-readable display value",
                                  "example": "Outbound Campaign"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/providers/{provider}/objects/{objectName}/metadata": {
      "get": {
        "summary": "Get object metadata for connection",
        "description": "Retrieves metadata about an object in a customer's SaaS instance, including its fields.\nThis endpoint only requires that a Connection exists for the given groupRef.\nIt does not apply any object mappings.\n",
        "tags": [
          "Objects & Fields"
        ],
        "operationId": "getObjectMetadataForConnection",
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "description": "Project ID or name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "description": "The API Provider",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "objectName",
            "in": "path",
            "required": true,
            "description": "Object name (mapped or unmapped)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupRef",
            "in": "query",
            "required": false,
            "description": "The groupRef for the connection",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved object metadata",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Object Metadata",
                  "type": "object",
                  "required": [
                    "name",
                    "fields"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The provider name of the object",
                      "example": "contact"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Human-readable name of the object",
                      "example": "Contact"
                    },
                    "mappedObjectName": {
                      "type": "string",
                      "example": "people"
                    },
                    "fields": {
                      "type": "object",
                      "description": "Map of field metadata keyed by field name",
                      "additionalProperties": {
                        "title": "Field Metadata",
                        "type": "object",
                        "required": [
                          "fieldName",
                          "displayName"
                        ],
                        "properties": {
                          "fieldName": {
                            "type": "string",
                            "description": "The name of the field from the provider API.",
                            "example": "Account ID"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "The display name of the field from the provider API.",
                            "example": "Account ID"
                          },
                          "valueType": {
                            "type": "string",
                            "description": "A normalized field type",
                            "enum": [
                              "string",
                              "boolean",
                              "singleSelect",
                              "multiSelect",
                              "date",
                              "datetime",
                              "int",
                              "float",
                              "other"
                            ],
                            "x-go-type-skip-optional-pointer": true
                          },
                          "providerType": {
                            "type": "string",
                            "description": "Raw field type from the provider API.",
                            "example": "timestamp",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "readOnly": {
                            "type": "boolean",
                            "description": "Whether the field is read-only.",
                            "example": false,
                            "x-go-type-skip-optional-pointer": true
                          },
                          "values": {
                            "type": "array",
                            "description": "If the valueType is singleSelect or multiSelect, this is a list of possible values",
                            "x-go-type-skip-optional-pointer": true,
                            "items": {
                              "title": "Field Value",
                              "type": "object",
                              "required": [
                                "value",
                                "displayValue"
                              ],
                              "description": "Represents a field value",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "description": "The internal value used by the system",
                                  "example": "outbound"
                                },
                                "displayValue": {
                                  "type": "string",
                                  "description": "The human-readable display value",
                                  "example": "Outbound Campaign"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/integrations/{integrationId}/installations/{installationId}/operations": {
      "get": {
        "summary": "List operations",
        "operationId": "listOperations",
        "tags": [
          "Operation"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "integrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "installationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000,
              "default": 200
            },
            "description": "The number of operations to return."
          },
          {
            "name": "pageToken",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "A cursor that can be passed to paginate through multiple pages of operations."
          }
        ],
        "responses": {
          "200": {
            "description": "List of operations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "results",
                    "pagination"
                  ],
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "title": "Operation",
                        "required": [
                          "projectId",
                          "integrationId",
                          "installationId",
                          "configId",
                          "actionType",
                          "status",
                          "id"
                        ],
                        "type": "object",
                        "properties": {
                          "projectId": {
                            "type": "string",
                            "description": "The Ampersand project ID.",
                            "example": "project-456"
                          },
                          "integrationId": {
                            "type": "string",
                            "description": "The integration ID.",
                            "example": "integration-123"
                          },
                          "configId": {
                            "type": "string",
                            "description": "The config ID.",
                            "example": "config-123"
                          },
                          "actionType": {
                            "type": "string",
                            "description": "The action type to perform for the given object.",
                            "example": "read"
                          },
                          "id": {
                            "type": "string",
                            "description": "The operation ID.",
                            "example": "operation-123"
                          },
                          "installationId": {
                            "type": "string",
                            "description": "The Ampersand installation ID.",
                            "example": "installation-123"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the operation.",
                            "example": "success"
                          },
                          "result": {
                            "type": "string",
                            "description": "The result of the operation.",
                            "example": "[object] No changes"
                          },
                          "metadata": {
                            "type": "object",
                            "description": "Metadata associated with the operation.",
                            "example": {}
                          },
                          "createTime": {
                            "type": "string",
                            "description": "The time the operation was created.",
                            "format": "date-time",
                            "example": "2023-07-13T21:34:44.816Z"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "title": "Pagination Information",
                      "type": "object",
                      "required": [
                        "done"
                      ],
                      "properties": {
                        "done": {
                          "type": "boolean",
                          "description": "If set to true, this is the last page of results for the given operation. There are no more results & there will be no nextPageToken sent when done is true.",
                          "example": false
                        },
                        "nextPageToken": {
                          "type": "string",
                          "description": "If present, set this value against your 'pageToken' query parameter in the next API call, which will retrieve the next set of results.",
                          "example": "Q9JT+2qfys28V4ODN+UayA=="
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/operations/{operationId}": {
      "get": {
        "summary": "Get an operation",
        "operationId": "getOperation",
        "tags": [
          "Operation"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Operation",
                  "required": [
                    "projectId",
                    "integrationId",
                    "installationId",
                    "configId",
                    "actionType",
                    "status",
                    "id"
                  ],
                  "type": "object",
                  "properties": {
                    "projectId": {
                      "type": "string",
                      "description": "The Ampersand project ID.",
                      "example": "project-456"
                    },
                    "integrationId": {
                      "type": "string",
                      "description": "The integration ID.",
                      "example": "integration-123"
                    },
                    "configId": {
                      "type": "string",
                      "description": "The config ID.",
                      "example": "config-123"
                    },
                    "actionType": {
                      "type": "string",
                      "description": "The action type to perform for the given object.",
                      "example": "read"
                    },
                    "id": {
                      "type": "string",
                      "description": "The operation ID.",
                      "example": "operation-123"
                    },
                    "installationId": {
                      "type": "string",
                      "description": "The Ampersand installation ID.",
                      "example": "installation-123"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the operation.",
                      "example": "success"
                    },
                    "result": {
                      "type": "string",
                      "description": "The result of the operation.",
                      "example": "[object] No changes"
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Metadata associated with the operation.",
                      "example": {}
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the operation was created.",
                      "format": "date-time",
                      "example": "2023-07-13T21:34:44.816Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/operations/{operationId}/logs": {
      "get": {
        "summary": "List logs for an operation",
        "operationId": "listOperationLogs",
        "tags": [
          "Operation"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Log",
                    "type": "object",
                    "required": [
                      "timestamp",
                      "severity",
                      "message"
                    ],
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "description": "The time the log was created.",
                        "example": "2023-07-13T21:34:44.816Z"
                      },
                      "message": {
                        "type": "object",
                        "description": "The log message object.",
                        "required": [
                          "msg"
                        ],
                        "properties": {
                          "msg": {
                            "type": "string",
                            "description": "The use-readable message.",
                            "example": "This is a log message"
                          },
                          "error": {
                            "type": "string",
                            "description": "The error message, if there has been an error."
                          },
                          "operation_id": {
                            "type": "string",
                            "description": "The operation ID."
                          }
                        }
                      },
                      "severity": {
                        "type": "string",
                        "description": "The severity of the log.",
                        "example": "DEBUG"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers": {
      "get": {
        "summary": "List providers",
        "operationId": "listProviders",
        "tags": [
          "Provider"
        ],
        "responses": {
          "200": {
            "description": "List of providers & their information",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Catalog Type",
                  "type": "object",
                  "additionalProperties": {
                    "title": "Provider Info",
                    "type": "object",
                    "required": [
                      "name",
                      "baseURL",
                      "authType",
                      "support",
                      "providerOpts"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "authType": {
                        "title": "Auth Type",
                        "description": "The type of authentication required by the provider.",
                        "type": "string",
                        "enum": [
                          "oauth2",
                          "apiKey",
                          "basic",
                          "jwt",
                          "none"
                        ],
                        "x-oapi-codegen-extra-tags": {
                          "validate": "required"
                        }
                      },
                      "baseURL": {
                        "description": "The base URL for making API requests.",
                        "type": "string",
                        "x-oapi-codegen-extra-tags": {
                          "validate": "required"
                        }
                      },
                      "oauth2Opts": {
                        "title": "OAuth2 Options",
                        "type": "object",
                        "description": "Configuration for OAuth2.0. Must be provided if authType is oauth2.",
                        "required": [
                          "grantType",
                          "tokenURL",
                          "explicitScopesRequired",
                          "explicitWorkspaceRequired",
                          "tokenMetadataFields"
                        ],
                        "properties": {
                          "grantType": {
                            "type": "string",
                            "enum": [
                              "authorizationCode",
                              "authorizationCodePKCE",
                              "clientCredentials",
                              "password"
                            ]
                          },
                          "authURL": {
                            "type": "string",
                            "example": "https://login.salesforce.com/services/oauth2/authorize",
                            "description": "The authorization URL.",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "tokenURL": {
                            "type": "string",
                            "example": "https://login.salesforce.com/services/oauth2/token",
                            "description": "The token URL.",
                            "x-oapi-codegen-extra-tags": {
                              "validate": "required"
                            }
                          },
                          "explicitScopesRequired": {
                            "type": "boolean",
                            "description": "Whether scopes are required to be known ahead of the OAuth flow.",
                            "example": true
                          },
                          "explicitWorkspaceRequired": {
                            "type": "boolean",
                            "description": "Whether the workspace is required to be known ahead of the OAuth flow.",
                            "example": true
                          },
                          "audience": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "https://api.mparticle.com"
                            ],
                            "description": "A list of URLs that represent the audience for the token, which is needed for some client credential grant flows.",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "tokenMetadataFields": {
                            "title": "Token Metadata Fields",
                            "type": "object",
                            "description": "Fields to be used to extract token metadata from the token response.",
                            "properties": {
                              "workspaceRefField": {
                                "type": "string",
                                "example": "account-id",
                                "x-go-type-skip-optional-pointer": true
                              },
                              "consumerRefField": {
                                "type": "string",
                                "example": "user-id",
                                "x-go-type-skip-optional-pointer": true
                              },
                              "scopesField": {
                                "type": "string",
                                "example": "scopes",
                                "x-go-type-skip-optional-pointer": true
                              }
                            }
                          },
                          "docsURL": {
                            "type": "string",
                            "description": "URL with more information about where to retrieve Client ID and Client Secret, etc.",
                            "example": "https://docs.example.com/client-credentials",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "authURLParams": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "x-go-type-skip-optional-pointer": true,
                            "example": {
                              "access_type": "offline",
                              "duration": "permanent"
                            }
                          }
                        }
                      },
                      "apiKeyOpts": {
                        "title": "API Key Options",
                        "type": "object",
                        "description": "Configuration for API key. Must be provided if authType is apiKey.",
                        "required": [
                          "attachmentType"
                        ],
                        "properties": {
                          "attachmentType": {
                            "type": "string",
                            "description": "How the API key should be attached to requests.",
                            "enum": [
                              "query",
                              "header"
                            ],
                            "x-oapi-codegen-extra-tags": {
                              "validate": "required"
                            }
                          },
                          "query": {
                            "title": "API Key Query Options",
                            "type": "object",
                            "description": "Configuration for API key in query parameter. Must be provided if type is in-query.",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "api_key",
                                "description": "The name of the query parameter to be used for the API key.",
                                "x-go-type-skip-optional-pointer": true
                              }
                            }
                          },
                          "header": {
                            "title": "API Key Header Options",
                            "type": "object",
                            "description": "Configuration for API key in header. Must be provided if type is in-header.",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "example": "X-Api-Key",
                                "description": "The name of the header to be used for the API key.",
                                "x-go-type-skip-optional-pointer": true
                              },
                              "valuePrefix": {
                                "type": "string",
                                "example": "Bearer ",
                                "description": "The prefix to be added to the API key value when it is sent in the header.",
                                "x-go-type-skip-optional-pointer": true
                              }
                            }
                          },
                          "docsURL": {
                            "type": "string",
                            "description": "URL with more information about how to get or use an API key.",
                            "example": "https://docs.example.com/api-key",
                            "x-go-type-skip-optional-pointer": true
                          }
                        }
                      },
                      "basicOpts": {
                        "title": "Basic Auth Options",
                        "type": "object",
                        "description": "Configuration for Basic Auth. Optional.",
                        "properties": {
                          "apiKeyAsBasic": {
                            "type": "boolean",
                            "example": true,
                            "description": "If true, the provider uses an API key which then gets encoded as a basic auth user:pass string.",
                            "x-go-type-skip-optional-pointer": true
                          },
                          "apiKeyAsBasicOpts": {
                            "title": "API Key as Basic Options",
                            "type": "object",
                            "description": "when this object is present, it means that this provider uses Basic Auth to actually collect an API key",
                            "properties": {
                              "fieldUsed": {
                                "type": "string",
                                "enum": [
                                  "username",
                                  "password"
                                ],
                                "example": "username",
                                "description": "whether the API key should be used as the username or password.",
                                "x-go-type-skip-optional-pointer": true,
                                "x-enum-varnames": [
                                  "UsernameField",
                                  "PasswordField"
                                ]
                              },
                              "keyFormat": {
                                "type": "string",
                                "example": "api:%s",
                                "description": "How to transform the API key in to a basic auth user:pass string. The %s is replaced with the API key value.",
                                "x-go-type-skip-optional-pointer": true
                              }
                            }
                          },
                          "docsURL": {
                            "type": "string",
                            "description": "URL with more information about how to get or use an API key.",
                            "example": "https://docs.example.com/api-key",
                            "x-go-type-skip-optional-pointer": true
                          }
                        }
                      },
                      "support": {
                        "title": "Support",
                        "type": "object",
                        "description": "The supported features for the provider.",
                        "x-oapi-codegen-extra-tags": {
                          "validate": "required"
                        },
                        "required": [
                          "bulkWrite",
                          "proxy",
                          "read",
                          "subscribe",
                          "write"
                        ],
                        "properties": {
                          "bulkWrite": {
                            "title": "Bulk Write Support",
                            "type": "object",
                            "x-oapi-codegen-extra-tags": {
                              "validate": "required"
                            },
                            "required": [
                              "insert",
                              "update",
                              "upsert",
                              "delete"
                            ],
                            "properties": {
                              "insert": {
                                "type": "boolean"
                              },
                              "update": {
                                "type": "boolean"
                              },
                              "upsert": {
                                "type": "boolean"
                              },
                              "delete": {
                                "type": "boolean"
                              }
                            }
                          },
                          "proxy": {
                            "type": "boolean"
                          },
                          "read": {
                            "type": "boolean"
                          },
                          "subscribe": {
                            "type": "boolean"
                          },
                          "write": {
                            "type": "boolean"
                          },
                          "subscribeSupport": {
                            "title": "Subscribe Support",
                            "type": "object",
                            "properties": {
                              "create": {
                                "type": "boolean"
                              },
                              "update": {
                                "type": "boolean"
                              },
                              "delete": {
                                "type": "boolean"
                              },
                              "passThrough": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      },
                      "providerOpts": {
                        "title": "Provider Options",
                        "description": "Additional provider-specific metadata.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "displayName": {
                        "type": "string",
                        "example": "Zendesk Chat",
                        "description": "The display name of the provider, if omitted, defaults to provider name.",
                        "x-go-type-skip-optional-pointer": true
                      },
                      "postAuthInfoNeeded": {
                        "type": "boolean",
                        "example": true,
                        "description": "If true, we require additional information after auth to start making requests.",
                        "x-go-type-skip-optional-pointer": true
                      },
                      "media": {
                        "title": "Media",
                        "properties": {
                          "regular": {
                            "title": "Media Type Regular",
                            "type": "object",
                            "description": "Media for light/regular mode.",
                            "properties": {
                              "iconURL": {
                                "type": "string",
                                "example": "https://example.com/icon.png",
                                "description": "URL to the icon for the provider.",
                                "x-go-type-skip-optional-pointer": true
                              },
                              "logoURL": {
                                "type": "string",
                                "example": "https://example.com/logo.png",
                                "description": "URL to the logo for the provider.",
                                "x-go-type-skip-optional-pointer": true
                              }
                            }
                          },
                          "darkMode": {
                            "title": "Media Type Dark Mode",
                            "type": "object",
                            "description": "Media to be used in dark mode.",
                            "properties": {
                              "iconURL": {
                                "type": "string",
                                "example": "https://example.com/icon.png",
                                "description": "URL to the icon for the provider that is to be used in dark mode.",
                                "x-go-type-skip-optional-pointer": true
                              },
                              "logoURL": {
                                "type": "string",
                                "example": "https://example.com/logo.png",
                                "description": "URL to the logo for the provider that is to be used in dark mode.",
                                "x-go-type-skip-optional-pointer": true
                              }
                            }
                          }
                        }
                      },
                      "labels": {
                        "title": "Labels",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "subscribeOpts": {
                        "title": "Subscribe Options",
                        "type": "object",
                        "required": [
                          "subscriptionScope",
                          "targetURLScope",
                          "registrationTiming"
                        ],
                        "properties": {
                          "subscriptionScope": {
                            "type": "string",
                            "enum": [
                              "integration",
                              "installation"
                            ],
                            "description": "The scope of the subscription."
                          },
                          "targetURLScope": {
                            "enum": [
                              "integration",
                              "installation"
                            ],
                            "description": "The scope of the target URL."
                          },
                          "registrationTiming": {
                            "type": "string",
                            "enum": [
                              "providerApp",
                              "integration",
                              "installation"
                            ],
                            "description": "The timing of the registration."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/providers/{provider}": {
      "get": {
        "summary": "Get provider",
        "operationId": "getProvider",
        "tags": [
          "Provider"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ProviderInfo",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Provider Info",
                  "type": "object",
                  "required": [
                    "name",
                    "baseURL",
                    "authType",
                    "support",
                    "providerOpts"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "authType": {
                      "title": "Auth Type",
                      "description": "The type of authentication required by the provider.",
                      "type": "string",
                      "enum": [
                        "oauth2",
                        "apiKey",
                        "basic",
                        "jwt",
                        "none"
                      ],
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      }
                    },
                    "baseURL": {
                      "description": "The base URL for making API requests.",
                      "type": "string",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      }
                    },
                    "oauth2Opts": {
                      "title": "OAuth2 Options",
                      "type": "object",
                      "description": "Configuration for OAuth2.0. Must be provided if authType is oauth2.",
                      "required": [
                        "grantType",
                        "tokenURL",
                        "explicitScopesRequired",
                        "explicitWorkspaceRequired",
                        "tokenMetadataFields"
                      ],
                      "properties": {
                        "grantType": {
                          "type": "string",
                          "enum": [
                            "authorizationCode",
                            "authorizationCodePKCE",
                            "clientCredentials",
                            "password"
                          ]
                        },
                        "authURL": {
                          "type": "string",
                          "example": "https://login.salesforce.com/services/oauth2/authorize",
                          "description": "The authorization URL.",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "tokenURL": {
                          "type": "string",
                          "example": "https://login.salesforce.com/services/oauth2/token",
                          "description": "The token URL.",
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required"
                          }
                        },
                        "explicitScopesRequired": {
                          "type": "boolean",
                          "description": "Whether scopes are required to be known ahead of the OAuth flow.",
                          "example": true
                        },
                        "explicitWorkspaceRequired": {
                          "type": "boolean",
                          "description": "Whether the workspace is required to be known ahead of the OAuth flow.",
                          "example": true
                        },
                        "audience": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "https://api.mparticle.com"
                          ],
                          "description": "A list of URLs that represent the audience for the token, which is needed for some client credential grant flows.",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "tokenMetadataFields": {
                          "title": "Token Metadata Fields",
                          "type": "object",
                          "description": "Fields to be used to extract token metadata from the token response.",
                          "properties": {
                            "workspaceRefField": {
                              "type": "string",
                              "example": "account-id",
                              "x-go-type-skip-optional-pointer": true
                            },
                            "consumerRefField": {
                              "type": "string",
                              "example": "user-id",
                              "x-go-type-skip-optional-pointer": true
                            },
                            "scopesField": {
                              "type": "string",
                              "example": "scopes",
                              "x-go-type-skip-optional-pointer": true
                            }
                          }
                        },
                        "docsURL": {
                          "type": "string",
                          "description": "URL with more information about where to retrieve Client ID and Client Secret, etc.",
                          "example": "https://docs.example.com/client-credentials",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "authURLParams": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-go-type-skip-optional-pointer": true,
                          "example": {
                            "access_type": "offline",
                            "duration": "permanent"
                          }
                        }
                      }
                    },
                    "apiKeyOpts": {
                      "title": "API Key Options",
                      "type": "object",
                      "description": "Configuration for API key. Must be provided if authType is apiKey.",
                      "required": [
                        "attachmentType"
                      ],
                      "properties": {
                        "attachmentType": {
                          "type": "string",
                          "description": "How the API key should be attached to requests.",
                          "enum": [
                            "query",
                            "header"
                          ],
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required"
                          }
                        },
                        "query": {
                          "title": "API Key Query Options",
                          "type": "object",
                          "description": "Configuration for API key in query parameter. Must be provided if type is in-query.",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "api_key",
                              "description": "The name of the query parameter to be used for the API key.",
                              "x-go-type-skip-optional-pointer": true
                            }
                          }
                        },
                        "header": {
                          "title": "API Key Header Options",
                          "type": "object",
                          "description": "Configuration for API key in header. Must be provided if type is in-header.",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "X-Api-Key",
                              "description": "The name of the header to be used for the API key.",
                              "x-go-type-skip-optional-pointer": true
                            },
                            "valuePrefix": {
                              "type": "string",
                              "example": "Bearer ",
                              "description": "The prefix to be added to the API key value when it is sent in the header.",
                              "x-go-type-skip-optional-pointer": true
                            }
                          }
                        },
                        "docsURL": {
                          "type": "string",
                          "description": "URL with more information about how to get or use an API key.",
                          "example": "https://docs.example.com/api-key",
                          "x-go-type-skip-optional-pointer": true
                        }
                      }
                    },
                    "basicOpts": {
                      "title": "Basic Auth Options",
                      "type": "object",
                      "description": "Configuration for Basic Auth. Optional.",
                      "properties": {
                        "apiKeyAsBasic": {
                          "type": "boolean",
                          "example": true,
                          "description": "If true, the provider uses an API key which then gets encoded as a basic auth user:pass string.",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "apiKeyAsBasicOpts": {
                          "title": "API Key as Basic Options",
                          "type": "object",
                          "description": "when this object is present, it means that this provider uses Basic Auth to actually collect an API key",
                          "properties": {
                            "fieldUsed": {
                              "type": "string",
                              "enum": [
                                "username",
                                "password"
                              ],
                              "example": "username",
                              "description": "whether the API key should be used as the username or password.",
                              "x-go-type-skip-optional-pointer": true,
                              "x-enum-varnames": [
                                "UsernameField",
                                "PasswordField"
                              ]
                            },
                            "keyFormat": {
                              "type": "string",
                              "example": "api:%s",
                              "description": "How to transform the API key in to a basic auth user:pass string. The %s is replaced with the API key value.",
                              "x-go-type-skip-optional-pointer": true
                            }
                          }
                        },
                        "docsURL": {
                          "type": "string",
                          "description": "URL with more information about how to get or use an API key.",
                          "example": "https://docs.example.com/api-key",
                          "x-go-type-skip-optional-pointer": true
                        }
                      }
                    },
                    "support": {
                      "title": "Support",
                      "type": "object",
                      "description": "The supported features for the provider.",
                      "x-oapi-codegen-extra-tags": {
                        "validate": "required"
                      },
                      "required": [
                        "bulkWrite",
                        "proxy",
                        "read",
                        "subscribe",
                        "write"
                      ],
                      "properties": {
                        "bulkWrite": {
                          "title": "Bulk Write Support",
                          "type": "object",
                          "x-oapi-codegen-extra-tags": {
                            "validate": "required"
                          },
                          "required": [
                            "insert",
                            "update",
                            "upsert",
                            "delete"
                          ],
                          "properties": {
                            "insert": {
                              "type": "boolean"
                            },
                            "update": {
                              "type": "boolean"
                            },
                            "upsert": {
                              "type": "boolean"
                            },
                            "delete": {
                              "type": "boolean"
                            }
                          }
                        },
                        "proxy": {
                          "type": "boolean"
                        },
                        "read": {
                          "type": "boolean"
                        },
                        "subscribe": {
                          "type": "boolean"
                        },
                        "write": {
                          "type": "boolean"
                        },
                        "subscribeSupport": {
                          "title": "Subscribe Support",
                          "type": "object",
                          "properties": {
                            "create": {
                              "type": "boolean"
                            },
                            "update": {
                              "type": "boolean"
                            },
                            "delete": {
                              "type": "boolean"
                            },
                            "passThrough": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "providerOpts": {
                      "title": "Provider Options",
                      "description": "Additional provider-specific metadata.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "example": "Zendesk Chat",
                      "description": "The display name of the provider, if omitted, defaults to provider name.",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "postAuthInfoNeeded": {
                      "type": "boolean",
                      "example": true,
                      "description": "If true, we require additional information after auth to start making requests.",
                      "x-go-type-skip-optional-pointer": true
                    },
                    "media": {
                      "title": "Media",
                      "properties": {
                        "regular": {
                          "title": "Media Type Regular",
                          "type": "object",
                          "description": "Media for light/regular mode.",
                          "properties": {
                            "iconURL": {
                              "type": "string",
                              "example": "https://example.com/icon.png",
                              "description": "URL to the icon for the provider.",
                              "x-go-type-skip-optional-pointer": true
                            },
                            "logoURL": {
                              "type": "string",
                              "example": "https://example.com/logo.png",
                              "description": "URL to the logo for the provider.",
                              "x-go-type-skip-optional-pointer": true
                            }
                          }
                        },
                        "darkMode": {
                          "title": "Media Type Dark Mode",
                          "type": "object",
                          "description": "Media to be used in dark mode.",
                          "properties": {
                            "iconURL": {
                              "type": "string",
                              "example": "https://example.com/icon.png",
                              "description": "URL to the icon for the provider that is to be used in dark mode.",
                              "x-go-type-skip-optional-pointer": true
                            },
                            "logoURL": {
                              "type": "string",
                              "example": "https://example.com/logo.png",
                              "description": "URL to the logo for the provider that is to be used in dark mode.",
                              "x-go-type-skip-optional-pointer": true
                            }
                          }
                        }
                      }
                    },
                    "labels": {
                      "title": "Labels",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "subscribeOpts": {
                      "title": "Subscribe Options",
                      "type": "object",
                      "required": [
                        "subscriptionScope",
                        "targetURLScope",
                        "registrationTiming"
                      ],
                      "properties": {
                        "subscriptionScope": {
                          "type": "string",
                          "enum": [
                            "integration",
                            "installation"
                          ],
                          "description": "The scope of the subscription."
                        },
                        "targetURLScope": {
                          "enum": [
                            "integration",
                            "installation"
                          ],
                          "description": "The scope of the target URL."
                        },
                        "registrationTiming": {
                          "type": "string",
                          "enum": [
                            "providerApp",
                            "integration",
                            "installation"
                          ],
                          "description": "The timing of the registration."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/api-keys": {
      "get": {
        "x-speakeasy-ignore": true,
        "summary": "List API keys",
        "operationId": "listApiKeys",
        "tags": [
          "API Key"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Whether to include only active API keys. If false, all API keys are included.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of API keys",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "API Key",
                    "type": "object",
                    "required": [
                      "key",
                      "projectId",
                      "label",
                      "scopes"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "The API key.",
                        "example": "api-key-123"
                      },
                      "label": {
                        "type": "string",
                        "description": "A short name for the API key.",
                        "example": "MailMonkey API Key"
                      },
                      "scopes": {
                        "title": "API Key Scopes",
                        "type": "array",
                        "description": "The scopes for the API key.",
                        "items": {
                          "type": "string",
                          "example": [
                            "full",
                            "frontend"
                          ]
                        }
                      },
                      "projectId": {
                        "type": "string",
                        "description": "The project ID.",
                        "example": "project-id-123"
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Whether the API key is active.",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "x-speakeasy-ignore": true,
        "summary": "Create a new API key",
        "operationId": "createApiKey",
        "tags": [
          "API Key"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "API Key Request",
                "type": "object",
                "required": [
                  "label"
                ],
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "A short name for the API key.",
                    "example": "MailMonkey API Key"
                  },
                  "scopes": {
                    "title": "API Key Scopes",
                    "type": "array",
                    "description": "The scopes for the API key.",
                    "items": {
                      "type": "string",
                      "example": [
                        "full",
                        "frontend"
                      ]
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "API Key",
                  "type": "object",
                  "required": [
                    "key",
                    "projectId",
                    "label",
                    "scopes"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "The API key.",
                      "example": "api-key-123"
                    },
                    "label": {
                      "type": "string",
                      "description": "A short name for the API key.",
                      "example": "MailMonkey API Key"
                    },
                    "scopes": {
                      "title": "API Key Scopes",
                      "type": "array",
                      "description": "The scopes for the API key.",
                      "items": {
                        "type": "string",
                        "example": [
                          "full",
                          "frontend"
                        ]
                      }
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The project ID.",
                      "example": "project-id-123"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Whether the API key is active.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "apiKey"
      }
    },
    "/projects/{projectIdOrName}/api-keys/{apiKey}": {
      "get": {
        "x-speakeasy-ignore": true,
        "summary": "Get an API key",
        "operationId": "getApiKey",
        "tags": [
          "API Key"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "API key",
            "content": {
              "application/json": {
                "schema": {
                  "title": "API Key",
                  "type": "object",
                  "required": [
                    "key",
                    "projectId",
                    "label",
                    "scopes"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "The API key.",
                      "example": "api-key-123"
                    },
                    "label": {
                      "type": "string",
                      "description": "A short name for the API key.",
                      "example": "MailMonkey API Key"
                    },
                    "scopes": {
                      "title": "API Key Scopes",
                      "type": "array",
                      "description": "The scopes for the API key.",
                      "items": {
                        "type": "string",
                        "example": [
                          "full",
                          "frontend"
                        ]
                      }
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The project ID.",
                      "example": "project-id-123"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Whether the API key is active.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "API key not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "x-speakeasy-ignore": true,
        "summary": "Delete an API key",
        "operationId": "deleteApiKey",
        "tags": [
          "API Key"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "x-speakeasy-ignore": true,
        "summary": "Update an API key",
        "operationId": "updateApiKey",
        "tags": [
          "API Key"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Patch API Key Request",
                "type": "object",
                "required": [
                  "updateMask",
                  "apiKey"
                ],
                "properties": {
                  "updateMask": {
                    "type": "array",
                    "example": [
                      "label",
                      "active",
                      "scopes"
                    ],
                    "items": {
                      "type": "string",
                      "description": "fields to update.",
                      "example": "label"
                    }
                  },
                  "apiKey": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "A short name for the API key.",
                        "example": "MailMonkey API Key"
                      },
                      "active": {
                        "type": "boolean",
                        "description": "Whether the API key is active.",
                        "example": true
                      },
                      "scopes": {
                        "title": "API Key Scopes",
                        "type": "array",
                        "description": "The scopes for the API key.",
                        "items": {
                          "type": "string",
                          "example": [
                            "full",
                            "frontend"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "API key updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "API Key",
                  "type": "object",
                  "required": [
                    "key",
                    "projectId",
                    "label",
                    "scopes"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "The API key.",
                      "example": "api-key-123"
                    },
                    "label": {
                      "type": "string",
                      "description": "A short name for the API key.",
                      "example": "MailMonkey API Key"
                    },
                    "scopes": {
                      "title": "API Key Scopes",
                      "type": "array",
                      "description": "The scopes for the API key.",
                      "items": {
                        "type": "string",
                        "example": [
                          "full",
                          "frontend"
                        ]
                      }
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The project ID.",
                      "example": "project-id-123"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "Whether the API key is active.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/connections": {
      "get": {
        "summary": "List connections",
        "operationId": "listConnections",
        "tags": [
          "Connection"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "description": "The provider name (e.g. \"salesforce\", \"hubspot\")",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupRef",
            "in": "query",
            "description": "The ID of the user group that has access to this installation.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "consumerRef",
            "in": "query",
            "description": "The consumer reference.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of project connections.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Connection",
                    "required": [
                      "id",
                      "createTime",
                      "group",
                      "consumer",
                      "projectId",
                      "provider",
                      "authScheme",
                      "status"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The connection ID.",
                        "example": "connection-123"
                      },
                      "projectId": {
                        "type": "string",
                        "description": "The Ampersand project ID.",
                        "example": "project-456"
                      },
                      "provider": {
                        "type": "string",
                        "description": "The SaaS provider that this Connection is for.",
                        "example": "salesforce"
                      },
                      "providerApp": {
                        "title": "Provider App",
                        "required": [
                          "clientId",
                          "createTime",
                          "id",
                          "projectId",
                          "provider"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The provider app ID.",
                            "example": "provider-app-123"
                          },
                          "projectId": {
                            "type": "string",
                            "description": "The Ampersand project ID.",
                            "example": "project-456"
                          },
                          "externalRef": {
                            "type": "string",
                            "description": "The ID used by the provider to identify the app (optional).",
                            "example": "external-id-123"
                          },
                          "provider": {
                            "type": "string",
                            "description": "The SaaS provider that this app connects to.",
                            "example": "salesforce"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "The OAuth client ID for this app.",
                            "example": "client-id-123"
                          },
                          "scopes": {
                            "type": "array",
                            "description": "The OAuth scopes for this app.",
                            "items": {
                              "type": "string",
                              "example": [
                                "oauth",
                                "offline",
                                "crm.read"
                              ]
                            }
                          },
                          "createTime": {
                            "type": "string",
                            "description": "The time the provider app was created.",
                            "format": "date-time"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "The time the provider app was updated.",
                            "format": "date-time"
                          }
                        }
                      },
                      "group": {
                        "title": "Group",
                        "required": [
                          "createTime",
                          "groupName",
                          "groupRef",
                          "projectId"
                        ],
                        "type": "object",
                        "properties": {
                          "groupRef": {
                            "type": "string",
                            "description": "The ID of the user group that has access to this installation.",
                            "example": "group-123"
                          },
                          "groupName": {
                            "type": "string",
                            "description": "The name of the user group that has access to this installation.",
                            "example": "Super Customer"
                          },
                          "projectId": {
                            "type": "string",
                            "description": "The Ampersand project ID.",
                            "example": "project-456"
                          },
                          "createTime": {
                            "type": "string",
                            "description": "The time the group was created.",
                            "format": "date-time",
                            "example": "2023-07-13T21:34:44.816Z"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "The time the group was last updated.",
                            "format": "date-time",
                            "example": "2023-07-13T21:34:44.816Z"
                          }
                        }
                      },
                      "consumer": {
                        "title": "Consumer",
                        "required": [
                          "consumerName",
                          "consumerRef",
                          "createTime",
                          "projectId"
                        ],
                        "type": "object",
                        "properties": {
                          "consumerRef": {
                            "type": "string",
                            "description": "The consumer reference.",
                            "example": "consumer-123"
                          },
                          "consumerName": {
                            "type": "string",
                            "description": "The name of the consumer.",
                            "example": "Super Customer"
                          },
                          "projectId": {
                            "type": "string",
                            "description": "The Ampersand project ID.",
                            "example": "project-456"
                          },
                          "createTime": {
                            "type": "string",
                            "description": "The time the consumer was created.",
                            "format": "date-time",
                            "example": "2023-07-13T21:34:44.816Z"
                          },
                          "updateTime": {
                            "type": "string",
                            "description": "The time the consumer was last updated.",
                            "format": "date-time",
                            "example": "2023-07-13T21:34:44.816Z"
                          }
                        }
                      },
                      "providerWorkspaceRef": {
                        "type": "string",
                        "description": "If available, the identifier for the provider workspace (e.g. \"salesforce-instance-domain\")",
                        "example": "provider-workspace-123"
                      },
                      "providerConsumerRef": {
                        "type": "string",
                        "description": "If available, the ID that Salesforce/Hubspot uses to identify this user (e.g. Salesforce has IDs in the form of https://login.salesforce.com/id/00D4x0000019CQTEA2/0054x000000orJ4AA)",
                        "example": "provider-consumer-123"
                      },
                      "createTime": {
                        "type": "string",
                        "description": "The time the connection was created.",
                        "format": "date-time",
                        "example": "2023-07-13T21:34:44.816Z"
                      },
                      "updateTime": {
                        "type": "string",
                        "description": "The time the connection was last updated.",
                        "format": "date-time",
                        "example": "2023-07-13T21:34:44.816Z"
                      },
                      "authScheme": {
                        "type": "string",
                        "description": "The authentication scheme used for this connection.",
                        "example": "oauth2/authorizationCode",
                        "enum": [
                          "none",
                          "apiKey",
                          "basic",
                          "oauth2/authorizationCode",
                          "oauth2/authorizationCodePKCE",
                          "oauth2/clientCredentials",
                          "oauth2/password"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the connection.",
                        "example": "working",
                        "enum": [
                          "created",
                          "working",
                          "bad_credentials"
                        ]
                      },
                      "oauth2AuthorizationCode": {
                        "title": "OAuth2 AuthorizationCode Token",
                        "type": "object",
                        "properties": {
                          "accessToken": {
                            "type": "object",
                            "required": [
                              "token"
                            ],
                            "description": "The access token for the connection.",
                            "properties": {
                              "token": {
                                "type": "string"
                              },
                              "issuedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "expiresAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-22T18:55:28.456076Z"
                              }
                            }
                          },
                          "refreshToken": {
                            "type": "object",
                            "required": [
                              "token"
                            ],
                            "description": "The refresh token to use for the connection.",
                            "properties": {
                              "token": {
                                "type": "string"
                              },
                              "issuedAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "expiresAt": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2024-10-22T18:55:28.456076Z"
                              }
                            }
                          },
                          "scopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The scopes for the tokens."
                          }
                        }
                      },
                      "apiKey": {
                        "type": "string",
                        "description": "The API key used while making the connection.",
                        "example": "api-key-123"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/connections:generate": {
      "post": {
        "summary": "Generate a new connection",
        "description": "For providers which support OAuth2 Authorization Code, it is recommended that you use the [/oauth-connect endpoint](https://docs.withampersand.com/reference/oauth/get-url-for-oauth-flow) instead, unless you already have the refresh token and are importing it into Ampersand.",
        "operationId": "generateConnection",
        "tags": [
          "Connection"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "groupRef",
                  "consumerRef",
                  "provider"
                ],
                "properties": {
                  "providerWorkspaceRef": {
                    "type": "string",
                    "description": "The ID of the provider workspace that this connection belongs to."
                  },
                  "groupName": {
                    "type": "string",
                    "description": "The name of the user group that has access to this installation."
                  },
                  "groupRef": {
                    "type": "string",
                    "description": "The ID of the user group that has access to this installation."
                  },
                  "consumerName": {
                    "type": "string",
                    "description": "The name of the consumer that has access to this installation."
                  },
                  "consumerRef": {
                    "type": "string",
                    "description": "The consumer reference."
                  },
                  "provider": {
                    "type": "string",
                    "description": "The provider name (e.g. \"salesforce\", \"hubspot\")"
                  },
                  "apiKey": {
                    "type": "string",
                    "description": "The API key to use for the connection."
                  },
                  "basicAuth": {
                    "type": "object",
                    "required": [
                      "username",
                      "password"
                    ],
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "The username to use for the connection."
                      },
                      "password": {
                        "type": "string",
                        "description": "The password to use for the connection."
                      }
                    }
                  },
                  "oauth2ClientCredentials": {
                    "type": "object",
                    "required": [
                      "clientId",
                      "clientSecret"
                    ],
                    "properties": {
                      "clientId": {
                        "type": "string",
                        "description": "The client ID to use for the connection."
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "The client secret to use for the connection."
                      },
                      "scopes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The scopes for the tokens."
                      }
                    }
                  },
                  "oauth2Password": {
                    "type": "object",
                    "required": [
                      "username",
                      "password",
                      "clientId",
                      "clientSecret"
                    ],
                    "properties": {
                      "username": {
                        "type": "string",
                        "description": "The username to use for the connection."
                      },
                      "password": {
                        "type": "string",
                        "description": "The password to use for the connection."
                      },
                      "clientId": {
                        "type": "string",
                        "description": "The client ID to use for the connection."
                      },
                      "clientSecret": {
                        "type": "string",
                        "description": "The client secret to use for the connection."
                      },
                      "scopes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The scopes for the tokens."
                      }
                    }
                  },
                  "oauth2AuthorizationCode": {
                    "title": "OAuth2 Authorization Code",
                    "type": "object",
                    "properties": {
                      "accessToken": {
                        "type": "object",
                        "required": [
                          "token"
                        ],
                        "description": "The access token for the connection.",
                        "properties": {
                          "token": {
                            "type": "string"
                          },
                          "expiresAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "issuedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "refreshToken": {
                        "type": "object",
                        "required": [
                          "token"
                        ],
                        "description": "The refresh token to use for the connection.",
                        "properties": {
                          "token": {
                            "type": "string"
                          },
                          "expiresAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "issuedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "scopes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The scopes for the tokens."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Connection",
                  "required": [
                    "id",
                    "createTime",
                    "group",
                    "consumer",
                    "projectId",
                    "provider",
                    "authScheme",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The connection ID.",
                      "example": "connection-123"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The Ampersand project ID.",
                      "example": "project-456"
                    },
                    "provider": {
                      "type": "string",
                      "description": "The SaaS provider that this Connection is for.",
                      "example": "salesforce"
                    },
                    "providerApp": {
                      "title": "Provider App",
                      "required": [
                        "clientId",
                        "createTime",
                        "id",
                        "projectId",
                        "provider"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The provider app ID.",
                          "example": "provider-app-123"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "externalRef": {
                          "type": "string",
                          "description": "The ID used by the provider to identify the app (optional).",
                          "example": "external-id-123"
                        },
                        "provider": {
                          "type": "string",
                          "description": "The SaaS provider that this app connects to.",
                          "example": "salesforce"
                        },
                        "clientId": {
                          "type": "string",
                          "description": "The OAuth client ID for this app.",
                          "example": "client-id-123"
                        },
                        "scopes": {
                          "type": "array",
                          "description": "The OAuth scopes for this app.",
                          "items": {
                            "type": "string",
                            "example": [
                              "oauth",
                              "offline",
                              "crm.read"
                            ]
                          }
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the provider app was created.",
                          "format": "date-time"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the provider app was updated.",
                          "format": "date-time"
                        }
                      }
                    },
                    "group": {
                      "title": "Group",
                      "required": [
                        "createTime",
                        "groupName",
                        "groupRef",
                        "projectId"
                      ],
                      "type": "object",
                      "properties": {
                        "groupRef": {
                          "type": "string",
                          "description": "The ID of the user group that has access to this installation.",
                          "example": "group-123"
                        },
                        "groupName": {
                          "type": "string",
                          "description": "The name of the user group that has access to this installation.",
                          "example": "Super Customer"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the group was created.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the group was last updated.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        }
                      }
                    },
                    "consumer": {
                      "title": "Consumer",
                      "required": [
                        "consumerName",
                        "consumerRef",
                        "createTime",
                        "projectId"
                      ],
                      "type": "object",
                      "properties": {
                        "consumerRef": {
                          "type": "string",
                          "description": "The consumer reference.",
                          "example": "consumer-123"
                        },
                        "consumerName": {
                          "type": "string",
                          "description": "The name of the consumer.",
                          "example": "Super Customer"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the consumer was created.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the consumer was last updated.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        }
                      }
                    },
                    "providerWorkspaceRef": {
                      "type": "string",
                      "description": "If available, the identifier for the provider workspace (e.g. \"salesforce-instance-domain\")",
                      "example": "provider-workspace-123"
                    },
                    "providerConsumerRef": {
                      "type": "string",
                      "description": "If available, the ID that Salesforce/Hubspot uses to identify this user (e.g. Salesforce has IDs in the form of https://login.salesforce.com/id/00D4x0000019CQTEA2/0054x000000orJ4AA)",
                      "example": "provider-consumer-123"
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the connection was created.",
                      "format": "date-time",
                      "example": "2023-07-13T21:34:44.816Z"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the connection was last updated.",
                      "format": "date-time",
                      "example": "2023-07-13T21:34:44.816Z"
                    },
                    "authScheme": {
                      "type": "string",
                      "description": "The authentication scheme used for this connection.",
                      "example": "oauth2/authorizationCode",
                      "enum": [
                        "none",
                        "apiKey",
                        "basic",
                        "oauth2/authorizationCode",
                        "oauth2/authorizationCodePKCE",
                        "oauth2/clientCredentials",
                        "oauth2/password"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the connection.",
                      "example": "working",
                      "enum": [
                        "created",
                        "working",
                        "bad_credentials"
                      ]
                    },
                    "oauth2AuthorizationCode": {
                      "title": "OAuth2 AuthorizationCode Token",
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "object",
                          "required": [
                            "token"
                          ],
                          "description": "The access token for the connection.",
                          "properties": {
                            "token": {
                              "type": "string"
                            },
                            "issuedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-04-22T18:55:28.456076Z"
                            },
                            "expiresAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-10-22T18:55:28.456076Z"
                            }
                          }
                        },
                        "refreshToken": {
                          "type": "object",
                          "required": [
                            "token"
                          ],
                          "description": "The refresh token to use for the connection.",
                          "properties": {
                            "token": {
                              "type": "string"
                            },
                            "issuedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-04-22T18:55:28.456076Z"
                            },
                            "expiresAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-10-22T18:55:28.456076Z"
                            }
                          }
                        },
                        "scopes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The scopes for the tokens."
                        }
                      }
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "The API key used while making the connection.",
                      "example": "api-key-123"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "generateConnectionParams"
      }
    },
    "/projects/{projectIdOrName}/connections/{connectionId}": {
      "get": {
        "summary": "Get a connection",
        "operationId": "getConnection",
        "tags": [
          "Connection"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeCreds",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the credentials in the response. Only access token will be included. Default is false."
          },
          {
            "name": "includeRefreshToken",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to include the refresh token in credentials in the response along with access token. If true, the `includeCreds` query parameter will be ignored. Default is false."
          },
          {
            "name": "refresh",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "force",
                "ifExpired"
              ]
            },
            "description": "Whether to refresh the access token. If value is `ifExpired`, the access token will be refreshed only if it has expired. If value is `force`, the access token will be refreshed regardless of its expiration."
          }
        ],
        "responses": {
          "200": {
            "description": "Connection",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Connection",
                  "required": [
                    "id",
                    "createTime",
                    "group",
                    "consumer",
                    "projectId",
                    "provider",
                    "authScheme",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The connection ID.",
                      "example": "connection-123"
                    },
                    "projectId": {
                      "type": "string",
                      "description": "The Ampersand project ID.",
                      "example": "project-456"
                    },
                    "provider": {
                      "type": "string",
                      "description": "The SaaS provider that this Connection is for.",
                      "example": "salesforce"
                    },
                    "providerApp": {
                      "title": "Provider App",
                      "required": [
                        "clientId",
                        "createTime",
                        "id",
                        "projectId",
                        "provider"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The provider app ID.",
                          "example": "provider-app-123"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "externalRef": {
                          "type": "string",
                          "description": "The ID used by the provider to identify the app (optional).",
                          "example": "external-id-123"
                        },
                        "provider": {
                          "type": "string",
                          "description": "The SaaS provider that this app connects to.",
                          "example": "salesforce"
                        },
                        "clientId": {
                          "type": "string",
                          "description": "The OAuth client ID for this app.",
                          "example": "client-id-123"
                        },
                        "scopes": {
                          "type": "array",
                          "description": "The OAuth scopes for this app.",
                          "items": {
                            "type": "string",
                            "example": [
                              "oauth",
                              "offline",
                              "crm.read"
                            ]
                          }
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the provider app was created.",
                          "format": "date-time"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the provider app was updated.",
                          "format": "date-time"
                        }
                      }
                    },
                    "group": {
                      "title": "Group",
                      "required": [
                        "createTime",
                        "groupName",
                        "groupRef",
                        "projectId"
                      ],
                      "type": "object",
                      "properties": {
                        "groupRef": {
                          "type": "string",
                          "description": "The ID of the user group that has access to this installation.",
                          "example": "group-123"
                        },
                        "groupName": {
                          "type": "string",
                          "description": "The name of the user group that has access to this installation.",
                          "example": "Super Customer"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the group was created.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the group was last updated.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        }
                      }
                    },
                    "consumer": {
                      "title": "Consumer",
                      "required": [
                        "consumerName",
                        "consumerRef",
                        "createTime",
                        "projectId"
                      ],
                      "type": "object",
                      "properties": {
                        "consumerRef": {
                          "type": "string",
                          "description": "The consumer reference.",
                          "example": "consumer-123"
                        },
                        "consumerName": {
                          "type": "string",
                          "description": "The name of the consumer.",
                          "example": "Super Customer"
                        },
                        "projectId": {
                          "type": "string",
                          "description": "The Ampersand project ID.",
                          "example": "project-456"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time the consumer was created.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        },
                        "updateTime": {
                          "type": "string",
                          "description": "The time the consumer was last updated.",
                          "format": "date-time",
                          "example": "2023-07-13T21:34:44.816Z"
                        }
                      }
                    },
                    "providerWorkspaceRef": {
                      "type": "string",
                      "description": "If available, the identifier for the provider workspace (e.g. \"salesforce-instance-domain\")",
                      "example": "provider-workspace-123"
                    },
                    "providerConsumerRef": {
                      "type": "string",
                      "description": "If available, the ID that Salesforce/Hubspot uses to identify this user (e.g. Salesforce has IDs in the form of https://login.salesforce.com/id/00D4x0000019CQTEA2/0054x000000orJ4AA)",
                      "example": "provider-consumer-123"
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the connection was created.",
                      "format": "date-time",
                      "example": "2023-07-13T21:34:44.816Z"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the connection was last updated.",
                      "format": "date-time",
                      "example": "2023-07-13T21:34:44.816Z"
                    },
                    "authScheme": {
                      "type": "string",
                      "description": "The authentication scheme used for this connection.",
                      "example": "oauth2/authorizationCode",
                      "enum": [
                        "none",
                        "apiKey",
                        "basic",
                        "oauth2/authorizationCode",
                        "oauth2/authorizationCodePKCE",
                        "oauth2/clientCredentials",
                        "oauth2/password"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the connection.",
                      "example": "working",
                      "enum": [
                        "created",
                        "working",
                        "bad_credentials"
                      ]
                    },
                    "oauth2AuthorizationCode": {
                      "title": "OAuth2 AuthorizationCode Token",
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "object",
                          "required": [
                            "token"
                          ],
                          "description": "The access token for the connection.",
                          "properties": {
                            "token": {
                              "type": "string"
                            },
                            "issuedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-04-22T18:55:28.456076Z"
                            },
                            "expiresAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-10-22T18:55:28.456076Z"
                            }
                          }
                        },
                        "refreshToken": {
                          "type": "object",
                          "required": [
                            "token"
                          ],
                          "description": "The refresh token to use for the connection.",
                          "properties": {
                            "token": {
                              "type": "string"
                            },
                            "issuedAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-04-22T18:55:28.456076Z"
                            },
                            "expiresAt": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2024-10-22T18:55:28.456076Z"
                            }
                          }
                        },
                        "scopes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The scopes for the tokens."
                        }
                      }
                    },
                    "apiKey": {
                      "type": "string",
                      "description": "The API key used while making the connection.",
                      "example": "api-key-123"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a connection",
        "operationId": "deleteConnection",
        "tags": [
          "Connection"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/groups": {
      "post": {
        "summary": "Create a new group",
        "operationId": "createGroup",
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "groupName",
                  "groupRef"
                ],
                "type": "object",
                "properties": {
                  "groupRef": {
                    "type": "string",
                    "description": "The ID of the user group that has access to this installation.",
                    "example": "group-123"
                  },
                  "groupName": {
                    "type": "string",
                    "description": "The name of the user group that has access to this installation.",
                    "example": "Super Customers"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "group"
      }
    },
    "/projects/{projectIdOrName}/consumers": {
      "post": {
        "summary": "Create a new consumer",
        "operationId": "createConsumer",
        "tags": [
          "Consumer"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "consumerName",
                  "consumerRef"
                ],
                "type": "object",
                "properties": {
                  "consumerRef": {
                    "type": "string",
                    "description": "The consumer reference.",
                    "example": "consumer-123"
                  },
                  "consumerName": {
                    "type": "string",
                    "description": "The name of the consumer that has access to this installation.",
                    "example": "John doe"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "consumer"
      }
    },
    "/projects/{projectIdOrName}/destinations": {
      "post": {
        "summary": "Create a new destination",
        "operationId": "createDestination",
        "tags": [
          "Destination"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "type",
                  "metadata"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name for the new destination. Must be unique within the project and can only contain letters, numbers and dashes.",
                    "example": "leadConvertedWebhook"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the destination",
                    "example": "webhook"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "description": "Webhook URL, must start with \"https://\".",
                        "example": "https://webhooks.mailmonkey.com/salesforce-lead-converted"
                      },
                      "headers": {
                        "title": "Webhook Headers",
                        "type": "object",
                        "nullable": true,
                        "description": "Additional headers to add when Ampersand sends a webhook message",
                        "additionalProperties": {
                          "type": "string",
                          "nullable": false
                        },
                        "example": {
                          "Authorization": "Bearer 1234"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Destination",
                  "required": [
                    "id",
                    "name",
                    "type",
                    "metadata",
                    "createTime"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The destination ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "User-defined name for the destination",
                      "example": "leadConvertedWebhook"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the destination",
                      "example": "webhook"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Webhook URL",
                          "example": "https://webhooks.mailmonkey.com/salesforce-lead-converted"
                        },
                        "headers": {
                          "title": "Webhook Headers",
                          "type": "object",
                          "nullable": true,
                          "description": "Additional headers to add when Ampersand sends a webhook message",
                          "additionalProperties": {
                            "type": "string",
                            "nullable": false
                          },
                          "example": {
                            "Authorization": "Bearer 1234"
                          }
                        }
                      }
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the destination was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the destination was updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "destination"
      },
      "get": {
        "summary": "List destinations",
        "operationId": "listDestinations",
        "tags": [
          "Destination"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of destinations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Destination",
                    "required": [
                      "id",
                      "name",
                      "type",
                      "metadata",
                      "createTime"
                    ],
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The destination ID."
                      },
                      "name": {
                        "type": "string",
                        "description": "User-defined name for the destination",
                        "example": "leadConvertedWebhook"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the destination",
                        "example": "webhook"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Webhook URL",
                            "example": "https://webhooks.mailmonkey.com/salesforce-lead-converted"
                          },
                          "headers": {
                            "title": "Webhook Headers",
                            "type": "object",
                            "nullable": true,
                            "description": "Additional headers to add when Ampersand sends a webhook message",
                            "additionalProperties": {
                              "type": "string",
                              "nullable": false
                            },
                            "example": {
                              "Authorization": "Bearer 1234"
                            }
                          }
                        }
                      },
                      "createTime": {
                        "type": "string",
                        "description": "The time the destination was created.",
                        "format": "date-time"
                      },
                      "updateTime": {
                        "type": "string",
                        "description": "The time the destination was updated.",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/projects/{projectIdOrName}/destinations/{destination}": {
      "get": {
        "summary": "Get a destination",
        "operationId": "getDestination",
        "tags": [
          "Destination"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The destination name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Destination",
                  "required": [
                    "id",
                    "name",
                    "type",
                    "metadata",
                    "createTime"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The destination ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "User-defined name for the destination",
                      "example": "leadConvertedWebhook"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the destination",
                      "example": "webhook"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Webhook URL",
                          "example": "https://webhooks.mailmonkey.com/salesforce-lead-converted"
                        },
                        "headers": {
                          "title": "Webhook Headers",
                          "type": "object",
                          "nullable": true,
                          "description": "Additional headers to add when Ampersand sends a webhook message",
                          "additionalProperties": {
                            "type": "string",
                            "nullable": false
                          },
                          "example": {
                            "Authorization": "Bearer 1234"
                          }
                        }
                      }
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the destination was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the destination was updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Destination not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a destination",
        "operationId": "updateDestination",
        "tags": [
          "Destination"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The destination ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "updateMask",
                  "destination"
                ],
                "properties": {
                  "updateMask": {
                    "type": "array",
                    "example": [
                      "name",
                      "metadata.url",
                      "metadata.headers"
                    ],
                    "items": {
                      "type": "string",
                      "description": "fields to update."
                    }
                  },
                  "destination": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "User-friendly name for the destination",
                        "example": "leadConvertedWebhook"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Webhook URL",
                            "example": "https://webhooks.mailmonkey.com/salesforce-lead-converted"
                          },
                          "headers": {
                            "title": "Webhook Headers",
                            "type": "object",
                            "nullable": true,
                            "description": "Additional headers to add when Ampersand sends a webhook message",
                            "additionalProperties": {
                              "type": "string",
                              "nullable": false
                            },
                            "example": {
                              "Authorization": "Bearer 1234"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Destination",
                  "required": [
                    "id",
                    "name",
                    "type",
                    "metadata",
                    "createTime"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The destination ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "User-defined name for the destination",
                      "example": "leadConvertedWebhook"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the destination",
                      "example": "webhook"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Webhook URL",
                          "example": "https://webhooks.mailmonkey.com/salesforce-lead-converted"
                        },
                        "headers": {
                          "title": "Webhook Headers",
                          "type": "object",
                          "nullable": true,
                          "description": "Additional headers to add when Ampersand sends a webhook message",
                          "additionalProperties": {
                            "type": "string",
                            "nullable": false
                          },
                          "example": {
                            "Authorization": "Bearer 1234"
                          }
                        }
                      }
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the destination was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the destination was updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Destination not found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "destinationUpdate"
      },
      "delete": {
        "summary": "Delete a destination",
        "operationId": "deleteDestination",
        "tags": [
          "Destination"
        ],
        "parameters": [
          {
            "name": "projectIdOrName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "destination",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The destination ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/generate-upload-url": {
      "get": {
        "summary": "Generate a signed URL to upload a zip file to.",
        "operationId": "generateUploadUrl",
        "tags": [
          "Upload URL"
        ],
        "responses": {
          "200": {
            "description": "Signed URL",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Signed URL",
                  "type": "object",
                  "required": [
                    "url",
                    "bucket",
                    "path"
                  ],
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The signed URL to upload the zip file to."
                    },
                    "bucket": {
                      "type": "string",
                      "description": "The bucket (will match the bucket part of the url)."
                    },
                    "path": {
                      "type": "string",
                      "description": "The path (will match the path part of the url)."
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orgs": {
      "post": {
        "x-speakeasy-ignore": true,
        "summary": "Create a new organization",
        "operationId": "createOrg",
        "tags": [
          "Org"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "label"
                ],
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "The organization label.",
                    "example": "org-123"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The newly created org",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Organisation",
                  "required": [
                    "id",
                    "label",
                    "createTime",
                    "defaultTeamId"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The organization ID.",
                      "example": "org-123"
                    },
                    "label": {
                      "type": "string",
                      "description": "The organization label.",
                      "example": "Acme Inc"
                    },
                    "defaultTeamId": {
                      "type": "string",
                      "description": "The ID of the Everyone team for the org."
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the organization was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the organization was updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "org"
      }
    },
    "/orgs/{orgId}": {
      "get": {
        "x-speakeasy-ignore": true,
        "summary": "Get an organization",
        "operationId": "getOrg",
        "tags": [
          "Org"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organization",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Organisation",
                  "required": [
                    "id",
                    "label",
                    "createTime",
                    "defaultTeamId"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The organization ID.",
                      "example": "org-123"
                    },
                    "label": {
                      "type": "string",
                      "description": "The organization label.",
                      "example": "Acme Inc"
                    },
                    "defaultTeamId": {
                      "type": "string",
                      "description": "The ID of the Everyone team for the org."
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the organization was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the organization was updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "x-speakeasy-ignore": true,
        "summary": "Update an organization",
        "operationId": "updateOrg",
        "tags": [
          "Org"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "updateMask",
                  "org"
                ],
                "properties": {
                  "updateMask": {
                    "type": "array",
                    "example": [
                      "label"
                    ],
                    "items": {
                      "type": "string",
                      "description": "fields to update."
                    }
                  },
                  "org": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "The organization label.",
                        "example": "org-123"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated org",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Organisation",
                  "required": [
                    "id",
                    "label",
                    "createTime",
                    "defaultTeamId"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The organization ID.",
                      "example": "org-123"
                    },
                    "label": {
                      "type": "string",
                      "description": "The organization label.",
                      "example": "Acme Inc"
                    },
                    "defaultTeamId": {
                      "type": "string",
                      "description": "The ID of the Everyone team for the org."
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the organization was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the organization was updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "orgUpdate"
        }
      }
    },
    "/orgs/{orgId}/builders": {
      "get": {
        "x-speakeasy-ignore": true,
        "summary": "List builders for an organization",
        "operationId": "listOrgBuilders",
        "tags": [
          "Org"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of builders that are a part of the org",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Builder",
                    "type": "object",
                    "required": [
                      "id",
                      "idpProvider",
                      "idpRef",
                      "createTime"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The builder ID.",
                        "example": "builder-id-123"
                      },
                      "idpProvider": {
                        "type": "string",
                        "description": "The identity provider",
                        "example": "clerk"
                      },
                      "idpRef": {
                        "type": "string",
                        "description": "ID used by the identity provider"
                      },
                      "createTime": {
                        "type": "string",
                        "description": "The time that the builder joined Ampersand.",
                        "format": "date-time"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "fullName": {
                        "type": "string"
                      },
                      "primaryEmail": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgId}/invites": {
      "post": {
        "x-speakeasy-ignore": true,
        "summary": "Invite a user to an organization",
        "operationId": "createOrgInvite",
        "tags": [
          "Org"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The email address of the user to invite.",
                    "example": "alice@company.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The newly created invite",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invite",
                  "type": "object",
                  "required": [
                    "id",
                    "invitedEmail",
                    "createTime",
                    "parentId",
                    "parentType",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The invite ID."
                    },
                    "invitedEmail": {
                      "type": "string",
                      "description": "The email address of the person invited."
                    },
                    "parentType": {
                      "type": "string",
                      "enum": [
                        "org"
                      ],
                      "description": "The type of entity that the person is invited to."
                    },
                    "parentId": {
                      "type": "string",
                      "description": "The ID of the parent (e.g. org ID)."
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the invite.",
                      "enum": [
                        "pending",
                        "accepted",
                        "revoked",
                        "expired"
                      ]
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the invite was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the invite was updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codegen-request-body-name": "invite"
        }
      },
      "get": {
        "x-speakeasy-ignore": true,
        "summary": "List invites for an organization",
        "operationId": "listOrgInvites",
        "tags": [
          "Org"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of invites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "title": "Invite",
                    "type": "object",
                    "required": [
                      "id",
                      "invitedEmail",
                      "createTime",
                      "parentId",
                      "parentType",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The invite ID."
                      },
                      "invitedEmail": {
                        "type": "string",
                        "description": "The email address of the person invited."
                      },
                      "parentType": {
                        "type": "string",
                        "enum": [
                          "org"
                        ],
                        "description": "The type of entity that the person is invited to."
                      },
                      "parentId": {
                        "type": "string",
                        "description": "The ID of the parent (e.g. org ID)."
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the invite.",
                        "enum": [
                          "pending",
                          "accepted",
                          "revoked",
                          "expired"
                        ]
                      },
                      "createTime": {
                        "type": "string",
                        "description": "The time the invite was created.",
                        "format": "date-time"
                      },
                      "updateTime": {
                        "type": "string",
                        "description": "The time the invite was updated.",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgId}/invites/{inviteId}": {
      "get": {
        "x-speakeasy-ignore": true,
        "summary": "Get an invite",
        "operationId": "getOrgInvite",
        "tags": [
          "Org"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inviteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invite",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Invite",
                  "type": "object",
                  "required": [
                    "id",
                    "invitedEmail",
                    "createTime",
                    "parentId",
                    "parentType",
                    "status"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The invite ID."
                    },
                    "invitedEmail": {
                      "type": "string",
                      "description": "The email address of the person invited."
                    },
                    "parentType": {
                      "type": "string",
                      "enum": [
                        "org"
                      ],
                      "description": "The type of entity that the person is invited to."
                    },
                    "parentId": {
                      "type": "string",
                      "description": "The ID of the parent (e.g. org ID)."
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the invite.",
                      "enum": [
                        "pending",
                        "accepted",
                        "revoked",
                        "expired"
                      ]
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the invite was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the invite was updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "x-speakeasy-ignore": true,
        "summary": "Revoke an invite",
        "operationId": "deleteOrgInvite",
        "tags": [
          "Org"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inviteId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/my-info": {
      "get": {
        "x-speakeasy-ignore": true,
        "summary": "Get information about the current user",
        "operationId": "getMyInfo",
        "tags": [
          "User"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Information about the current user and their organizations and projects",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Builder Info",
                  "type": "object",
                  "required": [
                    "builder",
                    "projectRoles"
                  ],
                  "properties": {
                    "builder": {
                      "title": "Builder",
                      "type": "object",
                      "required": [
                        "id",
                        "idpProvider",
                        "idpRef",
                        "createTime"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The builder ID.",
                          "example": "builder-id-123"
                        },
                        "idpProvider": {
                          "type": "string",
                          "description": "The identity provider",
                          "example": "clerk"
                        },
                        "idpRef": {
                          "type": "string",
                          "description": "ID used by the identity provider"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time that the builder joined Ampersand.",
                          "format": "date-time"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "fullName": {
                          "type": "string"
                        },
                        "primaryEmail": {
                          "type": "string"
                        }
                      }
                    },
                    "projectRoles": {
                      "type": "object",
                      "description": "A map of project IDs to project roles for the builder.",
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "role",
                          "principalType",
                          "principalId",
                          "project"
                        ],
                        "properties": {
                          "role": {
                            "type": "string",
                            "description": "The role of the builder in the project.",
                            "example": "admin"
                          },
                          "principalType": {
                            "type": "string",
                            "description": "The type of the principal.",
                            "enum": [
                              "team",
                              "builder"
                            ]
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The ID of the team or builder.",
                            "example": "builder-id-123"
                          },
                          "project": {
                            "title": "Project",
                            "required": [
                              "appName",
                              "createTime",
                              "id",
                              "name"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The project ID.",
                                "example": "project-id-123"
                              },
                              "name": {
                                "type": "string",
                                "description": "The project name.",
                                "example": "mailmonkey-staging"
                              },
                              "appName": {
                                "type": "string",
                                "description": "The name of the application, which is displayed to end users.",
                                "example": "MailMonkey"
                              },
                              "orgId": {
                                "type": "string",
                                "description": "The organization ID that this project belongs to."
                              },
                              "createTime": {
                                "type": "string",
                                "description": "The time the project was created.",
                                "format": "date-time"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "The time the project was updated.",
                                "format": "date-time"
                              },
                              "entitlements": {
                                "type": "object",
                                "description": "The entitlements for the project.",
                                "properties": {
                                  "brandingRemoval": {
                                    "type": "object",
                                    "required": [
                                      "value"
                                    ],
                                    "x-go-type-skip-optional-pointer": true,
                                    "description": "Whether branding can be removed from the UI library.",
                                    "properties": {
                                      "value": {
                                        "type": "boolean",
                                        "description": "Whether branding has been removed from the project."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "orgRole": {
                      "type": "object",
                      "required": [
                        "role",
                        "principalType",
                        "principalId",
                        "org"
                      ],
                      "properties": {
                        "role": {
                          "type": "string",
                          "description": "The role of the builder in the org.",
                          "example": "admin"
                        },
                        "principalType": {
                          "type": "string",
                          "description": "The type of the principal.",
                          "enum": [
                            "team",
                            "builder"
                          ]
                        },
                        "principalId": {
                          "type": "string",
                          "description": "The ID of the team or builder.",
                          "example": "builder-id-123"
                        },
                        "org": {
                          "title": "Organisation",
                          "required": [
                            "id",
                            "label",
                            "createTime",
                            "defaultTeamId"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The organization ID.",
                              "example": "org-123"
                            },
                            "label": {
                              "type": "string",
                              "description": "The organization label.",
                              "example": "Acme Inc"
                            },
                            "defaultTeamId": {
                              "type": "string",
                              "description": "The ID of the Everyone team for the org."
                            },
                            "createTime": {
                              "type": "string",
                              "description": "The time the organization was created.",
                              "format": "date-time"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "The time the organization was updated.",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invites:accept": {
      "post": {
        "x-speakeasy-ignore": true,
        "summary": "Accept an invite",
        "operationId": "acceptInvite",
        "tags": [
          "User"
        ],
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invitedEmail"
                ],
                "properties": {
                  "invitedEmail": {
                    "type": "string",
                    "description": "The email address that the invite was sent to"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Information about the current user and their organizations and projects",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Builder Info",
                  "type": "object",
                  "required": [
                    "builder",
                    "projectRoles"
                  ],
                  "properties": {
                    "builder": {
                      "title": "Builder",
                      "type": "object",
                      "required": [
                        "id",
                        "idpProvider",
                        "idpRef",
                        "createTime"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The builder ID.",
                          "example": "builder-id-123"
                        },
                        "idpProvider": {
                          "type": "string",
                          "description": "The identity provider",
                          "example": "clerk"
                        },
                        "idpRef": {
                          "type": "string",
                          "description": "ID used by the identity provider"
                        },
                        "createTime": {
                          "type": "string",
                          "description": "The time that the builder joined Ampersand.",
                          "format": "date-time"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "fullName": {
                          "type": "string"
                        },
                        "primaryEmail": {
                          "type": "string"
                        }
                      }
                    },
                    "projectRoles": {
                      "type": "object",
                      "description": "A map of project IDs to project roles for the builder.",
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "role",
                          "principalType",
                          "principalId",
                          "project"
                        ],
                        "properties": {
                          "role": {
                            "type": "string",
                            "description": "The role of the builder in the project.",
                            "example": "admin"
                          },
                          "principalType": {
                            "type": "string",
                            "description": "The type of the principal.",
                            "enum": [
                              "team",
                              "builder"
                            ]
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The ID of the team or builder.",
                            "example": "builder-id-123"
                          },
                          "project": {
                            "title": "Project",
                            "required": [
                              "appName",
                              "createTime",
                              "id",
                              "name"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The project ID.",
                                "example": "project-id-123"
                              },
                              "name": {
                                "type": "string",
                                "description": "The project name.",
                                "example": "mailmonkey-staging"
                              },
                              "appName": {
                                "type": "string",
                                "description": "The name of the application, which is displayed to end users.",
                                "example": "MailMonkey"
                              },
                              "orgId": {
                                "type": "string",
                                "description": "The organization ID that this project belongs to."
                              },
                              "createTime": {
                                "type": "string",
                                "description": "The time the project was created.",
                                "format": "date-time"
                              },
                              "updateTime": {
                                "type": "string",
                                "description": "The time the project was updated.",
                                "format": "date-time"
                              },
                              "entitlements": {
                                "type": "object",
                                "description": "The entitlements for the project.",
                                "properties": {
                                  "brandingRemoval": {
                                    "type": "object",
                                    "required": [
                                      "value"
                                    ],
                                    "x-go-type-skip-optional-pointer": true,
                                    "description": "Whether branding can be removed from the UI library.",
                                    "properties": {
                                      "value": {
                                        "type": "boolean",
                                        "description": "Whether branding has been removed from the project."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "orgRole": {
                      "type": "object",
                      "required": [
                        "role",
                        "principalType",
                        "principalId",
                        "org"
                      ],
                      "properties": {
                        "role": {
                          "type": "string",
                          "description": "The role of the builder in the org.",
                          "example": "admin"
                        },
                        "principalType": {
                          "type": "string",
                          "description": "The type of the principal.",
                          "enum": [
                            "team",
                            "builder"
                          ]
                        },
                        "principalId": {
                          "type": "string",
                          "description": "The ID of the team or builder.",
                          "example": "builder-id-123"
                        },
                        "org": {
                          "title": "Organisation",
                          "required": [
                            "id",
                            "label",
                            "createTime",
                            "defaultTeamId"
                          ],
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The organization ID.",
                              "example": "org-123"
                            },
                            "label": {
                              "type": "string",
                              "description": "The organization label.",
                              "example": "Acme Inc"
                            },
                            "defaultTeamId": {
                              "type": "string",
                              "description": "The ID of the Everyone team for the org."
                            },
                            "createTime": {
                              "type": "string",
                              "description": "The time the organization was created.",
                              "format": "date-time"
                            },
                            "updateTime": {
                              "type": "string",
                              "description": "The time the organization was updated.",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgId}/billingAccount": {
      "get": {
        "x-speakeasy-ignore": true,
        "summary": "Get the billing account for an organization",
        "operationId": "getOrgBillingAccount",
        "tags": [
          "Billing Account"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Billing account",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Billing Account",
                  "type": "object",
                  "required": [
                    "id",
                    "displayName",
                    "billingProvider",
                    "billingProviderRef"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The billing account ID.",
                      "example": "billing-account-123"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "The display name of the billing account.",
                      "example": "Acme Inc"
                    },
                    "billingProvider": {
                      "type": "string",
                      "description": "The billing provider that this account is associated with.",
                      "example": "stripe"
                    },
                    "billingProviderRef": {
                      "type": "string",
                      "description": "The ID used by the billing provider to identify the account.",
                      "example": "acct_1J2k3l4m5n6o7p8q9r0s"
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the billing account was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the billing account was last updated.",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "Input Validation Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "API Problem",
                      "type": "object",
                      "allOf": [
                        {
                          "title": "Problem",
                          "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the problem type",
                              "default": "about:blank"
                            },
                            "href": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                            },
                            "title": {
                              "type": "string",
                              "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                              "example": "Service Unavailable"
                            },
                            "status": {
                              "type": "integer",
                              "format": "int32",
                              "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                              "minimum": 400,
                              "maximum": 600,
                              "exclusiveMaximum": true,
                              "example": 503
                            },
                            "detail": {
                              "type": "string",
                              "description": "A human-readable explanation specific to this occurrence of the problem"
                            },
                            "instance": {
                              "type": "string",
                              "format": "uri",
                              "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                            }
                          },
                          "example": {
                            "type": "urn:problem-type:exampleOrganization:exampleProblem",
                            "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                            "title": "Description of the type of problem that occurred",
                            "status": 400,
                            "detail": "Description of specific occurrence of the problem",
                            "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                          }
                        }
                      ],
                      "properties": {
                        "subsystem": {
                          "type": "string",
                          "description": "The subsystem that generated the problem",
                          "example": "api"
                        },
                        "time": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The time the problem occurred, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique identifier for the request, useful for debugging",
                          "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                        },
                        "causes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A brief description of something which caused the problem",
                            "example": "database connection failed"
                          },
                          "example": [
                            "database connection failed",
                            "database query failed",
                            "unable to fetch user"
                          ],
                          "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                        },
                        "remedy": {
                          "type": "string",
                          "description": "A brief description of how to resolve the problem",
                          "example": "Shorten your input to be under 100 characters"
                        },
                        "supportEmail": {
                          "type": "string",
                          "format": "email",
                          "description": "An email address to contact for support",
                          "example": "support@withampersand.com"
                        },
                        "supportPhone": {
                          "type": "string",
                          "description": "A phone number to contact for support",
                          "example": "+1-555-555-5555"
                        },
                        "supportUrl": {
                          "type": "string",
                          "format": "uri",
                          "description": "A URL to contact for support",
                          "example": "https://withampersand.com/support"
                        },
                        "retryable": {
                          "type": "boolean",
                          "description": "Whether the request can be retried",
                          "example": false
                        },
                        "retryAfter": {
                          "type": "string",
                          "format": "date-time",
                          "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                          "example": "2024-04-22T18:55:28.456076Z"
                        },
                        "context": {
                          "type": "object",
                          "description": "Additional context for the problem",
                          "additionalProperties": true,
                          "example": {
                            "name": "Rick Sanchez"
                          }
                        }
                      }
                    }
                  ],
                  "properties": {
                    "issues": {
                      "type": "array",
                      "items": {
                        "title": "Input Validation Issue",
                        "type": "object",
                        "description": "An issue detected during input validation.\n",
                        "allOf": [
                          {
                            "title": "API Problem",
                            "type": "object",
                            "allOf": [
                              {
                                "title": "Problem",
                                "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the problem type",
                                    "default": "about:blank"
                                  },
                                  "href": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                                  },
                                  "title": {
                                    "type": "string",
                                    "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                                    "example": "Service Unavailable"
                                  },
                                  "status": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                                    "minimum": 400,
                                    "maximum": 600,
                                    "exclusiveMaximum": true,
                                    "example": 503
                                  },
                                  "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem"
                                  },
                                  "instance": {
                                    "type": "string",
                                    "format": "uri",
                                    "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                                  }
                                },
                                "example": {
                                  "type": "urn:problem-type:exampleOrganization:exampleProblem",
                                  "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                                  "title": "Description of the type of problem that occurred",
                                  "status": 400,
                                  "detail": "Description of specific occurrence of the problem",
                                  "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                                }
                              }
                            ],
                            "properties": {
                              "subsystem": {
                                "type": "string",
                                "description": "The subsystem that generated the problem",
                                "example": "api"
                              },
                              "time": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The time the problem occurred, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "requestId": {
                                "type": "string",
                                "description": "A unique identifier for the request, useful for debugging",
                                "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                              },
                              "causes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A brief description of something which caused the problem",
                                  "example": "database connection failed"
                                },
                                "example": [
                                  "database connection failed",
                                  "database query failed",
                                  "unable to fetch user"
                                ],
                                "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                              },
                              "remedy": {
                                "type": "string",
                                "description": "A brief description of how to resolve the problem",
                                "example": "Shorten your input to be under 100 characters"
                              },
                              "supportEmail": {
                                "type": "string",
                                "format": "email",
                                "description": "An email address to contact for support",
                                "example": "support@withampersand.com"
                              },
                              "supportPhone": {
                                "type": "string",
                                "description": "A phone number to contact for support",
                                "example": "+1-555-555-5555"
                              },
                              "supportUrl": {
                                "type": "string",
                                "format": "uri",
                                "description": "A URL to contact for support",
                                "example": "https://withampersand.com/support"
                              },
                              "retryable": {
                                "type": "boolean",
                                "description": "Whether the request can be retried",
                                "example": false
                              },
                              "retryAfter": {
                                "type": "string",
                                "format": "date-time",
                                "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                                "example": "2024-04-22T18:55:28.456076Z"
                              },
                              "context": {
                                "type": "object",
                                "description": "Additional context for the problem",
                                "additionalProperties": true,
                                "example": {
                                  "name": "Rick Sanchez"
                                }
                              }
                            }
                          }
                        ],
                        "properties": {
                          "in": {
                            "type": "string",
                            "description": "The location of the invalid input",
                            "enum": [
                              "body",
                              "header",
                              "path",
                              "query"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the invalid input"
                          },
                          "value": {
                            "description": "The value of the erroneous input"
                          }
                        }
                      }
                    }
                  },
                  "example": {
                    "type": "about:blank",
                    "title": "Bad Request",
                    "status": 400,
                    "detail": "The input message is incorrect",
                    "instance": "123456-1234-1235-4567489798",
                    "issues": [
                      {
                        "type": "about:blank",
                        "detail": "exampleNumericProperty should be numeric",
                        "in": "path",
                        "name": "exampleNumericProperty",
                        "value": "abc"
                      },
                      {
                        "type": "about:blank",
                        "title": "Input isn't valid with respect to schema",
                        "detail": "examplePropertyWithPattern a2345678901 doesn't match pattern '^\\d{11}$'",
                        "in": "body",
                        "name": "items[0].examplePropertyWithPattern",
                        "value": "a2345678901"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/billingAccounts/{billingAccountId}/portalSession": {
      "post": {
        "x-speakeasy-ignore": true,
        "summary": "Create a portal session for a billing account",
        "operationId": "createBillingAccountSession",
        "tags": [
          "Billing Account"
        ],
        "parameters": [
          {
            "name": "billingAccountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "redirectUrl"
                ],
                "properties": {
                  "redirectUrl": {
                    "type": "string",
                    "description": "The URL to redirect to once a portal session is exited.",
                    "example": "https://dashboard.withampersand.com/the-current-page"
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "The number of seconds before the portal session expires.",
                    "example": 3600
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "url"
                  ],
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "The URL to redirect to in order to start the portal session.",
                      "example": "https://billing.portal.com/customer/session"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "title": "API Problem",
                  "type": "object",
                  "allOf": [
                    {
                      "title": "Problem",
                      "description": "A Problem Details object (RFC 9457).\n\nAdditional properties specific to the problem type may be present.\n",
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the problem type",
                          "default": "about:blank"
                        },
                        "href": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML)."
                        },
                        "title": {
                          "type": "string",
                          "description": "A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).",
                          "example": "Service Unavailable"
                        },
                        "status": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
                          "minimum": 400,
                          "maximum": 600,
                          "exclusiveMaximum": true,
                          "example": 503
                        },
                        "detail": {
                          "type": "string",
                          "description": "A human-readable explanation specific to this occurrence of the problem"
                        },
                        "instance": {
                          "type": "string",
                          "format": "uri",
                          "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
                        }
                      },
                      "example": {
                        "type": "urn:problem-type:exampleOrganization:exampleProblem",
                        "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
                        "title": "Description of the type of problem that occurred",
                        "status": 400,
                        "detail": "Description of specific occurrence of the problem",
                        "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
                      }
                    }
                  ],
                  "properties": {
                    "subsystem": {
                      "type": "string",
                      "description": "The subsystem that generated the problem",
                      "example": "api"
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time the problem occurred, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique identifier for the request, useful for debugging",
                      "example": "89eb1ffb-2a54-4105-aaae-7bf990f1aa69#87715"
                    },
                    "causes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A brief description of something which caused the problem",
                        "example": "database connection failed"
                      },
                      "example": [
                        "database connection failed",
                        "database query failed",
                        "unable to fetch user"
                      ],
                      "description": "A list of problems that caused this problem. This can be used to represent multiple\nroot causes. There is no guaranteed ordering of the causes.\n"
                    },
                    "remedy": {
                      "type": "string",
                      "description": "A brief description of how to resolve the problem",
                      "example": "Shorten your input to be under 100 characters"
                    },
                    "supportEmail": {
                      "type": "string",
                      "format": "email",
                      "description": "An email address to contact for support",
                      "example": "support@withampersand.com"
                    },
                    "supportPhone": {
                      "type": "string",
                      "description": "A phone number to contact for support",
                      "example": "+1-555-555-5555"
                    },
                    "supportUrl": {
                      "type": "string",
                      "format": "uri",
                      "description": "A URL to contact for support",
                      "example": "https://withampersand.com/support"
                    },
                    "retryable": {
                      "type": "boolean",
                      "description": "Whether the request can be retried",
                      "example": false
                    },
                    "retryAfter": {
                      "type": "string",
                      "format": "date-time",
                      "description": "A timestamp after which the request can be retried, formatted as RFC-3339",
                      "example": "2024-04-22T18:55:28.456076Z"
                    },
                    "context": {
                      "type": "object",
                      "description": "Additional context for the problem",
                      "additionalProperties": true,
                      "example": {
                        "name": "Rick Sanchez"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Org": {
        "title": "Organisation",
        "required": [
          "id",
          "label",
          "createTime",
          "defaultTeamId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The organization ID.",
            "example": "org-123"
          },
          "label": {
            "type": "string",
            "description": "The organization label.",
            "example": "Acme Inc"
          },
          "defaultTeamId": {
            "type": "string",
            "description": "The ID of the Everyone team for the org."
          },
          "createTime": {
            "type": "string",
            "description": "The time the organization was created.",
            "format": "date-time"
          },
          "updateTime": {
            "type": "string",
            "description": "The time the organization was updated.",
            "format": "date-time"
          }
        }
      },
      "Destination": {
        "title": "Destination",
        "required": [
          "id",
          "name",
          "type",
          "metadata",
          "createTime"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The destination ID."
          },
          "name": {
            "type": "string",
            "description": "User-defined name for the destination",
            "example": "leadConvertedWebhook"
          },
          "type": {
            "type": "string",
            "description": "The type of the destination",
            "example": "webhook"
          },
          "metadata": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "Webhook URL",
                "example": "https://webhooks.mailmonkey.com/salesforce-lead-converted"
              },
              "headers": {
                "title": "Webhook Headers",
                "type": "object",
                "nullable": true,
                "description": "Additional headers to add when Ampersand sends a webhook message",
                "additionalProperties": {
                  "type": "string",
                  "nullable": false
                },
                "example": {
                  "Authorization": "Bearer 1234"
                }
              }
            }
          },
          "createTime": {
            "type": "string",
            "description": "The time the destination was created.",
            "format": "date-time"
          },
          "updateTime": {
            "type": "string",
            "description": "The time the destination was updated.",
            "format": "date-time"
          }
        }
      },
      "Project": {
        "title": "Project",
        "required": [
          "appName",
          "createTime",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The project ID.",
            "example": "project-id-123"
          },
          "name": {
            "type": "string",
            "description": "The project name.",
            "example": "mailmonkey-staging"
          },
          "appName": {
            "type": "string",
            "description": "The name of the application, which is displayed to end users.",
            "example": "MailMonkey"
          },
          "orgId": {
            "type": "string",
            "description": "The organization ID that this project belongs to."
          },
          "createTime": {
            "type": "string",
            "description": "The time the project was created.",
            "format": "date-time"
          },
          "updateTime": {
            "type": "string",
            "description": "The time the project was updated.",
            "format": "date-time"
          },
          "entitlements": {
            "type": "object",
            "description": "The entitlements for the project.",
            "properties": {
              "brandingRemoval": {
                "type": "object",
                "required": [
                  "value"
                ],
                "x-go-type-skip-optional-pointer": true,
                "description": "Whether branding can be removed from the UI library.",
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "Whether branding has been removed from the project."
                  }
                }
              }
            }
          }
        }
      },
      "ProviderApp": {
        "title": "Provider App",
        "required": [
          "clientId",
          "createTime",
          "id",
          "projectId",
          "provider"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The provider app ID.",
            "example": "provider-app-123"
          },
          "projectId": {
            "type": "string",
            "description": "The Ampersand project ID.",
            "example": "project-456"
          },
          "externalRef": {
            "type": "string",
            "description": "The ID used by the provider to identify the app (optional).",
            "example": "external-id-123"
          },
          "provider": {
            "type": "string",
            "description": "The SaaS provider that this app connects to.",
            "example": "salesforce"
          },
          "clientId": {
            "type": "string",
            "description": "The OAuth client ID for this app.",
            "example": "client-id-123"
          },
          "scopes": {
            "type": "array",
            "description": "The OAuth scopes for this app.",
            "items": {
              "type": "string",
              "example": [
                "oauth",
                "offline",
                "crm.read"
              ]
            }
          },
          "createTime": {
            "type": "string",
            "description": "The time the provider app was created.",
            "format": "date-time"
          },
          "updateTime": {
            "type": "string",
            "description": "The time the provider app was updated.",
            "format": "date-time"
          }
        }
      },
      "Integration": {
        "title": "Integration",
        "required": [
          "createTime",
          "id",
          "latestRevision",
          "name",
          "projectId",
          "provider"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The integration ID.",
            "example": "integration-123"
          },
          "projectId": {
            "type": "string",
            "description": "The Ampersand project ID.",
            "example": "project-456"
          },
          "name": {
            "type": "string",
            "description": "The integration name.",
            "example": "read-accounts"
          },
          "provider": {
            "type": "string",
            "description": "The SaaS provider that this integration connects to.",
            "example": "salesforce"
          },
          "createTime": {
            "type": "string",
            "description": "The time the integration was created.",
            "format": "date-time"
          },
          "updateTime": {
            "type": "string",
            "description": "The time the integration was last updated.",
            "format": "date-time"
          },
          "latestRevision": {
            "title": "Revision",
            "required": [
              "content",
              "createTime",
              "id",
              "specVersion"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The revision ID.",
                "example": "revision-id-1"
              },
              "specVersion": {
                "type": "string",
                "description": "The spec version string.",
                "example": "1.0.0"
              },
              "createTime": {
                "type": "string",
                "description": "The time the revision was created.",
                "format": "date-time"
              },
              "content": {
                "title": "Integration",
                "type": "object",
                "required": [
                  "name",
                  "provider"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  },
                  "read": {
                    "title": "Read Integration",
                    "type": "object",
                    "properties": {
                      "objects": {
                        "type": "array",
                        "items": {
                          "title": "Integration Object",
                          "type": "object",
                          "required": [
                            "objectName",
                            "destination",
                            "schedule"
                          ],
                          "properties": {
                            "objectName": {
                              "type": "string"
                            },
                            "destination": {
                              "type": "string"
                            },
                            "schedule": {
                              "type": "string"
                            },
                            "mapToName": {
                              "type": "string",
                              "description": "An object name to map to.",
                              "example": "people",
                              "x-go-type-skip-optional-pointer": true
                            },
                            "mapToDisplayName": {
                              "type": "string",
                              "description": "A display name to map to.",
                              "example": "People",
                              "x-go-type-skip-optional-pointer": true
                            },
                            "requiredFields": {
                              "type": "array",
                              "items": {
                                "title": "Integration Field",
                                "oneOf": [
                                  {
                                    "title": "Integration Field Existent",
                                    "type": "object",
                                    "required": [
                                      "fieldName"
                                    ],
                                    "properties": {
                                      "fieldName": {
                                        "type": "string"
                                      },
                                      "mapToName": {
                                        "type": "string",
                                        "description": "The field name to map to.",
                                        "example": "account_id",
                                        "x-go-type-skip-optional-pointer": true
                                      },
                                      "mapToDisplayName": {
                                        "type": "string",
                                        "description": "The display name to map to.",
                                        "example": "Account ID",
                                        "x-go-type-skip-optional-pointer": true
                                      }
                                    }
                                  },
                                  {
                                    "title": "Integration Field Mapping",
                                    "type": "object",
                                    "required": [
                                      "mapToName"
                                    ],
                                    "properties": {
                                      "mapToName": {
                                        "type": "string"
                                      },
                                      "mapToDisplayName": {
                                        "type": "string"
                                      },
                                      "default": {
                                        "type": "string"
                                      },
                                      "prompt": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "optionalFields": {
                              "type": "array",
                              "items": {
                                "title": "Integration Field",
                                "oneOf": [
                                  {
                                    "title": "Integration Field Existent",
                                    "type": "object",
                                    "required": [
                                      "fieldName"
                                    ],
                                    "properties": {
                                      "fieldName": {
                                        "type": "string"
                                      },
                                      "mapToName": {
                                        "type": "string",
                                        "description": "The field name to map to.",
                                        "example": "account_id",
                                        "x-go-type-skip-optional-pointer": true
                                      },
                                      "mapToDisplayName": {
                                        "type": "string",
                                        "description": "The display name to map to.",
                                        "example": "Account ID",
                                        "x-go-type-skip-optional-pointer": true
                                      }
                                    }
                                  },
                                  {
                                    "title": "Integration Field Mapping",
                                    "type": "object",
                                    "required": [
                                      "mapToName"
                                    ],
                                    "properties": {
                                      "mapToName": {
                                        "type": "string"
                                      },
                                      "mapToDisplayName": {
                                        "type": "string"
                                      },
                                      "default": {
                                        "type": "string"
                                      },
                                      "prompt": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "optionalFieldsAuto": {
                              "title": "Optional Fields Auto Option",
                              "type": "string",
                              "enum": [
                                "all"
                              ]
                            },
                            "backfill": {
                              "title": "Backfill",
                              "type": "object",
                              "required": [
                                "defaultPeriod"
                              ],
                              "properties": {
                                "defaultPeriod": {
                                  "title": "Default Period",
                                  "type": "object",
                                  "properties": {
                                    "days": {
                                      "type": "integer",
                                      "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                      "minimum": 0,
                                      "example": 30,
                                      "x-oapi-codegen-extra-tags": {
                                        "validate": "required_without=FullHistory,omitempty,min=0"
                                      }
                                    },
                                    "fullHistory": {
                                      "type": "boolean",
                                      "description": "If true, backfill all history. Required if days is not set.",
                                      "example": false,
                                      "x-oapi-codegen-extra-tags": {
                                        "validate": "required_without=Days"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "delivery": {
                              "title": "Delivery",
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "type": "string",
                                  "default": "auto",
                                  "enum": [
                                    "onRequest",
                                    "auto"
                                  ],
                                  "description": "The data delivery mode for this object. If not specified, defaults to automatic."
                                },
                                "pageSize": {
                                  "type": "integer",
                                  "description": "The number of records to receive per data delivery.",
                                  "minimum": 50,
                                  "maximum": 500
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "write": {
                    "title": "Write Integration",
                    "type": "object",
                    "properties": {
                      "objects": {
                        "type": "array",
                        "items": {
                          "title": "Integration Write Object",
                          "type": "object",
                          "required": [
                            "objectName"
                          ],
                          "properties": {
                            "objectName": {
                              "type": "string"
                            },
                            "inheritMapping": {
                              "type": "boolean",
                              "description": "If true, the write object will inherit the mapping from the read object. If false, the write object will have no mapping.",
                              "example": true
                            },
                            "valueDefaults": {
                              "title": "Value Defaults",
                              "type": "object",
                              "description": "Configuration to set default write values for object fields.",
                              "properties": {
                                "allowAnyFields": {
                                  "type": "boolean",
                                  "description": "If true, users can set default values for any field.",
                                  "example": true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "proxy": {
                    "title": "Proxy Integration",
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      }
                    }
                  },
                  "subscribe": {
                    "title": "Subscribe Integration",
                    "type": "object",
                    "properties": {
                      "objects": {
                        "type": "array",
                        "items": {
                          "title": "Integration Subscribe Object",
                          "type": "object",
                          "required": [
                            "objectName",
                            "destination"
                          ],
                          "properties": {
                            "objectName": {
                              "type": "string"
                            },
                            "destination": {
                              "type": "string"
                            },
                            "createEvent": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "string",
                                  "description": "If always, the integration will subscribe to create events.",
                                  "enum": [
                                    "always"
                                  ]
                                }
                              }
                            },
                            "updateEvent": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "string",
                                  "description": "If always, the integration will subscribe to update events.",
                                  "enum": [
                                    "always"
                                  ]
                                },
                                "requiredWatchFields": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "The fields that are required to be watched for updates.",
                                    "example": [
                                      "name",
                                      "domain"
                                    ]
                                  }
                                }
                              }
                            },
                            "deleteEvent": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "string",
                                  "description": "If always, the integration will subscribe to delete events.",
                                  "enum": [
                                    "always"
                                  ]
                                }
                              }
                            },
                            "associationChangeEvent": {
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "string",
                                  "description": "If always, the integration will subscribe to association change events.",
                                  "enum": [
                                    "always"
                                  ]
                                },
                                "includeFullRecords": {
                                  "type": "boolean",
                                  "description": "If true, the integration will include full records in the event payload."
                                }
                              }
                            },
                            "otherEvents": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "Non-standard events that the integration will subscribe to.",
                                "example": [
                                  "object.merged",
                                  "object.restored"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Revision": {
        "title": "Revision",
        "required": [
          "content",
          "createTime",
          "id",
          "specVersion"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The revision ID.",
            "example": "revision-id-1"
          },
          "specVersion": {
            "type": "string",
            "description": "The spec version string.",
            "example": "1.0.0"
          },
          "createTime": {
            "type": "string",
            "description": "The time the revision was created.",
            "format": "date-time"
          },
          "content": {
            "title": "Integration",
            "type": "object",
            "required": [
              "name",
              "provider"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "read": {
                "title": "Read Integration",
                "type": "object",
                "properties": {
                  "objects": {
                    "type": "array",
                    "items": {
                      "title": "Integration Object",
                      "type": "object",
                      "required": [
                        "objectName",
                        "destination",
                        "schedule"
                      ],
                      "properties": {
                        "objectName": {
                          "type": "string"
                        },
                        "destination": {
                          "type": "string"
                        },
                        "schedule": {
                          "type": "string"
                        },
                        "mapToName": {
                          "type": "string",
                          "description": "An object name to map to.",
                          "example": "people",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "mapToDisplayName": {
                          "type": "string",
                          "description": "A display name to map to.",
                          "example": "People",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "requiredFields": {
                          "type": "array",
                          "items": {
                            "title": "Integration Field",
                            "oneOf": [
                              {
                                "title": "Integration Field Existent",
                                "type": "object",
                                "required": [
                                  "fieldName"
                                ],
                                "properties": {
                                  "fieldName": {
                                    "type": "string"
                                  },
                                  "mapToName": {
                                    "type": "string",
                                    "description": "The field name to map to.",
                                    "example": "account_id",
                                    "x-go-type-skip-optional-pointer": true
                                  },
                                  "mapToDisplayName": {
                                    "type": "string",
                                    "description": "The display name to map to.",
                                    "example": "Account ID",
                                    "x-go-type-skip-optional-pointer": true
                                  }
                                }
                              },
                              {
                                "title": "Integration Field Mapping",
                                "type": "object",
                                "required": [
                                  "mapToName"
                                ],
                                "properties": {
                                  "mapToName": {
                                    "type": "string"
                                  },
                                  "mapToDisplayName": {
                                    "type": "string"
                                  },
                                  "default": {
                                    "type": "string"
                                  },
                                  "prompt": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "optionalFields": {
                          "type": "array",
                          "items": {
                            "title": "Integration Field",
                            "oneOf": [
                              {
                                "title": "Integration Field Existent",
                                "type": "object",
                                "required": [
                                  "fieldName"
                                ],
                                "properties": {
                                  "fieldName": {
                                    "type": "string"
                                  },
                                  "mapToName": {
                                    "type": "string",
                                    "description": "The field name to map to.",
                                    "example": "account_id",
                                    "x-go-type-skip-optional-pointer": true
                                  },
                                  "mapToDisplayName": {
                                    "type": "string",
                                    "description": "The display name to map to.",
                                    "example": "Account ID",
                                    "x-go-type-skip-optional-pointer": true
                                  }
                                }
                              },
                              {
                                "title": "Integration Field Mapping",
                                "type": "object",
                                "required": [
                                  "mapToName"
                                ],
                                "properties": {
                                  "mapToName": {
                                    "type": "string"
                                  },
                                  "mapToDisplayName": {
                                    "type": "string"
                                  },
                                  "default": {
                                    "type": "string"
                                  },
                                  "prompt": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "optionalFieldsAuto": {
                          "title": "Optional Fields Auto Option",
                          "type": "string",
                          "enum": [
                            "all"
                          ]
                        },
                        "backfill": {
                          "title": "Backfill",
                          "type": "object",
                          "required": [
                            "defaultPeriod"
                          ],
                          "properties": {
                            "defaultPeriod": {
                              "title": "Default Period",
                              "type": "object",
                              "properties": {
                                "days": {
                                  "type": "integer",
                                  "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                  "minimum": 0,
                                  "example": 30,
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required_without=FullHistory,omitempty,min=0"
                                  }
                                },
                                "fullHistory": {
                                  "type": "boolean",
                                  "description": "If true, backfill all history. Required if days is not set.",
                                  "example": false,
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required_without=Days"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "delivery": {
                          "title": "Delivery",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "type": "string",
                              "default": "auto",
                              "enum": [
                                "onRequest",
                                "auto"
                              ],
                              "description": "The data delivery mode for this object. If not specified, defaults to automatic."
                            },
                            "pageSize": {
                              "type": "integer",
                              "description": "The number of records to receive per data delivery.",
                              "minimum": 50,
                              "maximum": 500
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "write": {
                "title": "Write Integration",
                "type": "object",
                "properties": {
                  "objects": {
                    "type": "array",
                    "items": {
                      "title": "Integration Write Object",
                      "type": "object",
                      "required": [
                        "objectName"
                      ],
                      "properties": {
                        "objectName": {
                          "type": "string"
                        },
                        "inheritMapping": {
                          "type": "boolean",
                          "description": "If true, the write object will inherit the mapping from the read object. If false, the write object will have no mapping.",
                          "example": true
                        },
                        "valueDefaults": {
                          "title": "Value Defaults",
                          "type": "object",
                          "description": "Configuration to set default write values for object fields.",
                          "properties": {
                            "allowAnyFields": {
                              "type": "boolean",
                              "description": "If true, users can set default values for any field.",
                              "example": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "proxy": {
                "title": "Proxy Integration",
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              },
              "subscribe": {
                "title": "Subscribe Integration",
                "type": "object",
                "properties": {
                  "objects": {
                    "type": "array",
                    "items": {
                      "title": "Integration Subscribe Object",
                      "type": "object",
                      "required": [
                        "objectName",
                        "destination"
                      ],
                      "properties": {
                        "objectName": {
                          "type": "string"
                        },
                        "destination": {
                          "type": "string"
                        },
                        "createEvent": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "string",
                              "description": "If always, the integration will subscribe to create events.",
                              "enum": [
                                "always"
                              ]
                            }
                          }
                        },
                        "updateEvent": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "string",
                              "description": "If always, the integration will subscribe to update events.",
                              "enum": [
                                "always"
                              ]
                            },
                            "requiredWatchFields": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "The fields that are required to be watched for updates.",
                                "example": [
                                  "name",
                                  "domain"
                                ]
                              }
                            }
                          }
                        },
                        "deleteEvent": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "string",
                              "description": "If always, the integration will subscribe to delete events.",
                              "enum": [
                                "always"
                              ]
                            }
                          }
                        },
                        "associationChangeEvent": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "string",
                              "description": "If always, the integration will subscribe to association change events.",
                              "enum": [
                                "always"
                              ]
                            },
                            "includeFullRecords": {
                              "type": "boolean",
                              "description": "If true, the integration will include full records in the event payload."
                            }
                          }
                        },
                        "otherEvents": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "Non-standard events that the integration will subscribe to.",
                            "example": [
                              "object.merged",
                              "object.restored"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "HydratedRevision": {
        "title": "Hydrated Revision",
        "required": [
          "content",
          "createTime",
          "id",
          "specVersion"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The revision ID.",
            "example": "revision-id-1"
          },
          "specVersion": {
            "type": "string",
            "description": "The spec version string.",
            "example": "1.0.0"
          },
          "createTime": {
            "type": "string",
            "description": "The time the revision was created.",
            "format": "date-time"
          },
          "content": {
            "title": "Hydrated Integration",
            "type": "object",
            "required": [
              "name",
              "provider"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "read": {
                "title": "Hydrated Read Integration",
                "type": "object",
                "properties": {
                  "objects": {
                    "type": "array",
                    "items": {
                      "title": "Hydrated Integration Object",
                      "type": "object",
                      "required": [
                        "objectName",
                        "displayName",
                        "destination",
                        "schedule"
                      ],
                      "properties": {
                        "objectName": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        },
                        "mapToName": {
                          "type": "string",
                          "description": "An object name to map to.",
                          "example": "people",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "mapToDisplayName": {
                          "type": "string",
                          "description": "A display name to map to.",
                          "example": "People",
                          "x-go-type-skip-optional-pointer": true
                        },
                        "destination": {
                          "type": "string"
                        },
                        "schedule": {
                          "type": "string"
                        },
                        "requiredFields": {
                          "type": "array",
                          "items": {
                            "title": "Hydrated Integration Field",
                            "oneOf": [
                              {
                                "type": "object",
                                "required": [
                                  "fieldName",
                                  "displayName"
                                ],
                                "properties": {
                                  "fieldName": {
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "type": "string"
                                  },
                                  "mapToName": {
                                    "type": "string",
                                    "description": "The field name to map to in the destination.",
                                    "example": "account_id",
                                    "x-go-type-skip-optional-pointer": true
                                  },
                                  "mapToDisplayName": {
                                    "type": "string",
                                    "description": "The display name to map to in the destination.",
                                    "example": "Account ID",
                                    "x-go-type-skip-optional-pointer": true
                                  }
                                }
                              },
                              {
                                "title": "Integration Field Mapping",
                                "type": "object",
                                "required": [
                                  "mapToName"
                                ],
                                "properties": {
                                  "mapToName": {
                                    "type": "string"
                                  },
                                  "mapToDisplayName": {
                                    "type": "string"
                                  },
                                  "default": {
                                    "type": "string"
                                  },
                                  "prompt": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "optionalFields": {
                          "type": "array",
                          "items": {
                            "title": "Hydrated Integration Field",
                            "oneOf": [
                              {
                                "type": "object",
                                "required": [
                                  "fieldName",
                                  "displayName"
                                ],
                                "properties": {
                                  "fieldName": {
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "type": "string"
                                  },
                                  "mapToName": {
                                    "type": "string",
                                    "description": "The field name to map to in the destination.",
                                    "example": "account_id",
                                    "x-go-type-skip-optional-pointer": true
                                  },
                                  "mapToDisplayName": {
                                    "type": "string",
                                    "description": "The display name to map to in the destination.",
                                    "example": "Account ID",
                                    "x-go-type-skip-optional-pointer": true
                                  }
                                }
                              },
                              {
                                "title": "Integration Field Mapping",
                                "type": "object",
                                "required": [
                                  "mapToName"
                                ],
                                "properties": {
                                  "mapToName": {
                                    "type": "string"
                                  },
                                  "mapToDisplayName": {
                                    "type": "string"
                                  },
                                  "default": {
                                    "type": "string"
                                  },
                                  "prompt": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "optionalFieldsAuto": {
                          "title": "Optional Fields Auto Option",
                          "type": "string",
                          "enum": [
                            "all"
                          ]
                        },
                        "allFields": {
                          "description": "This is a list of all fields on the object for a particular SaaS instance, including their display names.",
                          "type": "array",
                          "items": {
                            "title": "Hydrated Integration Field",
                            "oneOf": [
                              {
                                "type": "object",
                                "required": [
                                  "fieldName",
                                  "displayName"
                                ],
                                "properties": {
                                  "fieldName": {
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "type": "string"
                                  },
                                  "mapToName": {
                                    "type": "string",
                                    "description": "The field name to map to in the destination.",
                                    "example": "account_id",
                                    "x-go-type-skip-optional-pointer": true
                                  },
                                  "mapToDisplayName": {
                                    "type": "string",
                                    "description": "The display name to map to in the destination.",
                                    "example": "Account ID",
                                    "x-go-type-skip-optional-pointer": true
                                  }
                                }
                              },
                              {
                                "title": "Integration Field Mapping",
                                "type": "object",
                                "required": [
                                  "mapToName"
                                ],
                                "properties": {
                                  "mapToName": {
                                    "type": "string"
                                  },
                                  "mapToDisplayName": {
                                    "type": "string"
                                  },
                                  "default": {
                                    "type": "string"
                                  },
                                  "prompt": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "allFieldsMetadata": {
                          "description": "This is a map of all fields on the object including their metadata (such as display name and type), the keys of the map are the field names.",
                          "type": "object",
                          "additionalProperties": {
                            "title": "Field Metadata",
                            "type": "object",
                            "required": [
                              "fieldName",
                              "displayName"
                            ],
                            "properties": {
                              "fieldName": {
                                "type": "string",
                                "description": "The name of the field from the provider API.",
                                "example": "Account ID"
                              },
                              "displayName": {
                                "type": "string",
                                "description": "The display name of the field from the provider API.",
                                "example": "Account ID"
                              },
                              "valueType": {
                                "type": "string",
                                "description": "A normalized field type",
                                "enum": [
                                  "string",
                                  "boolean",
                                  "singleSelect",
                                  "multiSelect",
                                  "date",
                                  "datetime",
                                  "int",
                                  "float",
                                  "other"
                                ],
                                "x-go-type-skip-optional-pointer": true
                              },
                              "providerType": {
                                "type": "string",
                                "description": "Raw field type from the provider API.",
                                "example": "timestamp",
                                "x-go-type-skip-optional-pointer": true
                              },
                              "readOnly": {
                                "type": "boolean",
                                "description": "Whether the field is read-only.",
                                "example": false,
                                "x-go-type-skip-optional-pointer": true
                              },
                              "values": {
                                "type": "array",
                                "description": "If the valueType is singleSelect or multiSelect, this is a list of possible values",
                                "x-go-type-skip-optional-pointer": true,
                                "items": {
                                  "title": "Field Value",
                                  "type": "object",
                                  "required": [
                                    "value",
                                    "displayValue"
                                  ],
                                  "description": "Represents a field value",
                                  "properties": {
                                    "value": {
                                      "type": "string",
                                      "description": "The internal value used by the system",
                                      "example": "outbound"
                                    },
                                    "displayValue": {
                                      "type": "string",
                                      "description": "The human-readable display value",
                                      "example": "Outbound Campaign"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "backfill": {
                          "title": "Backfill",
                          "type": "object",
                          "required": [
                            "defaultPeriod"
                          ],
                          "properties": {
                            "defaultPeriod": {
                              "title": "Default Period",
                              "type": "object",
                              "properties": {
                                "days": {
                                  "type": "integer",
                                  "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                  "minimum": 0,
                                  "example": 30,
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required_without=FullHistory,omitempty,min=0"
                                  }
                                },
                                "fullHistory": {
                                  "type": "boolean",
                                  "description": "If true, backfill all history. Required if days is not set.",
                                  "example": false,
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required_without=Days"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "write": {
                "type": "object",
                "properties": {
                  "objects": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "objectName",
                        "displayName"
                      ],
                      "properties": {
                        "objectName": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        },
                        "valueDefaults": {
                          "title": "Value Defaults",
                          "type": "object",
                          "description": "Configuration to set default write values for object fields.",
                          "properties": {
                            "allowAnyFields": {
                              "type": "boolean",
                              "description": "If true, users can set default values for any field.",
                              "example": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "proxy": {
                "title": "Hydrated Proxy Integration",
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "Installation": {
        "title": "Installation",
        "required": [
          "config",
          "connection",
          "createTime",
          "createdBy",
          "healthStatus",
          "id",
          "integrationId",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The installation ID.",
            "example": "installation-123"
          },
          "projectId": {
            "type": "string",
            "description": "The Ampersand project ID.",
            "example": "project-456"
          },
          "integrationId": {
            "type": "string",
            "description": "The integration ID.",
            "example": "integration-123"
          },
          "group": {
            "title": "Group",
            "required": [
              "createTime",
              "groupName",
              "groupRef",
              "projectId"
            ],
            "type": "object",
            "properties": {
              "groupRef": {
                "type": "string",
                "description": "The ID of the user group that has access to this installation.",
                "example": "group-123"
              },
              "groupName": {
                "type": "string",
                "description": "The name of the user group that has access to this installation.",
                "example": "Super Customer"
              },
              "projectId": {
                "type": "string",
                "description": "The Ampersand project ID.",
                "example": "project-456"
              },
              "createTime": {
                "type": "string",
                "description": "The time the group was created.",
                "format": "date-time",
                "example": "2023-07-13T21:34:44.816Z"
              },
              "updateTime": {
                "type": "string",
                "description": "The time the group was last updated.",
                "format": "date-time",
                "example": "2023-07-13T21:34:44.816Z"
              }
            }
          },
          "healthStatus": {
            "type": "string",
            "description": "The health status of the installation (\"healthy\", \"unhealthy\").",
            "example": "healthy"
          },
          "connection": {
            "title": "Connection",
            "required": [
              "id",
              "createTime",
              "group",
              "consumer",
              "projectId",
              "provider",
              "authScheme",
              "status"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The connection ID.",
                "example": "connection-123"
              },
              "projectId": {
                "type": "string",
                "description": "The Ampersand project ID.",
                "example": "project-456"
              },
              "provider": {
                "type": "string",
                "description": "The SaaS provider that this Connection is for.",
                "example": "salesforce"
              },
              "providerApp": {
                "title": "Provider App",
                "required": [
                  "clientId",
                  "createTime",
                  "id",
                  "projectId",
                  "provider"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The provider app ID.",
                    "example": "provider-app-123"
                  },
                  "projectId": {
                    "type": "string",
                    "description": "The Ampersand project ID.",
                    "example": "project-456"
                  },
                  "externalRef": {
                    "type": "string",
                    "description": "The ID used by the provider to identify the app (optional).",
                    "example": "external-id-123"
                  },
                  "provider": {
                    "type": "string",
                    "description": "The SaaS provider that this app connects to.",
                    "example": "salesforce"
                  },
                  "clientId": {
                    "type": "string",
                    "description": "The OAuth client ID for this app.",
                    "example": "client-id-123"
                  },
                  "scopes": {
                    "type": "array",
                    "description": "The OAuth scopes for this app.",
                    "items": {
                      "type": "string",
                      "example": [
                        "oauth",
                        "offline",
                        "crm.read"
                      ]
                    }
                  },
                  "createTime": {
                    "type": "string",
                    "description": "The time the provider app was created.",
                    "format": "date-time"
                  },
                  "updateTime": {
                    "type": "string",
                    "description": "The time the provider app was updated.",
                    "format": "date-time"
                  }
                }
              },
              "group": {
                "title": "Group",
                "required": [
                  "createTime",
                  "groupName",
                  "groupRef",
                  "projectId"
                ],
                "type": "object",
                "properties": {
                  "groupRef": {
                    "type": "string",
                    "description": "The ID of the user group that has access to this installation.",
                    "example": "group-123"
                  },
                  "groupName": {
                    "type": "string",
                    "description": "The name of the user group that has access to this installation.",
                    "example": "Super Customer"
                  },
                  "projectId": {
                    "type": "string",
                    "description": "The Ampersand project ID.",
                    "example": "project-456"
                  },
                  "createTime": {
                    "type": "string",
                    "description": "The time the group was created.",
                    "format": "date-time",
                    "example": "2023-07-13T21:34:44.816Z"
                  },
                  "updateTime": {
                    "type": "string",
                    "description": "The time the group was last updated.",
                    "format": "date-time",
                    "example": "2023-07-13T21:34:44.816Z"
                  }
                }
              },
              "consumer": {
                "title": "Consumer",
                "required": [
                  "consumerName",
                  "consumerRef",
                  "createTime",
                  "projectId"
                ],
                "type": "object",
                "properties": {
                  "consumerRef": {
                    "type": "string",
                    "description": "The consumer reference.",
                    "example": "consumer-123"
                  },
                  "consumerName": {
                    "type": "string",
                    "description": "The name of the consumer.",
                    "example": "Super Customer"
                  },
                  "projectId": {
                    "type": "string",
                    "description": "The Ampersand project ID.",
                    "example": "project-456"
                  },
                  "createTime": {
                    "type": "string",
                    "description": "The time the consumer was created.",
                    "format": "date-time",
                    "example": "2023-07-13T21:34:44.816Z"
                  },
                  "updateTime": {
                    "type": "string",
                    "description": "The time the consumer was last updated.",
                    "format": "date-time",
                    "example": "2023-07-13T21:34:44.816Z"
                  }
                }
              },
              "providerWorkspaceRef": {
                "type": "string",
                "description": "If available, the identifier for the provider workspace (e.g. \"salesforce-instance-domain\")",
                "example": "provider-workspace-123"
              },
              "providerConsumerRef": {
                "type": "string",
                "description": "If available, the ID that Salesforce/Hubspot uses to identify this user (e.g. Salesforce has IDs in the form of https://login.salesforce.com/id/00D4x0000019CQTEA2/0054x000000orJ4AA)",
                "example": "provider-consumer-123"
              },
              "createTime": {
                "type": "string",
                "description": "The time the connection was created.",
                "format": "date-time",
                "example": "2023-07-13T21:34:44.816Z"
              },
              "updateTime": {
                "type": "string",
                "description": "The time the connection was last updated.",
                "format": "date-time",
                "example": "2023-07-13T21:34:44.816Z"
              },
              "authScheme": {
                "type": "string",
                "description": "The authentication scheme used for this connection.",
                "example": "oauth2/authorizationCode",
                "enum": [
                  "none",
                  "apiKey",
                  "basic",
                  "oauth2/authorizationCode",
                  "oauth2/authorizationCodePKCE",
                  "oauth2/clientCredentials",
                  "oauth2/password"
                ]
              },
              "status": {
                "type": "string",
                "description": "The status of the connection.",
                "example": "working",
                "enum": [
                  "created",
                  "working",
                  "bad_credentials"
                ]
              },
              "oauth2AuthorizationCode": {
                "title": "OAuth2 AuthorizationCode Token",
                "type": "object",
                "properties": {
                  "accessToken": {
                    "type": "object",
                    "required": [
                      "token"
                    ],
                    "description": "The access token for the connection.",
                    "properties": {
                      "token": {
                        "type": "string"
                      },
                      "issuedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-22T18:55:28.456076Z"
                      },
                      "expiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-22T18:55:28.456076Z"
                      }
                    }
                  },
                  "refreshToken": {
                    "type": "object",
                    "required": [
                      "token"
                    ],
                    "description": "The refresh token to use for the connection.",
                    "properties": {
                      "token": {
                        "type": "string"
                      },
                      "issuedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-04-22T18:55:28.456076Z"
                      },
                      "expiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-10-22T18:55:28.456076Z"
                      }
                    }
                  },
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The scopes for the tokens."
                  }
                }
              },
              "apiKey": {
                "type": "string",
                "description": "The API key used while making the connection.",
                "example": "api-key-123"
              }
            }
          },
          "createTime": {
            "type": "string",
            "description": "The time the integration was first installed.",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "The person who did the installation, in the format of \"consumer:{consumer-id}\".",
            "example": "consumer:consumer-123"
          },
          "updateTime": {
            "type": "string",
            "description": "The time the installation was last updated with a new config.",
            "format": "date-time"
          },
          "config": {
            "title": "Config",
            "required": [
              "content",
              "createTime",
              "createdBy",
              "id",
              "revisionId"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The config ID.",
                "example": "config-123"
              },
              "revisionId": {
                "type": "string",
                "description": "The ID of the revision that this config is based on.",
                "example": "revision-123"
              },
              "createTime": {
                "type": "string",
                "description": "The time the config was created.",
                "format": "date-time"
              },
              "createdBy": {
                "type": "string",
                "description": "The person who created the config, in the format of \"consumer:{consumer-id}\" or \"builder:{builder-id}\".",
                "example": "builder:builder-123"
              },
              "content": {
                "title": "Config Content",
                "allOf": [
                  {
                    "title": "Base Config Content",
                    "type": "object",
                    "properties": {
                      "provider": {
                        "description": "The SaaS API that we are integrating with.",
                        "example": "salesforce",
                        "type": "string"
                      },
                      "read": {
                        "title": "Base Read Config",
                        "type": "object",
                        "properties": {
                          "objects": {
                            "type": "object",
                            "description": "This is a map of object names to their configuration.",
                            "additionalProperties": {
                              "title": "Base Read Config Object",
                              "type": "object",
                              "properties": {
                                "objectName": {
                                  "description": "The name of the object to read from.",
                                  "example": "account",
                                  "type": "string",
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required"
                                  }
                                },
                                "schedule": {
                                  "type": "string",
                                  "description": "The schedule for reading the object, in cron syntax.",
                                  "example": "*/15 * * * *"
                                },
                                "destination": {
                                  "description": "The name of the destination that the result should be sent to.",
                                  "example": "accountWebhook",
                                  "type": "string"
                                },
                                "selectedFields": {
                                  "type": "object",
                                  "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                                  "example": "{ phone: true, fax: true }",
                                  "additionalProperties": {
                                    "type": "boolean"
                                  }
                                },
                                "selectedValueMappings": {
                                  "type": "object",
                                  "description": "This is a map of field names to their value mappings.",
                                  "example": {
                                    "stage": {
                                      "open": "scheduled",
                                      "closedWon": "won",
                                      "closedLost": "lost"
                                    }
                                  },
                                  "x-go-type-skip-optional-pointer": true,
                                  "additionalProperties": {
                                    "title": "Selected Value Mappings",
                                    "type": "object",
                                    "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                                    "example": {
                                      "open": "scheduled",
                                      "closedWon": "won",
                                      "closedLost": "lost"
                                    },
                                    "x-go-type-skip-optional-pointer": true,
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "selectedFieldMappings": {
                                  "type": "object",
                                  "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                                  "example": "{ phoneNumber: phone, faxNumber: fax }",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "selectedFieldsAuto": {
                                  "title": "Selected Fields Auto Config",
                                  "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                                  "type": "string",
                                  "enum": [
                                    "all"
                                  ],
                                  "x-enum-varnames": [
                                    "SelectedFieldsAll"
                                  ]
                                },
                                "backfill": {
                                  "title": "Backfill Config",
                                  "type": "object",
                                  "required": [
                                    "defaultPeriod"
                                  ],
                                  "properties": {
                                    "defaultPeriod": {
                                      "title": "Default Period Config",
                                      "type": "object",
                                      "properties": {
                                        "days": {
                                          "type": "integer",
                                          "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                          "minimum": 0,
                                          "example": 30,
                                          "x-oapi-codegen-extra-tags": {
                                            "validate": "required_without=FullHistory,omitempty,min=0"
                                          }
                                        },
                                        "fullHistory": {
                                          "type": "boolean",
                                          "description": "If true, backfill all history. Required if days is not set.",
                                          "example": false,
                                          "x-oapi-codegen-extra-tags": {
                                            "validate": "required_without=Days"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "write": {
                        "title": "Base Write Config",
                        "type": "object",
                        "properties": {
                          "objects": {
                            "type": "object",
                            "description": "This is a map of object names to their configuration.",
                            "additionalProperties": {
                              "title": "Base Write Config Object",
                              "type": "object",
                              "required": [
                                "objectName"
                              ],
                              "properties": {
                                "objectName": {
                                  "description": "The name of the object to write to.",
                                  "example": "account",
                                  "type": "string",
                                  "x-oapi-codegen-extra-tags": {
                                    "validate": "required"
                                  }
                                },
                                "selectedValueDefaults": {
                                  "type": "object",
                                  "deprecated": true,
                                  "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                                  "x-go-type-skip-optional-pointer": true,
                                  "additionalProperties": {
                                    "title": "Value Default (Legacy)",
                                    "deprecated": true,
                                    "x-go-type": "any",
                                    "oneOf": [
                                      {
                                        "title": "Value Default String",
                                        "type": "object",
                                        "required": [
                                          "value"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "string",
                                            "description": "The value to be used as a default."
                                          },
                                          "applyOnUpdate": {
                                            "type": "string",
                                            "enum": [
                                              "always",
                                              "never"
                                            ],
                                            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                          }
                                        }
                                      },
                                      {
                                        "title": "Value Default Integer",
                                        "type": "object",
                                        "required": [
                                          "value"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "integer",
                                            "description": "The value to be used as a default."
                                          },
                                          "applyOnUpdate": {
                                            "type": "string",
                                            "enum": [
                                              "always",
                                              "never"
                                            ],
                                            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                          }
                                        }
                                      },
                                      {
                                        "title": "Value Default Boolean",
                                        "type": "object",
                                        "required": [
                                          "value"
                                        ],
                                        "properties": {
                                          "value": {
                                            "type": "boolean",
                                            "description": "The value to be used as a default."
                                          },
                                          "applyOnUpdate": {
                                            "type": "string",
                                            "enum": [
                                              "always",
                                              "never"
                                            ],
                                            "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "selectedFieldSettings": {
                                  "type": "object",
                                  "description": "This is a map of field names to their settings.",
                                  "x-go-type-skip-optional-pointer": true,
                                  "additionalProperties": {
                                    "title": "Field setting",
                                    "type": "object",
                                    "properties": {
                                      "default": {
                                        "title": "Default value for a field",
                                        "description": "Only use one of stringValue, integerValue, booleanValue.",
                                        "type": "object",
                                        "properties": {
                                          "stringValue": {
                                            "type": "string",
                                            "description": "The default string value to apply to a field"
                                          },
                                          "integerValue": {
                                            "type": "integer",
                                            "description": "The default integer value to apply to a field"
                                          },
                                          "booleanValue": {
                                            "type": "boolean",
                                            "description": "The default boolean value to apply to a field"
                                          }
                                        }
                                      },
                                      "writeOnCreate": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ],
                                        "default": "always",
                                        "x-go-type-skip-optional-pointer": true,
                                        "description": "Whether the default value should be applied when creating a record."
                                      },
                                      "writeOnUpdate": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ],
                                        "default": "always",
                                        "x-go-type-skip-optional-pointer": true,
                                        "description": "Whether the default value should be applied when updating a record."
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "proxy": {
                        "title": "Base Proxy Config",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "provider"
                    ],
                    "properties": {
                      "read": {
                        "x-go-type": "ReadConfig"
                      },
                      "write": {
                        "x-go-type": "WriteConfig"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "Config": {
        "title": "Config",
        "required": [
          "content",
          "createTime",
          "createdBy",
          "id",
          "revisionId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The config ID.",
            "example": "config-123"
          },
          "revisionId": {
            "type": "string",
            "description": "The ID of the revision that this config is based on.",
            "example": "revision-123"
          },
          "createTime": {
            "type": "string",
            "description": "The time the config was created.",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "description": "The person who created the config, in the format of \"consumer:{consumer-id}\" or \"builder:{builder-id}\".",
            "example": "builder:builder-123"
          },
          "content": {
            "title": "Config Content",
            "allOf": [
              {
                "title": "Base Config Content",
                "type": "object",
                "properties": {
                  "provider": {
                    "description": "The SaaS API that we are integrating with.",
                    "example": "salesforce",
                    "type": "string"
                  },
                  "read": {
                    "title": "Base Read Config",
                    "type": "object",
                    "properties": {
                      "objects": {
                        "type": "object",
                        "description": "This is a map of object names to their configuration.",
                        "additionalProperties": {
                          "title": "Base Read Config Object",
                          "type": "object",
                          "properties": {
                            "objectName": {
                              "description": "The name of the object to read from.",
                              "example": "account",
                              "type": "string",
                              "x-oapi-codegen-extra-tags": {
                                "validate": "required"
                              }
                            },
                            "schedule": {
                              "type": "string",
                              "description": "The schedule for reading the object, in cron syntax.",
                              "example": "*/15 * * * *"
                            },
                            "destination": {
                              "description": "The name of the destination that the result should be sent to.",
                              "example": "accountWebhook",
                              "type": "string"
                            },
                            "selectedFields": {
                              "type": "object",
                              "description": "This is a map of field names to booleans indicating whether they should be read. If a field is already included in `selectedFieldMappings`, it does not need to be included here.",
                              "example": "{ phone: true, fax: true }",
                              "additionalProperties": {
                                "type": "boolean"
                              }
                            },
                            "selectedValueMappings": {
                              "type": "object",
                              "description": "This is a map of field names to their value mappings.",
                              "example": {
                                "stage": {
                                  "open": "scheduled",
                                  "closedWon": "won",
                                  "closedLost": "lost"
                                }
                              },
                              "x-go-type-skip-optional-pointer": true,
                              "additionalProperties": {
                                "title": "Selected Value Mappings",
                                "type": "object",
                                "description": "This is a map of values to their mappings. The key is the value delivered to the webhook, the value is the value coming from the provider API.",
                                "example": {
                                  "open": "scheduled",
                                  "closedWon": "won",
                                  "closedLost": "lost"
                                },
                                "x-go-type-skip-optional-pointer": true,
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "selectedFieldMappings": {
                              "type": "object",
                              "description": "This is a map of mapToNames to field names. (A mapTo name is the name the builder wants to map a field to when it lands in their destination.)",
                              "example": "{ phoneNumber: phone, faxNumber: fax }",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "selectedFieldsAuto": {
                              "title": "Selected Fields Auto Config",
                              "description": "If selectedFieldsAuto is set to all, all fields will be read.",
                              "type": "string",
                              "enum": [
                                "all"
                              ],
                              "x-enum-varnames": [
                                "SelectedFieldsAll"
                              ]
                            },
                            "backfill": {
                              "title": "Backfill Config",
                              "type": "object",
                              "required": [
                                "defaultPeriod"
                              ],
                              "properties": {
                                "defaultPeriod": {
                                  "title": "Default Period Config",
                                  "type": "object",
                                  "properties": {
                                    "days": {
                                      "type": "integer",
                                      "description": "Number of days in past to backfill from. 0 is no backfill. e.g) if 10, then backfill last 10 days of data. Required if fullHistory is not set.",
                                      "minimum": 0,
                                      "example": 30,
                                      "x-oapi-codegen-extra-tags": {
                                        "validate": "required_without=FullHistory,omitempty,min=0"
                                      }
                                    },
                                    "fullHistory": {
                                      "type": "boolean",
                                      "description": "If true, backfill all history. Required if days is not set.",
                                      "example": false,
                                      "x-oapi-codegen-extra-tags": {
                                        "validate": "required_without=Days"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "write": {
                    "title": "Base Write Config",
                    "type": "object",
                    "properties": {
                      "objects": {
                        "type": "object",
                        "description": "This is a map of object names to their configuration.",
                        "additionalProperties": {
                          "title": "Base Write Config Object",
                          "type": "object",
                          "required": [
                            "objectName"
                          ],
                          "properties": {
                            "objectName": {
                              "description": "The name of the object to write to.",
                              "example": "account",
                              "type": "string",
                              "x-oapi-codegen-extra-tags": {
                                "validate": "required"
                              }
                            },
                            "selectedValueDefaults": {
                              "type": "object",
                              "deprecated": true,
                              "description": "This is a map of field names to default values. These values will be used when writing to the object.",
                              "x-go-type-skip-optional-pointer": true,
                              "additionalProperties": {
                                "title": "Value Default (Legacy)",
                                "deprecated": true,
                                "x-go-type": "any",
                                "oneOf": [
                                  {
                                    "title": "Value Default String",
                                    "type": "object",
                                    "required": [
                                      "value"
                                    ],
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "description": "The value to be used as a default."
                                      },
                                      "applyOnUpdate": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ],
                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                      }
                                    }
                                  },
                                  {
                                    "title": "Value Default Integer",
                                    "type": "object",
                                    "required": [
                                      "value"
                                    ],
                                    "properties": {
                                      "value": {
                                        "type": "integer",
                                        "description": "The value to be used as a default."
                                      },
                                      "applyOnUpdate": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ],
                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                      }
                                    }
                                  },
                                  {
                                    "title": "Value Default Boolean",
                                    "type": "object",
                                    "required": [
                                      "value"
                                    ],
                                    "properties": {
                                      "value": {
                                        "type": "boolean",
                                        "description": "The value to be used as a default."
                                      },
                                      "applyOnUpdate": {
                                        "type": "string",
                                        "enum": [
                                          "always",
                                          "never"
                                        ],
                                        "description": "Whether the default value should be applied when updating a record.\nIf set to `always`, the default value will be applied when updating a record.\nIf set to `never`, the default value will not be applied when updating a record,\nonly when creating a record.\nIf unspecified, then `always` is assumed.\n"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "selectedFieldSettings": {
                              "type": "object",
                              "description": "This is a map of field names to their settings.",
                              "x-go-type-skip-optional-pointer": true,
                              "additionalProperties": {
                                "title": "Field setting",
                                "type": "object",
                                "properties": {
                                  "default": {
                                    "title": "Default value for a field",
                                    "description": "Only use one of stringValue, integerValue, booleanValue.",
                                    "type": "object",
                                    "properties": {
                                      "stringValue": {
                                        "type": "string",
                                        "description": "The default string value to apply to a field"
                                      },
                                      "integerValue": {
                                        "type": "integer",
                                        "description": "The default integer value to apply to a field"
                                      },
                                      "booleanValue": {
                                        "type": "boolean",
                                        "description": "The default boolean value to apply to a field"
                                      }
                                    }
                                  },
                                  "writeOnCreate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "default": "always",
                                    "x-go-type-skip-optional-pointer": true,
                                    "description": "Whether the default value should be applied when creating a record."
                                  },
                                  "writeOnUpdate": {
                                    "type": "string",
                                    "enum": [
                                      "always",
                                      "never"
                                    ],
                                    "default": "always",
                                    "x-go-type-skip-optional-pointer": true,
                                    "description": "Whether the default value should be applied when updating a record."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "proxy": {
                    "title": "Base Proxy Config",
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "provider"
                ],
                "properties": {
                  "read": {
                    "x-go-type": "ReadConfig"
                  },
                  "write": {
                    "x-go-type": "WriteConfig"
                  }
                }
              }
            ]
          }
        }
      },
      "Connection": {
        "title": "Connection",
        "required": [
          "id",
          "createTime",
          "group",
          "consumer",
          "projectId",
          "provider",
          "authScheme",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The connection ID.",
            "example": "connection-123"
          },
          "projectId": {
            "type": "string",
            "description": "The Ampersand project ID.",
            "example": "project-456"
          },
          "provider": {
            "type": "string",
            "description": "The SaaS provider that this Connection is for.",
            "example": "salesforce"
          },
          "providerApp": {
            "title": "Provider App",
            "required": [
              "clientId",
              "createTime",
              "id",
              "projectId",
              "provider"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The provider app ID.",
                "example": "provider-app-123"
              },
              "projectId": {
                "type": "string",
                "description": "The Ampersand project ID.",
                "example": "project-456"
              },
              "externalRef": {
                "type": "string",
                "description": "The ID used by the provider to identify the app (optional).",
                "example": "external-id-123"
              },
              "provider": {
                "type": "string",
                "description": "The SaaS provider that this app connects to.",
                "example": "salesforce"
              },
              "clientId": {
                "type": "string",
                "description": "The OAuth client ID for this app.",
                "example": "client-id-123"
              },
              "scopes": {
                "type": "array",
                "description": "The OAuth scopes for this app.",
                "items": {
                  "type": "string",
                  "example": [
                    "oauth",
                    "offline",
                    "crm.read"
                  ]
                }
              },
              "createTime": {
                "type": "string",
                "description": "The time the provider app was created.",
                "format": "date-time"
              },
              "updateTime": {
                "type": "string",
                "description": "The time the provider app was updated.",
                "format": "date-time"
              }
            }
          },
          "group": {
            "title": "Group",
            "required": [
              "createTime",
              "groupName",
              "groupRef",
              "projectId"
            ],
            "type": "object",
            "properties": {
              "groupRef": {
                "type": "string",
                "description": "The ID of the user group that has access to this installation.",
                "example": "group-123"
              },
              "groupName": {
                "type": "string",
                "description": "The name of the user group that has access to this installation.",
                "example": "Super Customer"
              },
              "projectId": {
                "type": "string",
                "description": "The Ampersand project ID.",
                "example": "project-456"
              },
              "createTime": {
                "type": "string",
                "description": "The time the group was created.",
                "format": "date-time",
                "example": "2023-07-13T21:34:44.816Z"
              },
              "updateTime": {
                "type": "string",
                "description": "The time the group was last updated.",
                "format": "date-time",
                "example": "2023-07-13T21:34:44.816Z"
              }
            }
          },
          "consumer": {
            "title": "Consumer",
            "required": [
              "consumerName",
              "consumerRef",
              "createTime",
              "projectId"
            ],
            "type": "object",
            "properties": {
              "consumerRef": {
                "type": "string",
                "description": "The consumer reference.",
                "example": "consumer-123"
              },
              "consumerName": {
                "type": "string",
                "description": "The name of the consumer.",
                "example": "Super Customer"
              },
              "projectId": {
                "type": "string",
                "description": "The Ampersand project ID.",
                "example": "project-456"
              },
              "createTime": {
                "type": "string",
                "description": "The time the consumer was created.",
                "format": "date-time",
                "example": "2023-07-13T21:34:44.816Z"
              },
              "updateTime": {
                "type": "string",
                "description": "The time the consumer was last updated.",
                "format": "date-time",
                "example": "2023-07-13T21:34:44.816Z"
              }
            }
          },
          "providerWorkspaceRef": {
            "type": "string",
            "description": "If available, the identifier for the provider workspace (e.g. \"salesforce-instance-domain\")",
            "example": "provider-workspace-123"
          },
          "providerConsumerRef": {
            "type": "string",
            "description": "If available, the ID that Salesforce/Hubspot uses to identify this user (e.g. Salesforce has IDs in the form of https://login.salesforce.com/id/00D4x0000019CQTEA2/0054x000000orJ4AA)",
            "example": "provider-consumer-123"
          },
          "createTime": {
            "type": "string",
            "description": "The time the connection was created.",
            "format": "date-time",
            "example": "2023-07-13T21:34:44.816Z"
          },
          "updateTime": {
            "type": "string",
            "description": "The time the connection was last updated.",
            "format": "date-time",
            "example": "2023-07-13T21:34:44.816Z"
          },
          "authScheme": {
            "type": "string",
            "description": "The authentication scheme used for this connection.",
            "example": "oauth2/authorizationCode",
            "enum": [
              "none",
              "apiKey",
              "basic",
              "oauth2/authorizationCode",
              "oauth2/authorizationCodePKCE",
              "oauth2/clientCredentials",
              "oauth2/password"
            ]
          },
          "status": {
            "type": "string",
            "description": "The status of the connection.",
            "example": "working",
            "enum": [
              "created",
              "working",
              "bad_credentials"
            ]
          },
          "oauth2AuthorizationCode": {
            "title": "OAuth2 AuthorizationCode Token",
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "object",
                "required": [
                  "token"
                ],
                "description": "The access token for the connection.",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "issuedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-04-22T18:55:28.456076Z"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-10-22T18:55:28.456076Z"
                  }
                }
              },
              "refreshToken": {
                "type": "object",
                "required": [
                  "token"
                ],
                "description": "The refresh token to use for the connection.",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "issuedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-04-22T18:55:28.456076Z"
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-10-22T18:55:28.456076Z"
                  }
                }
              },
              "scopes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "The scopes for the tokens."
              }
            }
          },
          "apiKey": {
            "type": "string",
            "description": "The API key used while making the connection.",
            "example": "api-key-123"
          }
        }
      },
      "Oauth2AuthorizationCodeTokensOnly": {
        "title": "OAuth2 AuthorizationCode Token",
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "object",
            "required": [
              "token"
            ],
            "description": "The access token for the connection.",
            "properties": {
              "token": {
                "type": "string"
              },
              "issuedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-04-22T18:55:28.456076Z"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-10-22T18:55:28.456076Z"
              }
            }
          },
          "refreshToken": {
            "type": "object",
            "required": [
              "token"
            ],
            "description": "The refresh token to use for the connection.",
            "properties": {
              "token": {
                "type": "string"
              },
              "issuedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-04-22T18:55:28.456076Z"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-10-22T18:55:28.456076Z"
              }
            }
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The scopes for the tokens."
          }
        }
      },
      "Oauth2AuthorizationCode": {
        "title": "OAuth2 Authorization Code",
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "object",
            "required": [
              "token"
            ],
            "description": "The access token for the connection.",
            "properties": {
              "token": {
                "type": "string"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time"
              },
              "issuedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "refreshToken": {
            "type": "object",
            "required": [
              "token"
            ],
            "description": "The refresh token to use for the connection.",
            "properties": {
              "token": {
                "type": "string"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time"
              },
              "issuedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The scopes for the tokens."
          }
        }
      },
      "ImportConnectionRequest": {
        "title": "Import Connection Request",
        "required": [
          "groupRef",
          "groupName",
          "consumerRef",
          "consumerName",
          "providerWorkspaceRef",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "providerAppId": {
            "description": "ID of the provider app (e.g. Salesforce connected app), returned from a CreateProviderApp call. If omitted, the default provider app that was set up on the Ampersand Dashboard is assumed.",
            "type": "string"
          },
          "groupRef": {
            "description": "The ID of the user group that has access to this installation. This is any ID that your app uses to identify a group of users - such as an org, team, or workspace.",
            "type": "string"
          },
          "groupName": {
            "description": "The display name of the user group that has access to this installation.",
            "type": "string"
          },
          "consumerRef": {
            "description": "The ID of the user whose credential was used for this connection. This is the ID that your app uses to identify a user - such as a user ID or username.",
            "type": "string"
          },
          "consumerName": {
            "description": "The display name of the user whose credential was used for this connection.",
            "type": "string"
          },
          "providerWorkspaceRef": {
            "type": "string",
            "description": "The identifier for the provider workspace (e.g. the Salesforce subdomain)",
            "example": "provider-workspace-123"
          },
          "providerConsumerRef": {
            "type": "string",
            "description": "The ID that Salesforce/Hubspot uses to identify this user (e.g. Salesforce has IDs in the form of https://login.salesforce.com/id/00D4x0000019CQTEA2/0054x000000orJ4AA)",
            "example": "provider-consumer-123"
          },
          "refreshToken": {
            "type": "string",
            "description": "The refresh token."
          },
          "scopes": {
            "type": "array",
            "description": "The OAuth scopes for this token. If omitted, will default to the scopes of the Provider App.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Group": {
        "title": "Group",
        "required": [
          "createTime",
          "groupName",
          "groupRef",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "groupRef": {
            "type": "string",
            "description": "The ID of the user group that has access to this installation.",
            "example": "group-123"
          },
          "groupName": {
            "type": "string",
            "description": "The name of the user group that has access to this installation.",
            "example": "Super Customer"
          },
          "projectId": {
            "type": "string",
            "description": "The Ampersand project ID.",
            "example": "project-456"
          },
          "createTime": {
            "type": "string",
            "description": "The time the group was created.",
            "format": "date-time",
            "example": "2023-07-13T21:34:44.816Z"
          },
          "updateTime": {
            "type": "string",
            "description": "The time the group was last updated.",
            "format": "date-time",
            "example": "2023-07-13T21:34:44.816Z"
          }
        }
      },
      "Consumer": {
        "title": "Consumer",
        "required": [
          "consumerName",
          "consumerRef",
          "createTime",
          "projectId"
        ],
        "type": "object",
        "properties": {
          "consumerRef": {
            "type": "string",
            "description": "The consumer reference.",
            "example": "consumer-123"
          },
          "consumerName": {
            "type": "string",
            "description": "The name of the consumer.",
            "example": "Super Customer"
          },
          "projectId": {
            "type": "string",
            "description": "The Ampersand project ID.",
            "example": "project-456"
          },
          "createTime": {
            "type": "string",
            "description": "The time the consumer was created.",
            "format": "date-time",
            "example": "2023-07-13T21:34:44.816Z"
          },
          "updateTime": {
            "type": "string",
            "description": "The time the consumer was last updated.",
            "format": "date-time",
            "example": "2023-07-13T21:34:44.816Z"
          }
        }
      },
      "Operation": {
        "title": "Operation",
        "required": [
          "projectId",
          "integrationId",
          "installationId",
          "configId",
          "actionType",
          "status",
          "id"
        ],
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "description": "The Ampersand project ID.",
            "example": "project-456"
          },
          "integrationId": {
            "type": "string",
            "description": "The integration ID.",
            "example": "integration-123"
          },
          "configId": {
            "type": "string",
            "description": "The config ID.",
            "example": "config-123"
          },
          "actionType": {
            "type": "string",
            "description": "The action type to perform for the given object.",
            "example": "read"
          },
          "id": {
            "type": "string",
            "description": "The operation ID.",
            "example": "operation-123"
          },
          "installationId": {
            "type": "string",
            "description": "The Ampersand installation ID.",
            "example": "installation-123"
          },
          "status": {
            "type": "string",
            "description": "The status of the operation.",
            "example": "success"
          },
          "result": {
            "type": "string",
            "description": "The result of the operation.",
            "example": "[object] No changes"
          },
          "metadata": {
            "type": "object",
            "description": "Metadata associated with the operation.",
            "example": {}
          },
          "createTime": {
            "type": "string",
            "description": "The time the operation was created.",
            "format": "date-time",
            "example": "2023-07-13T21:34:44.816Z"
          }
        }
      },
      "Log": {
        "title": "Log",
        "type": "object",
        "required": [
          "timestamp",
          "severity",
          "message"
        ],
        "properties": {
          "timestamp": {
            "type": "string",
            "description": "The time the log was created.",
            "example": "2023-07-13T21:34:44.816Z"
          },
          "message": {
            "type": "object",
            "description": "The log message object.",
            "required": [
              "msg"
            ],
            "properties": {
              "msg": {
                "type": "string",
                "description": "The use-readable message.",
                "example": "This is a log message"
              },
              "error": {
                "type": "string",
                "description": "The error message, if there has been an error."
              },
              "operation_id": {
                "type": "string",
                "description": "The operation ID."
              }
            }
          },
          "severity": {
            "type": "string",
            "description": "The severity of the log.",
            "example": "DEBUG"
          }
        }
      },
      "SignedUrl": {
        "title": "Signed URL",
        "type": "object",
        "required": [
          "url",
          "bucket",
          "path"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "The signed URL to upload the zip file to."
          },
          "bucket": {
            "type": "string",
            "description": "The bucket (will match the bucket part of the url)."
          },
          "path": {
            "type": "string",
            "description": "The path (will match the path part of the url)."
          }
        }
      },
      "ApiKeyScopes": {
        "title": "API Key Scopes",
        "type": "array",
        "description": "The scopes for the API key.",
        "items": {
          "type": "string",
          "example": [
            "full",
            "frontend"
          ]
        }
      },
      "ApiKeyRequest": {
        "title": "API Key Request",
        "type": "object",
        "required": [
          "label"
        ],
        "properties": {
          "label": {
            "type": "string",
            "description": "A short name for the API key.",
            "example": "MailMonkey API Key"
          },
          "scopes": {
            "title": "API Key Scopes",
            "type": "array",
            "description": "The scopes for the API key.",
            "items": {
              "type": "string",
              "example": [
                "full",
                "frontend"
              ]
            }
          }
        }
      },
      "ApiKey": {
        "title": "API Key",
        "type": "object",
        "required": [
          "key",
          "projectId",
          "label",
          "scopes"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "The API key.",
            "example": "api-key-123"
          },
          "label": {
            "type": "string",
            "description": "A short name for the API key.",
            "example": "MailMonkey API Key"
          },
          "scopes": {
            "title": "API Key Scopes",
            "type": "array",
            "description": "The scopes for the API key.",
            "items": {
              "type": "string",
              "example": [
                "full",
                "frontend"
              ]
            }
          },
          "projectId": {
            "type": "string",
            "description": "The project ID.",
            "example": "project-id-123"
          },
          "active": {
            "type": "boolean",
            "description": "Whether the API key is active.",
            "example": true
          }
        }
      },
      "PatchApiKeyRequest": {
        "title": "Patch API Key Request",
        "type": "object",
        "required": [
          "updateMask",
          "apiKey"
        ],
        "properties": {
          "updateMask": {
            "type": "array",
            "example": [
              "label",
              "active",
              "scopes"
            ],
            "items": {
              "type": "string",
              "description": "fields to update.",
              "example": "label"
            }
          },
          "apiKey": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "A short name for the API key.",
                "example": "MailMonkey API Key"
              },
              "active": {
                "type": "boolean",
                "description": "Whether the API key is active.",
                "example": true
              },
              "scopes": {
                "title": "API Key Scopes",
                "type": "array",
                "description": "The scopes for the API key.",
                "items": {
                  "type": "string",
                  "example": [
                    "full",
                    "frontend"
                  ]
                }
              }
            }
          }
        }
      },
      "WebhookHeaders": {
        "title": "Webhook Headers",
        "type": "object",
        "nullable": true,
        "description": "Additional headers to add when Ampersand sends a webhook message",
        "additionalProperties": {
          "type": "string",
          "nullable": false
        },
        "example": {
          "Authorization": "Bearer 1234"
        }
      },
      "Invite": {
        "title": "Invite",
        "type": "object",
        "required": [
          "id",
          "invitedEmail",
          "createTime",
          "parentId",
          "parentType",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The invite ID."
          },
          "invitedEmail": {
            "type": "string",
            "description": "The email address of the person invited."
          },
          "parentType": {
            "type": "string",
            "enum": [
              "org"
            ],
            "description": "The type of entity that the person is invited to."
          },
          "parentId": {
            "type": "string",
            "description": "The ID of the parent (e.g. org ID)."
          },
          "status": {
            "type": "string",
            "description": "The status of the invite.",
            "enum": [
              "pending",
              "accepted",
              "revoked",
              "expired"
            ]
          },
          "createTime": {
            "type": "string",
            "description": "The time the invite was created.",
            "format": "date-time"
          },
          "updateTime": {
            "type": "string",
            "description": "The time the invite was updated.",
            "format": "date-time"
          }
        }
      },
      "Builder": {
        "title": "Builder",
        "type": "object",
        "required": [
          "id",
          "idpProvider",
          "idpRef",
          "createTime"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The builder ID.",
            "example": "builder-id-123"
          },
          "idpProvider": {
            "type": "string",
            "description": "The identity provider",
            "example": "clerk"
          },
          "idpRef": {
            "type": "string",
            "description": "ID used by the identity provider"
          },
          "createTime": {
            "type": "string",
            "description": "The time that the builder joined Ampersand.",
            "format": "date-time"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "primaryEmail": {
            "type": "string"
          }
        }
      },
      "BillingAccount": {
        "title": "Billing Account",
        "type": "object",
        "required": [
          "id",
          "displayName",
          "billingProvider",
          "billingProviderRef"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The billing account ID.",
            "example": "billing-account-123"
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the billing account.",
            "example": "Acme Inc"
          },
          "billingProvider": {
            "type": "string",
            "description": "The billing provider that this account is associated with.",
            "example": "stripe"
          },
          "billingProviderRef": {
            "type": "string",
            "description": "The ID used by the billing provider to identify the account.",
            "example": "acct_1J2k3l4m5n6o7p8q9r0s"
          },
          "createTime": {
            "type": "string",
            "description": "The time the billing account was created.",
            "format": "date-time"
          },
          "updateTime": {
            "type": "string",
            "description": "The time the billing account was last updated.",
            "format": "date-time"
          }
        }
      },
      "BuilderInfo": {
        "title": "Builder Info",
        "type": "object",
        "required": [
          "builder",
          "projectRoles"
        ],
        "properties": {
          "builder": {
            "title": "Builder",
            "type": "object",
            "required": [
              "id",
              "idpProvider",
              "idpRef",
              "createTime"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "The builder ID.",
                "example": "builder-id-123"
              },
              "idpProvider": {
                "type": "string",
                "description": "The identity provider",
                "example": "clerk"
              },
              "idpRef": {
                "type": "string",
                "description": "ID used by the identity provider"
              },
              "createTime": {
                "type": "string",
                "description": "The time that the builder joined Ampersand.",
                "format": "date-time"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "fullName": {
                "type": "string"
              },
              "primaryEmail": {
                "type": "string"
              }
            }
          },
          "projectRoles": {
            "type": "object",
            "description": "A map of project IDs to project roles for the builder.",
            "additionalProperties": {
              "type": "object",
              "required": [
                "role",
                "principalType",
                "principalId",
                "project"
              ],
              "properties": {
                "role": {
                  "type": "string",
                  "description": "The role of the builder in the project.",
                  "example": "admin"
                },
                "principalType": {
                  "type": "string",
                  "description": "The type of the principal.",
                  "enum": [
                    "team",
                    "builder"
                  ]
                },
                "principalId": {
                  "type": "string",
                  "description": "The ID of the team or builder.",
                  "example": "builder-id-123"
                },
                "project": {
                  "title": "Project",
                  "required": [
                    "appName",
                    "createTime",
                    "id",
                    "name"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The project ID.",
                      "example": "project-id-123"
                    },
                    "name": {
                      "type": "string",
                      "description": "The project name.",
                      "example": "mailmonkey-staging"
                    },
                    "appName": {
                      "type": "string",
                      "description": "The name of the application, which is displayed to end users.",
                      "example": "MailMonkey"
                    },
                    "orgId": {
                      "type": "string",
                      "description": "The organization ID that this project belongs to."
                    },
                    "createTime": {
                      "type": "string",
                      "description": "The time the project was created.",
                      "format": "date-time"
                    },
                    "updateTime": {
                      "type": "string",
                      "description": "The time the project was updated.",
                      "format": "date-time"
                    },
                    "entitlements": {
                      "type": "object",
                      "description": "The entitlements for the project.",
                      "properties": {
                        "brandingRemoval": {
                          "type": "object",
                          "required": [
                            "value"
                          ],
                          "x-go-type-skip-optional-pointer": true,
                          "description": "Whether branding can be removed from the UI library.",
                          "properties": {
                            "value": {
                              "type": "boolean",
                              "description": "Whether branding has been removed from the project."
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "orgRole": {
            "type": "object",
            "required": [
              "role",
              "principalType",
              "principalId",
              "org"
            ],
            "properties": {
              "role": {
                "type": "string",
                "description": "The role of the builder in the org.",
                "example": "admin"
              },
              "principalType": {
                "type": "string",
                "description": "The type of the principal.",
                "enum": [
                  "team",
                  "builder"
                ]
              },
              "principalId": {
                "type": "string",
                "description": "The ID of the team or builder.",
                "example": "builder-id-123"
              },
              "org": {
                "title": "Organisation",
                "required": [
                  "id",
                  "label",
                  "createTime",
                  "defaultTeamId"
                ],
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The organization ID.",
                    "example": "org-123"
                  },
                  "label": {
                    "type": "string",
                    "description": "The organization label.",
                    "example": "Acme Inc"
                  },
                  "defaultTeamId": {
                    "type": "string",
                    "description": "The ID of the Everyone team for the org."
                  },
                  "createTime": {
                    "type": "string",
                    "description": "The time the organization was created.",
                    "format": "date-time"
                  },
                  "updateTime": {
                    "type": "string",
                    "description": "The time the organization was updated.",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      "ObjectMetadata": {
        "title": "Object Metadata",
        "type": "object",
        "required": [
          "name",
          "fields"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The provider name of the object",
            "example": "contact"
          },
          "displayName": {
            "type": "string",
            "description": "Human-readable name of the object",
            "example": "Contact"
          },
          "mappedObjectName": {
            "type": "string",
            "example": "people"
          },
          "fields": {
            "type": "object",
            "description": "Map of field metadata keyed by field name",
            "additionalProperties": {
              "title": "Field Metadata",
              "type": "object",
              "required": [
                "fieldName",
                "displayName"
              ],
              "properties": {
                "fieldName": {
                  "type": "string",
                  "description": "The name of the field from the provider API.",
                  "example": "Account ID"
                },
                "displayName": {
                  "type": "string",
                  "description": "The display name of the field from the provider API.",
                  "example": "Account ID"
                },
                "valueType": {
                  "type": "string",
                  "description": "A normalized field type",
                  "enum": [
                    "string",
                    "boolean",
                    "singleSelect",
                    "multiSelect",
                    "date",
                    "datetime",
                    "int",
                    "float",
                    "other"
                  ],
                  "x-go-type-skip-optional-pointer": true
                },
                "providerType": {
                  "type": "string",
                  "description": "Raw field type from the provider API.",
                  "example": "timestamp",
                  "x-go-type-skip-optional-pointer": true
                },
                "readOnly": {
                  "type": "boolean",
                  "description": "Whether the field is read-only.",
                  "example": false,
                  "x-go-type-skip-optional-pointer": true
                },
                "values": {
                  "type": "array",
                  "description": "If the valueType is singleSelect or multiSelect, this is a list of possible values",
                  "x-go-type-skip-optional-pointer": true,
                  "items": {
                    "title": "Field Value",
                    "type": "object",
                    "required": [
                      "value",
                      "displayValue"
                    ],
                    "description": "Represents a field value",
                    "properties": {
                      "value": {
                        "type": "string",
                        "description": "The internal value used by the system",
                        "example": "outbound"
                      },
                      "displayValue": {
                        "type": "string",
                        "description": "The human-readable display value",
                        "example": "Outbound Campaign"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "PaginationInfo": {
        "title": "Pagination Information",
        "type": "object",
        "required": [
          "done"
        ],
        "properties": {
          "done": {
            "type": "boolean",
            "description": "If set to true, this is the last page of results for the given operation. There are no more results & there will be no nextPageToken sent when done is true.",
            "example": false
          },
          "nextPageToken": {
            "type": "string",
            "description": "If present, set this value against your 'pageToken' query parameter in the next API call, which will retrieve the next set of results.",
            "example": "Q9JT+2qfys28V4ODN+UayA=="
          }
        }
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header"
      },
      "APIKeyQueryParam": {
        "type": "apiKey",
        "name": "apiKey",
        "in": "query"
      },
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "APIKeyHeader": []
    }
  ]
}